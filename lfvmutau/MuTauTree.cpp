/* Generated by Cython 0.23.3 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_23_3"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
#define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) (void_result, Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__MuTauTree
#define __PYX_HAVE_API__MuTauTree
#include "TObject.h"
#include "TBranch.h"
#include "TTree.h"
#include "TFile.h"
#include "TTreeFormula.h"
#include "string.h"
#include "stdio.h"
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "MuTauTree.pyx",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_9MuTauTree_MuTauTree;
struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__;
struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where;

/* "MuTauTree.pyx":42
 * warnings.formatwarning = my_warning_format
 * 
 * cdef class MuTauTree:             # <<<<<<<<<<<<<<
 *     # Pointers to tree (may be a chain), current active tree, and current entry
 *     # localentry is the entry in the current tree of the chain
 */
struct __pyx_obj_9MuTauTree_MuTauTree {
  PyObject_HEAD
  struct __pyx_vtabstruct_9MuTauTree_MuTauTree *__pyx_vtab;
  TTree *tree;
  TTree *currentTree;
  int currentTreeNumber;
  long ientry;
  long localentry;
  PyObject *complained;
  TBranch *EmbPtWeight_branch;
  float EmbPtWeight_value;
  TBranch *Eta_branch;
  float Eta_value;
  TBranch *GenWeight_branch;
  float GenWeight_value;
  TBranch *Ht_branch;
  float Ht_value;
  TBranch *LT_branch;
  float LT_value;
  TBranch *Mass_branch;
  float Mass_value;
  TBranch *MassError_branch;
  float MassError_value;
  TBranch *MassErrord1_branch;
  float MassErrord1_value;
  TBranch *MassErrord2_branch;
  float MassErrord2_value;
  TBranch *MassErrord3_branch;
  float MassErrord3_value;
  TBranch *MassErrord4_branch;
  float MassErrord4_value;
  TBranch *Mt_branch;
  float Mt_value;
  TBranch *NUP_branch;
  float NUP_value;
  TBranch *Phi_branch;
  float Phi_value;
  TBranch *Pt_branch;
  float Pt_value;
  TBranch *bjetCISVVeto20Loose_branch;
  float bjetCISVVeto20Loose_value;
  TBranch *bjetCISVVeto20Medium_branch;
  float bjetCISVVeto20Medium_value;
  TBranch *bjetCISVVeto20Tight_branch;
  float bjetCISVVeto20Tight_value;
  TBranch *bjetCISVVeto30Loose_branch;
  float bjetCISVVeto30Loose_value;
  TBranch *bjetCISVVeto30Medium_branch;
  float bjetCISVVeto30Medium_value;
  TBranch *bjetCISVVeto30Tight_branch;
  float bjetCISVVeto30Tight_value;
  TBranch *charge_branch;
  float charge_value;
  TBranch *doubleEGroup_branch;
  float doubleEGroup_value;
  TBranch *doubleEPass_branch;
  float doubleEPass_value;
  TBranch *doubleEPrescale_branch;
  float doubleEPrescale_value;
  TBranch *doubleESingleMuGroup_branch;
  float doubleESingleMuGroup_value;
  TBranch *doubleESingleMuPass_branch;
  float doubleESingleMuPass_value;
  TBranch *doubleESingleMuPrescale_branch;
  float doubleESingleMuPrescale_value;
  TBranch *doubleMuGroup_branch;
  float doubleMuGroup_value;
  TBranch *doubleMuPass_branch;
  float doubleMuPass_value;
  TBranch *doubleMuPrescale_branch;
  float doubleMuPrescale_value;
  TBranch *doubleMuSingleEGroup_branch;
  float doubleMuSingleEGroup_value;
  TBranch *doubleMuSingleEPass_branch;
  float doubleMuSingleEPass_value;
  TBranch *doubleMuSingleEPrescale_branch;
  float doubleMuSingleEPrescale_value;
  TBranch *doubleTauGroup_branch;
  float doubleTauGroup_value;
  TBranch *doubleTauPass_branch;
  float doubleTauPass_value;
  TBranch *doubleTauPrescale_branch;
  float doubleTauPrescale_value;
  TBranch *eVetoMVAIso_branch;
  float eVetoMVAIso_value;
  TBranch *eVetoMVAIsoVtx_branch;
  float eVetoMVAIsoVtx_value;
  TBranch *evt_branch;
  int evt_value;
  TBranch *isdata_branch;
  int isdata_value;
  TBranch *jetVeto20_branch;
  float jetVeto20_value;
  TBranch *jetVeto20_DR05_branch;
  float jetVeto20_DR05_value;
  TBranch *jetVeto30_branch;
  float jetVeto30_value;
  TBranch *jetVeto30_DR05_branch;
  float jetVeto30_DR05_value;
  TBranch *jetVeto40_branch;
  float jetVeto40_value;
  TBranch *jetVeto40_DR05_branch;
  float jetVeto40_DR05_value;
  TBranch *lumi_branch;
  int lumi_value;
  TBranch *mAbsEta_branch;
  float mAbsEta_value;
  TBranch *mBestTrackType_branch;
  float mBestTrackType_value;
  TBranch *mCharge_branch;
  float mCharge_value;
  TBranch *mComesFromHiggs_branch;
  float mComesFromHiggs_value;
  TBranch *mEffectiveArea2011_branch;
  float mEffectiveArea2011_value;
  TBranch *mEffectiveArea2012_branch;
  float mEffectiveArea2012_value;
  TBranch *mEta_branch;
  float mEta_value;
  TBranch *mGenCharge_branch;
  float mGenCharge_value;
  TBranch *mGenEnergy_branch;
  float mGenEnergy_value;
  TBranch *mGenEta_branch;
  float mGenEta_value;
  TBranch *mGenMotherPdgId_branch;
  float mGenMotherPdgId_value;
  TBranch *mGenPdgId_branch;
  float mGenPdgId_value;
  TBranch *mGenPhi_branch;
  float mGenPhi_value;
  TBranch *mGenPt_branch;
  float mGenPt_value;
  TBranch *mGenVZ_branch;
  float mGenVZ_value;
  TBranch *mGenVtxPVMatch_branch;
  float mGenVtxPVMatch_value;
  TBranch *mIP3D_branch;
  float mIP3D_value;
  TBranch *mIP3DErr_branch;
  float mIP3DErr_value;
  TBranch *mIsGlobal_branch;
  float mIsGlobal_value;
  TBranch *mIsPFMuon_branch;
  float mIsPFMuon_value;
  TBranch *mIsTracker_branch;
  float mIsTracker_value;
  TBranch *mJetArea_branch;
  float mJetArea_value;
  TBranch *mJetBtag_branch;
  float mJetBtag_value;
  TBranch *mJetEtaEtaMoment_branch;
  float mJetEtaEtaMoment_value;
  TBranch *mJetEtaPhiMoment_branch;
  float mJetEtaPhiMoment_value;
  TBranch *mJetEtaPhiSpread_branch;
  float mJetEtaPhiSpread_value;
  TBranch *mJetPFCISVBtag_branch;
  float mJetPFCISVBtag_value;
  TBranch *mJetPartonFlavour_branch;
  float mJetPartonFlavour_value;
  TBranch *mJetPhiPhiMoment_branch;
  float mJetPhiPhiMoment_value;
  TBranch *mJetPt_branch;
  float mJetPt_value;
  TBranch *mLowestMll_branch;
  float mLowestMll_value;
  TBranch *mMass_branch;
  float mMass_value;
  TBranch *mMatchedStations_branch;
  float mMatchedStations_value;
  TBranch *mMatchesDoubleESingleMu_branch;
  float mMatchesDoubleESingleMu_value;
  TBranch *mMatchesDoubleMu_branch;
  float mMatchesDoubleMu_value;
  TBranch *mMatchesDoubleMuSingleE_branch;
  float mMatchesDoubleMuSingleE_value;
  TBranch *mMatchesSingleESingleMu_branch;
  float mMatchesSingleESingleMu_value;
  TBranch *mMatchesSingleMu_branch;
  float mMatchesSingleMu_value;
  TBranch *mMatchesSingleMuSingleE_branch;
  float mMatchesSingleMuSingleE_value;
  TBranch *mMatchesSingleMu_leg1_branch;
  float mMatchesSingleMu_leg1_value;
  TBranch *mMatchesSingleMu_leg1_noiso_branch;
  float mMatchesSingleMu_leg1_noiso_value;
  TBranch *mMatchesSingleMu_leg2_branch;
  float mMatchesSingleMu_leg2_value;
  TBranch *mMatchesSingleMu_leg2_noiso_branch;
  float mMatchesSingleMu_leg2_noiso_value;
  TBranch *mMatchesTripleMu_branch;
  float mMatchesTripleMu_value;
  TBranch *mMtToMET_branch;
  float mMtToMET_value;
  TBranch *mMtToPFMET_branch;
  float mMtToPFMET_value;
  TBranch *mMtToPfMet_Ty1_branch;
  float mMtToPfMet_Ty1_value;
  TBranch *mMtToPfMet_jes_branch;
  float mMtToPfMet_jes_value;
  TBranch *mMtToPfMet_mes_branch;
  float mMtToPfMet_mes_value;
  TBranch *mMtToPfMet_tes_branch;
  float mMtToPfMet_tes_value;
  TBranch *mMtToPfMet_ues_branch;
  float mMtToPfMet_ues_value;
  TBranch *mMuonHits_branch;
  float mMuonHits_value;
  TBranch *mNearestZMass_branch;
  float mNearestZMass_value;
  TBranch *mNormTrkChi2_branch;
  float mNormTrkChi2_value;
  TBranch *mPFChargedIso_branch;
  float mPFChargedIso_value;
  TBranch *mPFIDLoose_branch;
  float mPFIDLoose_value;
  TBranch *mPFIDMedium_branch;
  float mPFIDMedium_value;
  TBranch *mPFIDTight_branch;
  float mPFIDTight_value;
  TBranch *mPFNeutralIso_branch;
  float mPFNeutralIso_value;
  TBranch *mPFPUChargedIso_branch;
  float mPFPUChargedIso_value;
  TBranch *mPFPhotonIso_branch;
  float mPFPhotonIso_value;
  TBranch *mPVDXY_branch;
  float mPVDXY_value;
  TBranch *mPVDZ_branch;
  float mPVDZ_value;
  TBranch *mPhi_branch;
  float mPhi_value;
  TBranch *mPixHits_branch;
  float mPixHits_value;
  TBranch *mPt_branch;
  float mPt_value;
  TBranch *mRank_branch;
  float mRank_value;
  TBranch *mRelPFIsoDBDefault_branch;
  float mRelPFIsoDBDefault_value;
  TBranch *mRelPFIsoRho_branch;
  float mRelPFIsoRho_value;
  TBranch *mRelPFIsoRhoFSR_branch;
  float mRelPFIsoRhoFSR_value;
  TBranch *mRho_branch;
  float mRho_value;
  TBranch *mSIP2D_branch;
  float mSIP2D_value;
  TBranch *mSIP3D_branch;
  float mSIP3D_value;
  TBranch *mTkLayersWithMeasurement_branch;
  float mTkLayersWithMeasurement_value;
  TBranch *mToMETDPhi_branch;
  float mToMETDPhi_value;
  TBranch *mTypeCode_branch;
  int mTypeCode_value;
  TBranch *mVZ_branch;
  float mVZ_value;
  TBranch *m_t_CosThetaStar_branch;
  float m_t_CosThetaStar_value;
  TBranch *m_t_DPhi_branch;
  float m_t_DPhi_value;
  TBranch *m_t_DR_branch;
  float m_t_DR_value;
  TBranch *m_t_Eta_branch;
  float m_t_Eta_value;
  TBranch *m_t_Mass_branch;
  float m_t_Mass_value;
  TBranch *m_t_Mt_branch;
  float m_t_Mt_value;
  TBranch *m_t_PZeta_branch;
  float m_t_PZeta_value;
  TBranch *m_t_PZetaVis_branch;
  float m_t_PZetaVis_value;
  TBranch *m_t_Phi_branch;
  float m_t_Phi_value;
  TBranch *m_t_Pt_branch;
  float m_t_Pt_value;
  TBranch *m_t_SS_branch;
  float m_t_SS_value;
  TBranch *m_t_ToMETDPhi_Ty1_branch;
  float m_t_ToMETDPhi_Ty1_value;
  TBranch *muGlbIsoVetoPt10_branch;
  float muGlbIsoVetoPt10_value;
  TBranch *muVetoPt15IsoIdVtx_branch;
  float muVetoPt15IsoIdVtx_value;
  TBranch *muVetoPt5_branch;
  float muVetoPt5_value;
  TBranch *muVetoPt5IsoIdVtx_branch;
  float muVetoPt5IsoIdVtx_value;
  TBranch *nTruePU_branch;
  float nTruePU_value;
  TBranch *nvtx_branch;
  float nvtx_value;
  TBranch *pfMetEt_branch;
  float pfMetEt_value;
  TBranch *pfMetPhi_branch;
  float pfMetPhi_value;
  TBranch *pfMet_jes_Et_branch;
  float pfMet_jes_Et_value;
  TBranch *pfMet_jes_Phi_branch;
  float pfMet_jes_Phi_value;
  TBranch *pfMet_mes_Et_branch;
  float pfMet_mes_Et_value;
  TBranch *pfMet_mes_Phi_branch;
  float pfMet_mes_Phi_value;
  TBranch *pfMet_tes_Et_branch;
  float pfMet_tes_Et_value;
  TBranch *pfMet_tes_Phi_branch;
  float pfMet_tes_Phi_value;
  TBranch *pfMet_ues_Et_branch;
  float pfMet_ues_Et_value;
  TBranch *pfMet_ues_Phi_branch;
  float pfMet_ues_Phi_value;
  TBranch *processID_branch;
  float processID_value;
  TBranch *pvChi2_branch;
  float pvChi2_value;
  TBranch *pvDX_branch;
  float pvDX_value;
  TBranch *pvDY_branch;
  float pvDY_value;
  TBranch *pvDZ_branch;
  float pvDZ_value;
  TBranch *pvIsFake_branch;
  int pvIsFake_value;
  TBranch *pvIsValid_branch;
  int pvIsValid_value;
  TBranch *pvNormChi2_branch;
  float pvNormChi2_value;
  TBranch *pvRho_branch;
  float pvRho_value;
  TBranch *pvX_branch;
  float pvX_value;
  TBranch *pvY_branch;
  float pvY_value;
  TBranch *pvZ_branch;
  float pvZ_value;
  TBranch *pvndof_branch;
  float pvndof_value;
  TBranch *recoilDaught_branch;
  float recoilDaught_value;
  TBranch *recoilWithMet_branch;
  float recoilWithMet_value;
  TBranch *rho_branch;
  float rho_value;
  TBranch *run_branch;
  int run_value;
  TBranch *singleEGroup_branch;
  float singleEGroup_value;
  TBranch *singleEPass_branch;
  float singleEPass_value;
  TBranch *singleEPrescale_branch;
  float singleEPrescale_value;
  TBranch *singleESingleMuGroup_branch;
  float singleESingleMuGroup_value;
  TBranch *singleESingleMuPass_branch;
  float singleESingleMuPass_value;
  TBranch *singleESingleMuPrescale_branch;
  float singleESingleMuPrescale_value;
  TBranch *singleE_leg1Group_branch;
  float singleE_leg1Group_value;
  TBranch *singleE_leg1Pass_branch;
  float singleE_leg1Pass_value;
  TBranch *singleE_leg1Prescale_branch;
  float singleE_leg1Prescale_value;
  TBranch *singleE_leg2Group_branch;
  float singleE_leg2Group_value;
  TBranch *singleE_leg2Pass_branch;
  float singleE_leg2Pass_value;
  TBranch *singleE_leg2Prescale_branch;
  float singleE_leg2Prescale_value;
  TBranch *singleMuGroup_branch;
  float singleMuGroup_value;
  TBranch *singleMuPass_branch;
  float singleMuPass_value;
  TBranch *singleMuPrescale_branch;
  float singleMuPrescale_value;
  TBranch *singleMuSingleEGroup_branch;
  float singleMuSingleEGroup_value;
  TBranch *singleMuSingleEPass_branch;
  float singleMuSingleEPass_value;
  TBranch *singleMuSingleEPrescale_branch;
  float singleMuSingleEPrescale_value;
  TBranch *singleMu_leg1Group_branch;
  float singleMu_leg1Group_value;
  TBranch *singleMu_leg1Pass_branch;
  float singleMu_leg1Pass_value;
  TBranch *singleMu_leg1Prescale_branch;
  float singleMu_leg1Prescale_value;
  TBranch *singleMu_leg1_noisoGroup_branch;
  float singleMu_leg1_noisoGroup_value;
  TBranch *singleMu_leg1_noisoPass_branch;
  float singleMu_leg1_noisoPass_value;
  TBranch *singleMu_leg1_noisoPrescale_branch;
  float singleMu_leg1_noisoPrescale_value;
  TBranch *singleMu_leg2Group_branch;
  float singleMu_leg2Group_value;
  TBranch *singleMu_leg2Pass_branch;
  float singleMu_leg2Pass_value;
  TBranch *singleMu_leg2Prescale_branch;
  float singleMu_leg2Prescale_value;
  TBranch *singleMu_leg2_noisoGroup_branch;
  float singleMu_leg2_noisoGroup_value;
  TBranch *singleMu_leg2_noisoPass_branch;
  float singleMu_leg2_noisoPass_value;
  TBranch *singleMu_leg2_noisoPrescale_branch;
  float singleMu_leg2_noisoPrescale_value;
  TBranch *tAbsEta_branch;
  float tAbsEta_value;
  TBranch *tAgainstElectronLooseMVA5_branch;
  float tAgainstElectronLooseMVA5_value;
  TBranch *tAgainstElectronMVA5category_branch;
  float tAgainstElectronMVA5category_value;
  TBranch *tAgainstElectronMVA5raw_branch;
  float tAgainstElectronMVA5raw_value;
  TBranch *tAgainstElectronMediumMVA5_branch;
  float tAgainstElectronMediumMVA5_value;
  TBranch *tAgainstElectronTightMVA5_branch;
  float tAgainstElectronTightMVA5_value;
  TBranch *tAgainstElectronVLooseMVA5_branch;
  float tAgainstElectronVLooseMVA5_value;
  TBranch *tAgainstElectronVTightMVA5_branch;
  float tAgainstElectronVTightMVA5_value;
  TBranch *tAgainstMuonLoose3_branch;
  float tAgainstMuonLoose3_value;
  TBranch *tAgainstMuonTight3_branch;
  float tAgainstMuonTight3_value;
  TBranch *tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch;
  float tByCombinedIsolationDeltaBetaCorrRaw3Hits_value;
  TBranch *tByIsolationMVA3newDMwLTraw_branch;
  float tByIsolationMVA3newDMwLTraw_value;
  TBranch *tByIsolationMVA3oldDMwLTraw_branch;
  float tByIsolationMVA3oldDMwLTraw_value;
  TBranch *tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch;
  float tByLooseCombinedIsolationDeltaBetaCorr3Hits_value;
  TBranch *tByLooseIsolationMVA3newDMwLT_branch;
  float tByLooseIsolationMVA3newDMwLT_value;
  TBranch *tByLooseIsolationMVA3oldDMwLT_branch;
  float tByLooseIsolationMVA3oldDMwLT_value;
  TBranch *tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch;
  float tByMediumCombinedIsolationDeltaBetaCorr3Hits_value;
  TBranch *tByMediumIsolationMVA3newDMwLT_branch;
  float tByMediumIsolationMVA3newDMwLT_value;
  TBranch *tByMediumIsolationMVA3oldDMwLT_branch;
  float tByMediumIsolationMVA3oldDMwLT_value;
  TBranch *tByTightCombinedIsolationDeltaBetaCorr3Hits_branch;
  float tByTightCombinedIsolationDeltaBetaCorr3Hits_value;
  TBranch *tByTightIsolationMVA3newDMwLT_branch;
  float tByTightIsolationMVA3newDMwLT_value;
  TBranch *tByTightIsolationMVA3oldDMwLT_branch;
  float tByTightIsolationMVA3oldDMwLT_value;
  TBranch *tByVLooseIsolationMVA3newDMwLT_branch;
  float tByVLooseIsolationMVA3newDMwLT_value;
  TBranch *tByVLooseIsolationMVA3oldDMwLT_branch;
  float tByVLooseIsolationMVA3oldDMwLT_value;
  TBranch *tByVTightIsolationMVA3newDMwLT_branch;
  float tByVTightIsolationMVA3newDMwLT_value;
  TBranch *tByVTightIsolationMVA3oldDMwLT_branch;
  float tByVTightIsolationMVA3oldDMwLT_value;
  TBranch *tByVVTightIsolationMVA3newDMwLT_branch;
  float tByVVTightIsolationMVA3newDMwLT_value;
  TBranch *tByVVTightIsolationMVA3oldDMwLT_branch;
  float tByVVTightIsolationMVA3oldDMwLT_value;
  TBranch *tCharge_branch;
  float tCharge_value;
  TBranch *tChargedIsoPtSum_branch;
  float tChargedIsoPtSum_value;
  TBranch *tDecayMode_branch;
  float tDecayMode_value;
  TBranch *tDecayModeFinding_branch;
  float tDecayModeFinding_value;
  TBranch *tDecayModeFindingNewDMs_branch;
  float tDecayModeFindingNewDMs_value;
  TBranch *tElecOverlap_branch;
  float tElecOverlap_value;
  TBranch *tElectronPt10IdIsoVtxOverlap_branch;
  float tElectronPt10IdIsoVtxOverlap_value;
  TBranch *tElectronPt10IdVtxOverlap_branch;
  float tElectronPt10IdVtxOverlap_value;
  TBranch *tElectronPt15IdIsoVtxOverlap_branch;
  float tElectronPt15IdIsoVtxOverlap_value;
  TBranch *tElectronPt15IdVtxOverlap_branch;
  float tElectronPt15IdVtxOverlap_value;
  TBranch *tEta_branch;
  float tEta_value;
  TBranch *tGenDecayMode_branch;
  float tGenDecayMode_value;
  TBranch *tGlobalMuonVtxOverlap_branch;
  float tGlobalMuonVtxOverlap_value;
  TBranch *tJetArea_branch;
  float tJetArea_value;
  TBranch *tJetBtag_branch;
  float tJetBtag_value;
  TBranch *tJetEtaEtaMoment_branch;
  float tJetEtaEtaMoment_value;
  TBranch *tJetEtaPhiMoment_branch;
  float tJetEtaPhiMoment_value;
  TBranch *tJetEtaPhiSpread_branch;
  float tJetEtaPhiSpread_value;
  TBranch *tJetPFCISVBtag_branch;
  float tJetPFCISVBtag_value;
  TBranch *tJetPartonFlavour_branch;
  float tJetPartonFlavour_value;
  TBranch *tJetPhiPhiMoment_branch;
  float tJetPhiPhiMoment_value;
  TBranch *tJetPt_branch;
  float tJetPt_value;
  TBranch *tLeadTrackPt_branch;
  float tLeadTrackPt_value;
  TBranch *tLowestMll_branch;
  float tLowestMll_value;
  TBranch *tMass_branch;
  float tMass_value;
  TBranch *tMtToMET_branch;
  float tMtToMET_value;
  TBranch *tMtToPFMET_branch;
  float tMtToPFMET_value;
  TBranch *tMtToPfMet_Ty1_branch;
  float tMtToPfMet_Ty1_value;
  TBranch *tMtToPfMet_jes_branch;
  float tMtToPfMet_jes_value;
  TBranch *tMtToPfMet_mes_branch;
  float tMtToPfMet_mes_value;
  TBranch *tMtToPfMet_tes_branch;
  float tMtToPfMet_tes_value;
  TBranch *tMtToPfMet_ues_branch;
  float tMtToPfMet_ues_value;
  TBranch *tMuOverlap_branch;
  float tMuOverlap_value;
  TBranch *tMuonIdIsoStdVtxOverlap_branch;
  float tMuonIdIsoStdVtxOverlap_value;
  TBranch *tMuonIdIsoVtxOverlap_branch;
  float tMuonIdIsoVtxOverlap_value;
  TBranch *tMuonIdVtxOverlap_branch;
  float tMuonIdVtxOverlap_value;
  TBranch *tNearestZMass_branch;
  float tNearestZMass_value;
  TBranch *tNeutralIsoPtSum_branch;
  float tNeutralIsoPtSum_value;
  TBranch *tPVDXY_branch;
  float tPVDXY_value;
  TBranch *tPVDZ_branch;
  float tPVDZ_value;
  TBranch *tPhi_branch;
  float tPhi_value;
  TBranch *tPt_branch;
  float tPt_value;
  TBranch *tPuCorrPtSum_branch;
  float tPuCorrPtSum_value;
  TBranch *tRank_branch;
  float tRank_value;
  TBranch *tTNPId_branch;
  float tTNPId_value;
  TBranch *tToMETDPhi_branch;
  float tToMETDPhi_value;
  TBranch *tVZ_branch;
  float tVZ_value;
  TBranch *tauVetoPt20EleLooseMuTight_branch;
  float tauVetoPt20EleLooseMuTight_value;
  TBranch *tauVetoPt20EleTightMuLoose_branch;
  float tauVetoPt20EleTightMuLoose_value;
  TBranch *tauVetoPt20Loose3HitsNewDMVtx_branch;
  float tauVetoPt20Loose3HitsNewDMVtx_value;
  TBranch *tauVetoPt20Loose3HitsVtx_branch;
  float tauVetoPt20Loose3HitsVtx_value;
  TBranch *tauVetoPt20TightMVALTNewDMVtx_branch;
  float tauVetoPt20TightMVALTNewDMVtx_value;
  TBranch *tauVetoPt20TightMVALTVtx_branch;
  float tauVetoPt20TightMVALTVtx_value;
  TBranch *tripleEGroup_branch;
  float tripleEGroup_value;
  TBranch *tripleEPass_branch;
  float tripleEPass_value;
  TBranch *tripleEPrescale_branch;
  float tripleEPrescale_value;
  TBranch *tripleMuGroup_branch;
  float tripleMuGroup_value;
  TBranch *tripleMuPass_branch;
  float tripleMuPass_value;
  TBranch *tripleMuPrescale_branch;
  float tripleMuPrescale_value;
  TBranch *type1_pfMetEt_branch;
  float type1_pfMetEt_value;
  TBranch *type1_pfMetPhi_branch;
  float type1_pfMetPhi_value;
  TBranch *vbfDeta_branch;
  float vbfDeta_value;
  TBranch *vbfDijetrap_branch;
  float vbfDijetrap_value;
  TBranch *vbfDphi_branch;
  float vbfDphi_value;
  TBranch *vbfDphihj_branch;
  float vbfDphihj_value;
  TBranch *vbfDphihjnomet_branch;
  float vbfDphihjnomet_value;
  TBranch *vbfHrap_branch;
  float vbfHrap_value;
  TBranch *vbfJetVeto20_branch;
  float vbfJetVeto20_value;
  TBranch *vbfJetVeto30_branch;
  float vbfJetVeto30_value;
  TBranch *vbfJetVetoTight20_branch;
  float vbfJetVetoTight20_value;
  TBranch *vbfJetVetoTight30_branch;
  float vbfJetVetoTight30_value;
  TBranch *vbfMVA_branch;
  float vbfMVA_value;
  TBranch *vbfMass_branch;
  float vbfMass_value;
  TBranch *vbfNJets_branch;
  float vbfNJets_value;
  TBranch *vbfVispt_branch;
  float vbfVispt_value;
  TBranch *vbfdijetpt_branch;
  float vbfdijetpt_value;
  TBranch *vbfditaupt_branch;
  float vbfditaupt_value;
  TBranch *vbfj1eta_branch;
  float vbfj1eta_value;
  TBranch *vbfj1pt_branch;
  float vbfj1pt_value;
  TBranch *vbfj2eta_branch;
  float vbfj2eta_value;
  TBranch *vbfj2pt_branch;
  float vbfj2pt_value;
  TBranch *idx_branch;
  int idx_value;
};


/* "MuTauTree.pyx":3807
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */
struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ {
  PyObject_HEAD
  struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self;
};


/* "MuTauTree.pyx":3815
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */
struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where {
  PyObject_HEAD
  TTree *__pyx_v_currentTree;
  PyObject *__pyx_v_filter;
  TTreeFormula *__pyx_v_formula;
  struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self;
};



/* "MuTauTree.pyx":42
 * warnings.formatwarning = my_warning_format
 * 
 * cdef class MuTauTree:             # <<<<<<<<<<<<<<
 *     # Pointers to tree (may be a chain), current active tree, and current entry
 *     # localentry is the entry in the current tree of the chain
 */

struct __pyx_vtabstruct_9MuTauTree_MuTauTree {
  PyObject *(*load_entry)(struct __pyx_obj_9MuTauTree_MuTauTree *, long);
  PyObject *(*setup_branches)(struct __pyx_obj_9MuTauTree_MuTauTree *, TTree *);
};
static struct __pyx_vtabstruct_9MuTauTree_MuTauTree *__pyx_vtabptr_9MuTauTree_MuTauTree;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

#include <string.h>

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

typedef PyObject *(*__pyx_coroutine_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(PyTypeObject *type, __pyx_coroutine_body_t body,
                                                   PyObject *closure, PyObject *name, PyObject *qualname);
static int __Pyx_Coroutine_clear(PyObject *self);
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue);
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue) PyGen_FetchStopIterationValue(pvalue)
#endif

static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

static int __Pyx_patch_abc(void);

#define __Pyx_Generator_USED
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_New(body, closure, name, qualname)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, closure, name, qualname)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(void);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_9MuTauTree_9MuTauTree_load_entry(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, long __pyx_v_i); /* proto*/
static PyObject *__pyx_f_9MuTauTree_9MuTauTree_setup_branches(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, TTree *__pyx_v_the_tree); /* proto*/

/* Module declarations from 'cpython.version' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'MuTauTree' */
static PyTypeObject *__pyx_ptype_9MuTauTree_MuTauTree = 0;
static PyTypeObject *__pyx_ptype_9MuTauTree___pyx_scope_struct____iter__ = 0;
static PyTypeObject *__pyx_ptype_9MuTauTree___pyx_scope_struct_1_where = 0;
#define __Pyx_MODULE_NAME "MuTauTree"
int __pyx_module_is_main_MuTauTree = 0;

/* Implementation of 'MuTauTree' */
static PyObject *__pyx_builtin_Warning;
static char __pyx_k_[] = "";
static char __pyx_k_Ht[] = "Ht";
static char __pyx_k_LT[] = "LT";
static char __pyx_k_Mt[] = "Mt";
static char __pyx_k_Pt[] = "Pt";
static char __pyx_k_Eta[] = "Eta";
static char __pyx_k_NUP[] = "NUP";
static char __pyx_k_Phi[] = "Phi";
static char __pyx_k_end[] = "end";
static char __pyx_k_evt[] = "evt";
static char __pyx_k_idx[] = "idx";
static char __pyx_k_mPt[] = "mPt";
static char __pyx_k_mVZ[] = "mVZ";
static char __pyx_k_pvX[] = "pvX";
static char __pyx_k_pvY[] = "pvY";
static char __pyx_k_pvZ[] = "pvZ";
static char __pyx_k_rho[] = "rho";
static char __pyx_k_run[] = "run";
static char __pyx_k_s_s[] = "%s:%s\n";
static char __pyx_k_tPt[] = "tPt";
static char __pyx_k_tVZ[] = "tVZ";
static char __pyx_k_Mass[] = "Mass";
static char __pyx_k_ROOT[] = "ROOT";
static char __pyx_k_args[] = "args";
static char __pyx_k_file[] = "file";
static char __pyx_k_iter[] = "__iter__";
static char __pyx_k_line[] = "line";
static char __pyx_k_lumi[] = "lumi";
static char __pyx_k_mEta[] = "mEta";
static char __pyx_k_mPhi[] = "mPhi";
static char __pyx_k_mRho[] = "mRho";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_name[] = "__name__";
static char __pyx_k_nvtx[] = "nvtx";
static char __pyx_k_pvDX[] = "pvDX";
static char __pyx_k_pvDY[] = "pvDY";
static char __pyx_k_pvDZ[] = "pvDZ";
static char __pyx_k_send[] = "send";
static char __pyx_k_tEta[] = "tEta";
static char __pyx_k_tPhi[] = "tPhi";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_warn[] = "warn";
static char __pyx_k_close[] = "close";
static char __pyx_k_mIP3D[] = "mIP3D";
static char __pyx_k_mMass[] = "mMass";
static char __pyx_k_mPVDZ[] = "mPVDZ";
static char __pyx_k_mRank[] = "mRank";
static char __pyx_k_print[] = "print";
static char __pyx_k_pvRho[] = "pvRho";
static char __pyx_k_tMass[] = "tMass";
static char __pyx_k_tPVDZ[] = "tPVDZ";
static char __pyx_k_tRank[] = "tRank";
static char __pyx_k_throw[] = "throw";
static char __pyx_k_ttree[] = "ttree";
static char __pyx_k_where[] = "where";
static char __pyx_k_charge[] = "charge";
static char __pyx_k_cyiter[] = "cyiter";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_isdata[] = "isdata";
static char __pyx_k_lineno[] = "lineno";
static char __pyx_k_mGenPt[] = "mGenPt";
static char __pyx_k_mGenVZ[] = "mGenVZ";
static char __pyx_k_mJetPt[] = "mJetPt";
static char __pyx_k_mPVDXY[] = "mPVDXY";
static char __pyx_k_mSIP2D[] = "mSIP2D";
static char __pyx_k_mSIP3D[] = "mSIP3D";
static char __pyx_k_m_t_DR[] = "m_t_DR";
static char __pyx_k_m_t_Mt[] = "m_t_Mt";
static char __pyx_k_m_t_Pt[] = "m_t_Pt";
static char __pyx_k_m_t_SS[] = "m_t_SS";
static char __pyx_k_pvChi2[] = "pvChi2";
static char __pyx_k_pvndof[] = "pvndof";
static char __pyx_k_tJetPt[] = "tJetPt";
static char __pyx_k_tPVDXY[] = "tPVDXY";
static char __pyx_k_tTNPId[] = "tTNPId";
static char __pyx_k_vbfMVA[] = "vbfMVA";
static char __pyx_k_Warning[] = "Warning";
static char __pyx_k_mAbsEta[] = "mAbsEta";
static char __pyx_k_mCharge[] = "mCharge";
static char __pyx_k_mGenEta[] = "mGenEta";
static char __pyx_k_mGenPhi[] = "mGenPhi";
static char __pyx_k_m_t_Eta[] = "m_t_Eta";
static char __pyx_k_m_t_Phi[] = "m_t_Phi";
static char __pyx_k_message[] = "message";
static char __pyx_k_nTruePU[] = "nTruePU";
static char __pyx_k_pfMetEt[] = "pfMetEt";
static char __pyx_k_tAbsEta[] = "tAbsEta";
static char __pyx_k_tCharge[] = "tCharge";
static char __pyx_k_vbfDeta[] = "vbfDeta";
static char __pyx_k_vbfDphi[] = "vbfDphi";
static char __pyx_k_vbfHrap[] = "vbfHrap";
static char __pyx_k_vbfMass[] = "vbfMass";
static char __pyx_k_vbfj1pt[] = "vbfj1pt";
static char __pyx_k_vbfj2pt[] = "vbfj2pt";
static char __pyx_k_category[] = "category";
static char __pyx_k_filename[] = "filename";
static char __pyx_k_mIP3DErr[] = "mIP3DErr";
static char __pyx_k_mJetArea[] = "mJetArea";
static char __pyx_k_mJetBtag[] = "mJetBtag";
static char __pyx_k_mMtToMET[] = "mMtToMET";
static char __pyx_k_mPixHits[] = "mPixHits";
static char __pyx_k_m_t_DPhi[] = "m_t_DPhi";
static char __pyx_k_m_t_Mass[] = "m_t_Mass";
static char __pyx_k_pfMetPhi[] = "pfMetPhi";
static char __pyx_k_pvIsFake[] = "pvIsFake";
static char __pyx_k_tJetArea[] = "tJetArea";
static char __pyx_k_tJetBtag[] = "tJetBtag";
static char __pyx_k_tMtToMET[] = "tMtToMET";
static char __pyx_k_vbfNJets[] = "vbfNJets";
static char __pyx_k_vbfVispt[] = "vbfVispt";
static char __pyx_k_vbfj1eta[] = "vbfj1eta";
static char __pyx_k_vbfj2eta[] = "vbfj2eta";
static char __pyx_k_warnings[] = "warnings";
static char __pyx_k_AsCObject[] = "AsCObject";
static char __pyx_k_GenWeight[] = "GenWeight";
static char __pyx_k_MassError[] = "MassError";
static char __pyx_k_MuTauTree[] = "MuTauTree";
static char __pyx_k_jetVeto20[] = "jetVeto20";
static char __pyx_k_jetVeto30[] = "jetVeto30";
static char __pyx_k_jetVeto40[] = "jetVeto40";
static char __pyx_k_mGenPdgId[] = "mGenPdgId";
static char __pyx_k_mIsGlobal[] = "mIsGlobal";
static char __pyx_k_mIsPFMuon[] = "mIsPFMuon";
static char __pyx_k_mMuonHits[] = "mMuonHits";
static char __pyx_k_mTypeCode[] = "mTypeCode";
static char __pyx_k_m_t_PZeta[] = "m_t_PZeta";
static char __pyx_k_muVetoPt5[] = "muVetoPt5";
static char __pyx_k_processID[] = "processID";
static char __pyx_k_pvIsValid[] = "pvIsValid";
static char __pyx_k_vbfDphihj[] = "vbfDphihj";
static char __pyx_k_mGenCharge[] = "mGenCharge";
static char __pyx_k_mGenEnergy[] = "mGenEnergy";
static char __pyx_k_mIsTracker[] = "mIsTracker";
static char __pyx_k_mLowestMll[] = "mLowestMll";
static char __pyx_k_mMtToPFMET[] = "mMtToPFMET";
static char __pyx_k_mPFIDLoose[] = "mPFIDLoose";
static char __pyx_k_mPFIDTight[] = "mPFIDTight";
static char __pyx_k_mToMETDPhi[] = "mToMETDPhi";
static char __pyx_k_pvNormChi2[] = "pvNormChi2";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_tDecayMode[] = "tDecayMode";
static char __pyx_k_tLowestMll[] = "tLowestMll";
static char __pyx_k_tMtToPFMET[] = "tMtToPFMET";
static char __pyx_k_tMuOverlap[] = "tMuOverlap";
static char __pyx_k_tToMETDPhi[] = "tToMETDPhi";
static char __pyx_k_vbfdijetpt[] = "vbfdijetpt";
static char __pyx_k_vbfditaupt[] = "vbfditaupt";
static char __pyx_k_EmbPtWeight[] = "EmbPtWeight";
static char __pyx_k_MassErrord1[] = "MassErrord1";
static char __pyx_k_MassErrord2[] = "MassErrord2";
static char __pyx_k_MassErrord3[] = "MassErrord3";
static char __pyx_k_MassErrord4[] = "MassErrord4";
static char __pyx_k_doubleEPass[] = "doubleEPass";
static char __pyx_k_eVetoMVAIso[] = "eVetoMVAIso";
static char __pyx_k_mPFIDMedium[] = "mPFIDMedium";
static char __pyx_k_singleEPass[] = "singleEPass";
static char __pyx_k_tripleEPass[] = "tripleEPass";
static char __pyx_k_vbfDijetrap[] = "vbfDijetrap";
static char __pyx_k_doubleEGroup[] = "doubleEGroup";
static char __pyx_k_doubleMuPass[] = "doubleMuPass";
static char __pyx_k_mNormTrkChi2[] = "mNormTrkChi2";
static char __pyx_k_mPFPhotonIso[] = "mPFPhotonIso";
static char __pyx_k_mRelPFIsoRho[] = "mRelPFIsoRho";
static char __pyx_k_m_t_PZetaVis[] = "m_t_PZetaVis";
static char __pyx_k_pfMet_jes_Et[] = "pfMet_jes_Et";
static char __pyx_k_pfMet_mes_Et[] = "pfMet_mes_Et";
static char __pyx_k_pfMet_tes_Et[] = "pfMet_tes_Et";
static char __pyx_k_pfMet_ues_Et[] = "pfMet_ues_Et";
static char __pyx_k_recoilDaught[] = "recoilDaught";
static char __pyx_k_singleEGroup[] = "singleEGroup";
static char __pyx_k_singleMuPass[] = "singleMuPass";
static char __pyx_k_tElecOverlap[] = "tElecOverlap";
static char __pyx_k_tLeadTrackPt[] = "tLeadTrackPt";
static char __pyx_k_tPuCorrPtSum[] = "tPuCorrPtSum";
static char __pyx_k_tripleEGroup[] = "tripleEGroup";
static char __pyx_k_tripleMuPass[] = "tripleMuPass";
static char __pyx_k_vbfJetVeto20[] = "vbfJetVeto20";
static char __pyx_k_vbfJetVeto30[] = "vbfJetVeto30";
static char __pyx_k_doubleMuGroup[] = "doubleMuGroup";
static char __pyx_k_doubleTauPass[] = "doubleTauPass";
static char __pyx_k_formatwarning[] = "formatwarning";
static char __pyx_k_mNearestZMass[] = "mNearestZMass";
static char __pyx_k_mPFChargedIso[] = "mPFChargedIso";
static char __pyx_k_mPFNeutralIso[] = "mPFNeutralIso";
static char __pyx_k_pfMet_jes_Phi[] = "pfMet_jes_Phi";
static char __pyx_k_pfMet_mes_Phi[] = "pfMet_mes_Phi";
static char __pyx_k_pfMet_tes_Phi[] = "pfMet_tes_Phi";
static char __pyx_k_pfMet_ues_Phi[] = "pfMet_ues_Phi";
static char __pyx_k_recoilWithMet[] = "recoilWithMet";
static char __pyx_k_singleMuGroup[] = "singleMuGroup";
static char __pyx_k_tGenDecayMode[] = "tGenDecayMode";
static char __pyx_k_tNearestZMass[] = "tNearestZMass";
static char __pyx_k_tripleMuGroup[] = "tripleMuGroup";
static char __pyx_k_type1_pfMetEt[] = "type1_pfMetEt";
static char __pyx_k_doubleTauGroup[] = "doubleTauGroup";
static char __pyx_k_eVetoMVAIsoVtx[] = "eVetoMVAIsoVtx";
static char __pyx_k_jetVeto20_DR05[] = "jetVeto20_DR05";
static char __pyx_k_jetVeto30_DR05[] = "jetVeto30_DR05";
static char __pyx_k_jetVeto40_DR05[] = "jetVeto40_DR05";
static char __pyx_k_mBestTrackType[] = "mBestTrackType";
static char __pyx_k_mGenVtxPVMatch[] = "mGenVtxPVMatch";
static char __pyx_k_mJetPFCISVBtag[] = "mJetPFCISVBtag";
static char __pyx_k_mMtToPfMet_Ty1[] = "mMtToPfMet_Ty1";
static char __pyx_k_mMtToPfMet_jes[] = "mMtToPfMet_jes";
static char __pyx_k_mMtToPfMet_mes[] = "mMtToPfMet_mes";
static char __pyx_k_mMtToPfMet_tes[] = "mMtToPfMet_tes";
static char __pyx_k_mMtToPfMet_ues[] = "mMtToPfMet_ues";
static char __pyx_k_tJetPFCISVBtag[] = "tJetPFCISVBtag";
static char __pyx_k_tMtToPfMet_Ty1[] = "tMtToPfMet_Ty1";
static char __pyx_k_tMtToPfMet_jes[] = "tMtToPfMet_jes";
static char __pyx_k_tMtToPfMet_mes[] = "tMtToPfMet_mes";
static char __pyx_k_tMtToPfMet_tes[] = "tMtToPfMet_tes";
static char __pyx_k_tMtToPfMet_ues[] = "tMtToPfMet_ues";
static char __pyx_k_type1_pfMetPhi[] = "type1_pfMetPhi";
static char __pyx_k_vbfDphihjnomet[] = "vbfDphihjnomet";
static char __pyx_k_MuTauTree_where[] = "MuTauTree.where";
static char __pyx_k_doubleEPrescale[] = "doubleEPrescale";
static char __pyx_k_mComesFromHiggs[] = "mComesFromHiggs";
static char __pyx_k_mGenMotherPdgId[] = "mGenMotherPdgId";
static char __pyx_k_mPFPUChargedIso[] = "mPFPUChargedIso";
static char __pyx_k_mRelPFIsoRhoFSR[] = "mRelPFIsoRhoFSR";
static char __pyx_k_singleEPrescale[] = "singleEPrescale";
static char __pyx_k_tripleEPrescale[] = "tripleEPrescale";
static char __pyx_k_MuTauTree___iter[] = "MuTauTree.__iter__";
static char __pyx_k_doubleMuPrescale[] = "doubleMuPrescale";
static char __pyx_k_mJetEtaEtaMoment[] = "mJetEtaEtaMoment";
static char __pyx_k_mJetEtaPhiMoment[] = "mJetEtaPhiMoment";
static char __pyx_k_mJetEtaPhiSpread[] = "mJetEtaPhiSpread";
static char __pyx_k_mJetPhiPhiMoment[] = "mJetPhiPhiMoment";
static char __pyx_k_mMatchedStations[] = "mMatchedStations";
static char __pyx_k_mMatchesDoubleMu[] = "mMatchesDoubleMu";
static char __pyx_k_mMatchesSingleMu[] = "mMatchesSingleMu";
static char __pyx_k_mMatchesTripleMu[] = "mMatchesTripleMu";
static char __pyx_k_m_t_CosThetaStar[] = "m_t_CosThetaStar";
static char __pyx_k_muGlbIsoVetoPt10[] = "muGlbIsoVetoPt10";
static char __pyx_k_singleE_leg1Pass[] = "singleE_leg1Pass";
static char __pyx_k_singleE_leg2Pass[] = "singleE_leg2Pass";
static char __pyx_k_singleMuPrescale[] = "singleMuPrescale";
static char __pyx_k_tChargedIsoPtSum[] = "tChargedIsoPtSum";
static char __pyx_k_tJetEtaEtaMoment[] = "tJetEtaEtaMoment";
static char __pyx_k_tJetEtaPhiMoment[] = "tJetEtaPhiMoment";
static char __pyx_k_tJetEtaPhiSpread[] = "tJetEtaPhiSpread";
static char __pyx_k_tJetPhiPhiMoment[] = "tJetPhiPhiMoment";
static char __pyx_k_tNeutralIsoPtSum[] = "tNeutralIsoPtSum";
static char __pyx_k_tripleMuPrescale[] = "tripleMuPrescale";
static char __pyx_k_doubleTauPrescale[] = "doubleTauPrescale";
static char __pyx_k_mJetPartonFlavour[] = "mJetPartonFlavour";
static char __pyx_k_m_t_ToMETDPhi_Ty1[] = "m_t_ToMETDPhi_Ty1";
static char __pyx_k_muVetoPt5IsoIdVtx[] = "muVetoPt5IsoIdVtx";
static char __pyx_k_my_warning_format[] = "my_warning_format";
static char __pyx_k_singleE_leg1Group[] = "singleE_leg1Group";
static char __pyx_k_singleE_leg2Group[] = "singleE_leg2Group";
static char __pyx_k_singleMu_leg1Pass[] = "singleMu_leg1Pass";
static char __pyx_k_singleMu_leg2Pass[] = "singleMu_leg2Pass";
static char __pyx_k_tDecayModeFinding[] = "tDecayModeFinding";
static char __pyx_k_tJetPartonFlavour[] = "tJetPartonFlavour";
static char __pyx_k_tMuonIdVtxOverlap[] = "tMuonIdVtxOverlap";
static char __pyx_k_vbfJetVetoTight20[] = "vbfJetVetoTight20";
static char __pyx_k_vbfJetVetoTight30[] = "vbfJetVetoTight30";
static char __pyx_k_mEffectiveArea2011[] = "mEffectiveArea2011";
static char __pyx_k_mEffectiveArea2012[] = "mEffectiveArea2012";
static char __pyx_k_mRelPFIsoDBDefault[] = "mRelPFIsoDBDefault";
static char __pyx_k_muVetoPt15IsoIdVtx[] = "muVetoPt15IsoIdVtx";
static char __pyx_k_singleMu_leg1Group[] = "singleMu_leg1Group";
static char __pyx_k_singleMu_leg2Group[] = "singleMu_leg2Group";
static char __pyx_k_tAgainstMuonLoose3[] = "tAgainstMuonLoose3";
static char __pyx_k_tAgainstMuonTight3[] = "tAgainstMuonTight3";
static char __pyx_k_bjetCISVVeto20Loose[] = "bjetCISVVeto20Loose";
static char __pyx_k_bjetCISVVeto20Tight[] = "bjetCISVVeto20Tight";
static char __pyx_k_bjetCISVVeto30Loose[] = "bjetCISVVeto30Loose";
static char __pyx_k_bjetCISVVeto30Tight[] = "bjetCISVVeto30Tight";
static char __pyx_k_doubleESingleMuPass[] = "doubleESingleMuPass";
static char __pyx_k_doubleMuSingleEPass[] = "doubleMuSingleEPass";
static char __pyx_k_singleESingleMuPass[] = "singleESingleMuPass";
static char __pyx_k_singleMuSingleEPass[] = "singleMuSingleEPass";
static char __pyx_k_bjetCISVVeto20Medium[] = "bjetCISVVeto20Medium";
static char __pyx_k_bjetCISVVeto30Medium[] = "bjetCISVVeto30Medium";
static char __pyx_k_doubleESingleMuGroup[] = "doubleESingleMuGroup";
static char __pyx_k_doubleMuSingleEGroup[] = "doubleMuSingleEGroup";
static char __pyx_k_singleESingleMuGroup[] = "singleESingleMuGroup";
static char __pyx_k_singleE_leg1Prescale[] = "singleE_leg1Prescale";
static char __pyx_k_singleE_leg2Prescale[] = "singleE_leg2Prescale";
static char __pyx_k_singleMuSingleEGroup[] = "singleMuSingleEGroup";
static char __pyx_k_tMuonIdIsoVtxOverlap[] = "tMuonIdIsoVtxOverlap";
static char __pyx_k_mMatchesSingleMu_leg1[] = "mMatchesSingleMu_leg1";
static char __pyx_k_mMatchesSingleMu_leg2[] = "mMatchesSingleMu_leg2";
static char __pyx_k_singleMu_leg1Prescale[] = "singleMu_leg1Prescale";
static char __pyx_k_singleMu_leg2Prescale[] = "singleMu_leg2Prescale";
static char __pyx_k_tGlobalMuonVtxOverlap[] = "tGlobalMuonVtxOverlap";
static char __pyx_k_doubleESingleMuPrescale[] = "doubleESingleMuPrescale";
static char __pyx_k_doubleMuSingleEPrescale[] = "doubleMuSingleEPrescale";
static char __pyx_k_mMatchesDoubleESingleMu[] = "mMatchesDoubleESingleMu";
static char __pyx_k_mMatchesDoubleMuSingleE[] = "mMatchesDoubleMuSingleE";
static char __pyx_k_mMatchesSingleESingleMu[] = "mMatchesSingleESingleMu";
static char __pyx_k_mMatchesSingleMuSingleE[] = "mMatchesSingleMuSingleE";
static char __pyx_k_singleESingleMuPrescale[] = "singleESingleMuPrescale";
static char __pyx_k_singleMuSingleEPrescale[] = "singleMuSingleEPrescale";
static char __pyx_k_singleMu_leg1_noisoPass[] = "singleMu_leg1_noisoPass";
static char __pyx_k_singleMu_leg2_noisoPass[] = "singleMu_leg2_noisoPass";
static char __pyx_k_tAgainstElectronMVA5raw[] = "tAgainstElectronMVA5raw";
static char __pyx_k_tDecayModeFindingNewDMs[] = "tDecayModeFindingNewDMs";
static char __pyx_k_tMuonIdIsoStdVtxOverlap[] = "tMuonIdIsoStdVtxOverlap";
static char __pyx_k_mTkLayersWithMeasurement[] = "mTkLayersWithMeasurement";
static char __pyx_k_singleMu_leg1_noisoGroup[] = "singleMu_leg1_noisoGroup";
static char __pyx_k_singleMu_leg2_noisoGroup[] = "singleMu_leg2_noisoGroup";
static char __pyx_k_tauVetoPt20Loose3HitsVtx[] = "tauVetoPt20Loose3HitsVtx";
static char __pyx_k_tauVetoPt20TightMVALTVtx[] = "tauVetoPt20TightMVALTVtx";
static char __pyx_k_tAgainstElectronLooseMVA5[] = "tAgainstElectronLooseMVA5";
static char __pyx_k_tAgainstElectronTightMVA5[] = "tAgainstElectronTightMVA5";
static char __pyx_k_tElectronPt10IdVtxOverlap[] = "tElectronPt10IdVtxOverlap";
static char __pyx_k_tElectronPt15IdVtxOverlap[] = "tElectronPt15IdVtxOverlap";
static char __pyx_k_tAgainstElectronMediumMVA5[] = "tAgainstElectronMediumMVA5";
static char __pyx_k_tAgainstElectronVLooseMVA5[] = "tAgainstElectronVLooseMVA5";
static char __pyx_k_tAgainstElectronVTightMVA5[] = "tAgainstElectronVTightMVA5";
static char __pyx_k_tauVetoPt20EleLooseMuTight[] = "tauVetoPt20EleLooseMuTight";
static char __pyx_k_tauVetoPt20EleTightMuLoose[] = "tauVetoPt20EleTightMuLoose";
static char __pyx_k_mMatchesSingleMu_leg1_noiso[] = "mMatchesSingleMu_leg1_noiso";
static char __pyx_k_mMatchesSingleMu_leg2_noiso[] = "mMatchesSingleMu_leg2_noiso";
static char __pyx_k_singleMu_leg1_noisoPrescale[] = "singleMu_leg1_noisoPrescale";
static char __pyx_k_singleMu_leg2_noisoPrescale[] = "singleMu_leg2_noisoPrescale";
static char __pyx_k_tByIsolationMVA3newDMwLTraw[] = "tByIsolationMVA3newDMwLTraw";
static char __pyx_k_tByIsolationMVA3oldDMwLTraw[] = "tByIsolationMVA3oldDMwLTraw";
static char __pyx_k_tAgainstElectronMVA5category[] = "tAgainstElectronMVA5category";
static char __pyx_k_tElectronPt10IdIsoVtxOverlap[] = "tElectronPt10IdIsoVtxOverlap";
static char __pyx_k_tElectronPt15IdIsoVtxOverlap[] = "tElectronPt15IdIsoVtxOverlap";
static char __pyx_k_tByLooseIsolationMVA3newDMwLT[] = "tByLooseIsolationMVA3newDMwLT";
static char __pyx_k_tByLooseIsolationMVA3oldDMwLT[] = "tByLooseIsolationMVA3oldDMwLT";
static char __pyx_k_tByTightIsolationMVA3newDMwLT[] = "tByTightIsolationMVA3newDMwLT";
static char __pyx_k_tByTightIsolationMVA3oldDMwLT[] = "tByTightIsolationMVA3oldDMwLT";
static char __pyx_k_tauVetoPt20Loose3HitsNewDMVtx[] = "tauVetoPt20Loose3HitsNewDMVtx";
static char __pyx_k_tauVetoPt20TightMVALTNewDMVtx[] = "tauVetoPt20TightMVALTNewDMVtx";
static char __pyx_k_tByMediumIsolationMVA3newDMwLT[] = "tByMediumIsolationMVA3newDMwLT";
static char __pyx_k_tByMediumIsolationMVA3oldDMwLT[] = "tByMediumIsolationMVA3oldDMwLT";
static char __pyx_k_tByVLooseIsolationMVA3newDMwLT[] = "tByVLooseIsolationMVA3newDMwLT";
static char __pyx_k_tByVLooseIsolationMVA3oldDMwLT[] = "tByVLooseIsolationMVA3oldDMwLT";
static char __pyx_k_tByVTightIsolationMVA3newDMwLT[] = "tByVTightIsolationMVA3newDMwLT";
static char __pyx_k_tByVTightIsolationMVA3oldDMwLT[] = "tByVTightIsolationMVA3oldDMwLT";
static char __pyx_k_MuTauTree_Expected_branch_mIP3D[] = "MuTauTree: Expected branch mIP3D does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMass[] = "MuTauTree: Expected branch mMass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPVDZ[] = "MuTauTree: Expected branch mPVDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mRank[] = "MuTauTree: Expected branch mRank does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet[] = "MuTauTree: Expected branch pfMet_jes_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvRho[] = "MuTauTree: Expected branch pvRho does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMass[] = "MuTauTree: Expected branch tMass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tPVDZ[] = "MuTauTree: Expected branch tPVDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tRank[] = "MuTauTree: Expected branch tRank does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_type1[] = "MuTauTree: Expected branch type1_pfMetEt does not exist! It will crash if you try and use it!";
static char __pyx_k_afs_hep_wisc_edu_cms_aglevine_F[] = "/afs/hep.wisc.edu/cms/aglevine/FSA_MiniAod/CMSSW_7_4_12/src/UWHiggs/lfvmutau/MuTauTree.pyx";
static char __pyx_k_tByVVTightIsolationMVA3newDMwLT[] = "tByVVTightIsolationMVA3newDMwLT";
static char __pyx_k_tByVVTightIsolationMVA3oldDMwLT[] = "tByVVTightIsolationMVA3oldDMwLT";
static char __pyx_k_MuTauTree_Expected_branch_EmbPtW[] = "MuTauTree: Expected branch EmbPtWeight does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_Eta_do[] = "MuTauTree: Expected branch Eta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_GenWei[] = "MuTauTree: Expected branch GenWeight does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_Ht_doe[] = "MuTauTree: Expected branch Ht does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_LT_doe[] = "MuTauTree: Expected branch LT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_MassEr[] = "MuTauTree: Expected branch MassError does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_Mass_d[] = "MuTauTree: Expected branch Mass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_Mt_doe[] = "MuTauTree: Expected branch Mt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_NUP_do[] = "MuTauTree: Expected branch NUP does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_Phi_do[] = "MuTauTree: Expected branch Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_Pt_doe[] = "MuTauTree: Expected branch Pt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_bjetCI[] = "MuTauTree: Expected branch bjetCISVVeto20Loose does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_charge[] = "MuTauTree: Expected branch charge does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double[] = "MuTauTree: Expected branch doubleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_eVetoM[] = "MuTauTree: Expected branch eVetoMVAIso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_evt_do[] = "MuTauTree: Expected branch evt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_idx_do[] = "MuTauTree: Expected branch idx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_isdata[] = "MuTauTree: Expected branch isdata does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_jetVet[] = "MuTauTree: Expected branch jetVeto20 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_lumi_d[] = "MuTauTree: Expected branch lumi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mAbsEt[] = "MuTauTree: Expected branch mAbsEta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mBestT[] = "MuTauTree: Expected branch mBestTrackType does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mCharg[] = "MuTauTree: Expected branch mCharge does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mComes[] = "MuTauTree: Expected branch mComesFromHiggs does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mEffec[] = "MuTauTree: Expected branch mEffectiveArea2011 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mEta_d[] = "MuTauTree: Expected branch mEta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenCh[] = "MuTauTree: Expected branch mGenCharge does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenEn[] = "MuTauTree: Expected branch mGenEnergy does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenEt[] = "MuTauTree: Expected branch mGenEta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenMo[] = "MuTauTree: Expected branch mGenMotherPdgId does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenPd[] = "MuTauTree: Expected branch mGenPdgId does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenPh[] = "MuTauTree: Expected branch mGenPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenPt[] = "MuTauTree: Expected branch mGenPt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenVZ[] = "MuTauTree: Expected branch mGenVZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mGenVt[] = "MuTauTree: Expected branch mGenVtxPVMatch does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mIP3DE[] = "MuTauTree: Expected branch mIP3DErr does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mIsGlo[] = "MuTauTree: Expected branch mIsGlobal does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mIsPFM[] = "MuTauTree: Expected branch mIsPFMuon does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mIsTra[] = "MuTauTree: Expected branch mIsTracker does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetAr[] = "MuTauTree: Expected branch mJetArea does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetBt[] = "MuTauTree: Expected branch mJetBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetEt[] = "MuTauTree: Expected branch mJetEtaEtaMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetPF[] = "MuTauTree: Expected branch mJetPFCISVBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetPa[] = "MuTauTree: Expected branch mJetPartonFlavour does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetPh[] = "MuTauTree: Expected branch mJetPhiPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetPt[] = "MuTauTree: Expected branch mJetPt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mLowes[] = "MuTauTree: Expected branch mLowestMll does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch[] = "MuTauTree: Expected branch mMatchedStations does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToM[] = "MuTauTree: Expected branch mMtToMET does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToP[] = "MuTauTree: Expected branch mMtToPFMET does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMuonH[] = "MuTauTree: Expected branch mMuonHits does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mNeare[] = "MuTauTree: Expected branch mNearestZMass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mNormT[] = "MuTauTree: Expected branch mNormTrkChi2 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFCha[] = "MuTauTree: Expected branch mPFChargedIso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFIDL[] = "MuTauTree: Expected branch mPFIDLoose does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFIDM[] = "MuTauTree: Expected branch mPFIDMedium does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFIDT[] = "MuTauTree: Expected branch mPFIDTight does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFNeu[] = "MuTauTree: Expected branch mPFNeutralIso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFPUC[] = "MuTauTree: Expected branch mPFPUChargedIso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPFPho[] = "MuTauTree: Expected branch mPFPhotonIso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPVDXY[] = "MuTauTree: Expected branch mPVDXY does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPhi_d[] = "MuTauTree: Expected branch mPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPixHi[] = "MuTauTree: Expected branch mPixHits does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mPt_do[] = "MuTauTree: Expected branch mPt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mRelPF[] = "MuTauTree: Expected branch mRelPFIsoDBDefault does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mRho_d[] = "MuTauTree: Expected branch mRho does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mSIP2D[] = "MuTauTree: Expected branch mSIP2D does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mSIP3D[] = "MuTauTree: Expected branch mSIP3D does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mTkLay[] = "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mToMET[] = "MuTauTree: Expected branch mToMETDPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mTypeC[] = "MuTauTree: Expected branch mTypeCode does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mVZ_do[] = "MuTauTree: Expected branch mVZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_Co[] = "MuTauTree: Expected branch m_t_CosThetaStar does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_DP[] = "MuTauTree: Expected branch m_t_DPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_DR[] = "MuTauTree: Expected branch m_t_DR does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_Et[] = "MuTauTree: Expected branch m_t_Eta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_Ma[] = "MuTauTree: Expected branch m_t_Mass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_Mt[] = "MuTauTree: Expected branch m_t_Mt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_PZ[] = "MuTauTree: Expected branch m_t_PZeta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_Ph[] = "MuTauTree: Expected branch m_t_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_Pt[] = "MuTauTree: Expected branch m_t_Pt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_SS[] = "MuTauTree: Expected branch m_t_SS does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_To[] = "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_muGlbI[] = "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_muVeto[] = "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_nTrueP[] = "MuTauTree: Expected branch nTruePU does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_nvtx_d[] = "MuTauTree: Expected branch nvtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMetE[] = "MuTauTree: Expected branch pfMetEt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMetP[] = "MuTauTree: Expected branch pfMetPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_proces[] = "MuTauTree: Expected branch processID does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvChi2[] = "MuTauTree: Expected branch pvChi2 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvDX_d[] = "MuTauTree: Expected branch pvDX does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvDY_d[] = "MuTauTree: Expected branch pvDY does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvDZ_d[] = "MuTauTree: Expected branch pvDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvIsFa[] = "MuTauTree: Expected branch pvIsFake does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvIsVa[] = "MuTauTree: Expected branch pvIsValid does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvNorm[] = "MuTauTree: Expected branch pvNormChi2 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvX_do[] = "MuTauTree: Expected branch pvX does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvY_do[] = "MuTauTree: Expected branch pvY does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvZ_do[] = "MuTauTree: Expected branch pvZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pvndof[] = "MuTauTree: Expected branch pvndof does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_recoil[] = "MuTauTree: Expected branch recoilDaught does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_rho_do[] = "MuTauTree: Expected branch rho does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_run_do[] = "MuTauTree: Expected branch run does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single[] = "MuTauTree: Expected branch singleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAbsEt[] = "MuTauTree: Expected branch tAbsEta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain[] = "MuTauTree: Expected branch tAgainstElectronLooseMVA5 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByCom[] = "MuTauTree: Expected branch tByCombinedIsolationDeltaBetaCorrRaw3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByIso[] = "MuTauTree: Expected branch tByIsolationMVA3newDMwLTraw does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByLoo[] = "MuTauTree: Expected branch tByLooseCombinedIsolationDeltaBetaCorr3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByMed[] = "MuTauTree: Expected branch tByMediumCombinedIsolationDeltaBetaCorr3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByTig[] = "MuTauTree: Expected branch tByTightCombinedIsolationDeltaBetaCorr3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByVLo[] = "MuTauTree: Expected branch tByVLooseIsolationMVA3newDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByVTi[] = "MuTauTree: Expected branch tByVTightIsolationMVA3newDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByVVT[] = "MuTauTree: Expected branch tByVVTightIsolationMVA3newDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tCharg[] = "MuTauTree: Expected branch tCharge does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tDecay[] = "MuTauTree: Expected branch tDecayMode does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tElecO[] = "MuTauTree: Expected branch tElecOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tElect[] = "MuTauTree: Expected branch tElectronPt10IdIsoVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tEta_d[] = "MuTauTree: Expected branch tEta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tGenDe[] = "MuTauTree: Expected branch tGenDecayMode does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tGloba[] = "MuTauTree: Expected branch tGlobalMuonVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetAr[] = "MuTauTree: Expected branch tJetArea does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetBt[] = "MuTauTree: Expected branch tJetBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetEt[] = "MuTauTree: Expected branch tJetEtaEtaMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetPF[] = "MuTauTree: Expected branch tJetPFCISVBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetPa[] = "MuTauTree: Expected branch tJetPartonFlavour does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetPh[] = "MuTauTree: Expected branch tJetPhiPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetPt[] = "MuTauTree: Expected branch tJetPt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tLeadT[] = "MuTauTree: Expected branch tLeadTrackPt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tLowes[] = "MuTauTree: Expected branch tLowestMll does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToM[] = "MuTauTree: Expected branch tMtToMET does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToP[] = "MuTauTree: Expected branch tMtToPFMET does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMuOve[] = "MuTauTree: Expected branch tMuOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMuonI[] = "MuTauTree: Expected branch tMuonIdIsoStdVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tNeare[] = "MuTauTree: Expected branch tNearestZMass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tNeutr[] = "MuTauTree: Expected branch tNeutralIsoPtSum does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tPVDXY[] = "MuTauTree: Expected branch tPVDXY does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tPhi_d[] = "MuTauTree: Expected branch tPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tPt_do[] = "MuTauTree: Expected branch tPt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tPuCor[] = "MuTauTree: Expected branch tPuCorrPtSum does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tTNPId[] = "MuTauTree: Expected branch tTNPId does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tToMET[] = "MuTauTree: Expected branch tToMETDPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tVZ_do[] = "MuTauTree: Expected branch tVZ does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tauVet[] = "MuTauTree: Expected branch tauVetoPt20EleLooseMuTight does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_triple[] = "MuTauTree: Expected branch tripleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfDet[] = "MuTauTree: Expected branch vbfDeta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfDij[] = "MuTauTree: Expected branch vbfDijetrap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfDph[] = "MuTauTree: Expected branch vbfDphi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfHra[] = "MuTauTree: Expected branch vbfHrap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfJet[] = "MuTauTree: Expected branch vbfJetVeto20 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfMVA[] = "MuTauTree: Expected branch vbfMVA does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfMas[] = "MuTauTree: Expected branch vbfMass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfNJe[] = "MuTauTree: Expected branch vbfNJets does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfVis[] = "MuTauTree: Expected branch vbfVispt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfdij[] = "MuTauTree: Expected branch vbfdijetpt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfdit[] = "MuTauTree: Expected branch vbfditaupt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfj1e[] = "MuTauTree: Expected branch vbfj1eta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfj1p[] = "MuTauTree: Expected branch vbfj1pt does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfj2e[] = "MuTauTree: Expected branch vbfj2eta does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfj2p[] = "MuTauTree: Expected branch vbfj2pt does not exist! It will crash if you try and use it!";
static char __pyx_k_tByCombinedIsolationDeltaBetaCor[] = "tByCombinedIsolationDeltaBetaCorrRaw3Hits";
static char __pyx_k_tByLooseCombinedIsolationDeltaBe[] = "tByLooseCombinedIsolationDeltaBetaCorr3Hits";
static char __pyx_k_tByMediumCombinedIsolationDeltaB[] = "tByMediumCombinedIsolationDeltaBetaCorr3Hits";
static char __pyx_k_tByTightCombinedIsolationDeltaBe[] = "tByTightCombinedIsolationDeltaBetaCorr3Hits";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_2[] = "MuTauTree: Expected branch pfMet_jes_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_3[] = "MuTauTree: Expected branch pfMet_mes_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_4[] = "MuTauTree: Expected branch pfMet_mes_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_5[] = "MuTauTree: Expected branch pfMet_tes_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_6[] = "MuTauTree: Expected branch pfMet_tes_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_7[] = "MuTauTree: Expected branch pfMet_ues_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_pfMet_8[] = "MuTauTree: Expected branch pfMet_ues_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_type1_2[] = "MuTauTree: Expected branch type1_pfMetPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_MassEr_2[] = "MuTauTree: Expected branch MassErrord1 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_MassEr_3[] = "MuTauTree: Expected branch MassErrord2 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_MassEr_4[] = "MuTauTree: Expected branch MassErrord3 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_MassEr_5[] = "MuTauTree: Expected branch MassErrord4 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_bjetCI_2[] = "MuTauTree: Expected branch bjetCISVVeto20Medium does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_bjetCI_3[] = "MuTauTree: Expected branch bjetCISVVeto20Tight does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_bjetCI_4[] = "MuTauTree: Expected branch bjetCISVVeto30Loose does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_bjetCI_5[] = "MuTauTree: Expected branch bjetCISVVeto30Medium does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_bjetCI_6[] = "MuTauTree: Expected branch bjetCISVVeto30Tight does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_2[] = "MuTauTree: Expected branch doubleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_3[] = "MuTauTree: Expected branch doubleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_4[] = "MuTauTree: Expected branch doubleESingleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_5[] = "MuTauTree: Expected branch doubleESingleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_6[] = "MuTauTree: Expected branch doubleESingleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_7[] = "MuTauTree: Expected branch doubleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_8[] = "MuTauTree: Expected branch doubleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_9[] = "MuTauTree: Expected branch doubleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_eVetoM_2[] = "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_jetVet_2[] = "MuTauTree: Expected branch jetVeto20_DR05 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_jetVet_3[] = "MuTauTree: Expected branch jetVeto30 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_jetVet_4[] = "MuTauTree: Expected branch jetVeto30_DR05 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_jetVet_5[] = "MuTauTree: Expected branch jetVeto40 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_jetVet_6[] = "MuTauTree: Expected branch jetVeto40_DR05 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mEffec_2[] = "MuTauTree: Expected branch mEffectiveArea2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetEt_2[] = "MuTauTree: Expected branch mJetEtaPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mJetEt_3[] = "MuTauTree: Expected branch mJetEtaPhiSpread does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_2[] = "MuTauTree: Expected branch mMatchesDoubleESingleMu does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_3[] = "MuTauTree: Expected branch mMatchesDoubleMu does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_4[] = "MuTauTree: Expected branch mMatchesDoubleMuSingleE does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_5[] = "MuTauTree: Expected branch mMatchesSingleESingleMu does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_6[] = "MuTauTree: Expected branch mMatchesSingleMu does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_7[] = "MuTauTree: Expected branch mMatchesSingleMuSingleE does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_8[] = "MuTauTree: Expected branch mMatchesSingleMu_leg1 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_9[] = "MuTauTree: Expected branch mMatchesSingleMu_leg1_noiso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToP_2[] = "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToP_3[] = "MuTauTree: Expected branch mMtToPfMet_jes does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToP_4[] = "MuTauTree: Expected branch mMtToPfMet_mes does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToP_5[] = "MuTauTree: Expected branch mMtToPfMet_tes does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMtToP_6[] = "MuTauTree: Expected branch mMtToPfMet_ues does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mRelPF_2[] = "MuTauTree: Expected branch mRelPFIsoRho does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mRelPF_3[] = "MuTauTree: Expected branch mRelPFIsoRhoFSR does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_m_t_PZ_2[] = "MuTauTree: Expected branch m_t_PZetaVis does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_muVeto_2[] = "MuTauTree: Expected branch muVetoPt5 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_muVeto_3[] = "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_recoil_2[] = "MuTauTree: Expected branch recoilWithMet does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_2[] = "MuTauTree: Expected branch singleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_3[] = "MuTauTree: Expected branch singleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_4[] = "MuTauTree: Expected branch singleESingleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_5[] = "MuTauTree: Expected branch singleESingleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_6[] = "MuTauTree: Expected branch singleESingleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_7[] = "MuTauTree: Expected branch singleE_leg1Group does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_8[] = "MuTauTree: Expected branch singleE_leg1Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_9[] = "MuTauTree: Expected branch singleE_leg1Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_2[] = "MuTauTree: Expected branch tAgainstElectronMVA5category does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_3[] = "MuTauTree: Expected branch tAgainstElectronMVA5raw does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_4[] = "MuTauTree: Expected branch tAgainstElectronMediumMVA5 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_5[] = "MuTauTree: Expected branch tAgainstElectronTightMVA5 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_6[] = "MuTauTree: Expected branch tAgainstElectronVLooseMVA5 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_7[] = "MuTauTree: Expected branch tAgainstElectronVTightMVA5 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_8[] = "MuTauTree: Expected branch tAgainstMuonLoose3 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tAgain_9[] = "MuTauTree: Expected branch tAgainstMuonTight3 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByIso_2[] = "MuTauTree: Expected branch tByIsolationMVA3oldDMwLTraw does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByLoo_2[] = "MuTauTree: Expected branch tByLooseIsolationMVA3newDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByLoo_3[] = "MuTauTree: Expected branch tByLooseIsolationMVA3oldDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByMed_2[] = "MuTauTree: Expected branch tByMediumIsolationMVA3newDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByMed_3[] = "MuTauTree: Expected branch tByMediumIsolationMVA3oldDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByTig_2[] = "MuTauTree: Expected branch tByTightIsolationMVA3newDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByTig_3[] = "MuTauTree: Expected branch tByTightIsolationMVA3oldDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByVLo_2[] = "MuTauTree: Expected branch tByVLooseIsolationMVA3oldDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByVTi_2[] = "MuTauTree: Expected branch tByVTightIsolationMVA3oldDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tByVVT_2[] = "MuTauTree: Expected branch tByVVTightIsolationMVA3oldDMwLT does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tCharg_2[] = "MuTauTree: Expected branch tChargedIsoPtSum does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tDecay_2[] = "MuTauTree: Expected branch tDecayModeFinding does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tDecay_3[] = "MuTauTree: Expected branch tDecayModeFindingNewDMs does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tElect_2[] = "MuTauTree: Expected branch tElectronPt10IdVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tElect_3[] = "MuTauTree: Expected branch tElectronPt15IdIsoVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tElect_4[] = "MuTauTree: Expected branch tElectronPt15IdVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetEt_2[] = "MuTauTree: Expected branch tJetEtaPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tJetEt_3[] = "MuTauTree: Expected branch tJetEtaPhiSpread does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToP_2[] = "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToP_3[] = "MuTauTree: Expected branch tMtToPfMet_jes does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToP_4[] = "MuTauTree: Expected branch tMtToPfMet_mes does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToP_5[] = "MuTauTree: Expected branch tMtToPfMet_tes does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMtToP_6[] = "MuTauTree: Expected branch tMtToPfMet_ues does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMuonI_2[] = "MuTauTree: Expected branch tMuonIdIsoVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tMuonI_3[] = "MuTauTree: Expected branch tMuonIdVtxOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tauVet_2[] = "MuTauTree: Expected branch tauVetoPt20EleTightMuLoose does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tauVet_3[] = "MuTauTree: Expected branch tauVetoPt20Loose3HitsNewDMVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tauVet_4[] = "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tauVet_5[] = "MuTauTree: Expected branch tauVetoPt20TightMVALTNewDMVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_tauVet_6[] = "MuTauTree: Expected branch tauVetoPt20TightMVALTVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_triple_2[] = "MuTauTree: Expected branch tripleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_triple_3[] = "MuTauTree: Expected branch tripleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_triple_4[] = "MuTauTree: Expected branch tripleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_triple_5[] = "MuTauTree: Expected branch tripleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_triple_6[] = "MuTauTree: Expected branch tripleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfDph_2[] = "MuTauTree: Expected branch vbfDphihj does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfDph_3[] = "MuTauTree: Expected branch vbfDphihjnomet does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfJet_2[] = "MuTauTree: Expected branch vbfJetVeto30 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfJet_3[] = "MuTauTree: Expected branch vbfJetVetoTight20 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_vbfJet_4[] = "MuTauTree: Expected branch vbfJetVetoTight30 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_10[] = "MuTauTree: Expected branch doubleMuSingleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_11[] = "MuTauTree: Expected branch doubleMuSingleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_12[] = "MuTauTree: Expected branch doubleMuSingleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_13[] = "MuTauTree: Expected branch doubleTauGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_14[] = "MuTauTree: Expected branch doubleTauPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_double_15[] = "MuTauTree: Expected branch doubleTauPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_10[] = "MuTauTree: Expected branch mMatchesSingleMu_leg2 does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_11[] = "MuTauTree: Expected branch mMatchesSingleMu_leg2_noiso does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_mMatch_12[] = "MuTauTree: Expected branch mMatchesTripleMu does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_10[] = "MuTauTree: Expected branch singleE_leg2Group does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_11[] = "MuTauTree: Expected branch singleE_leg2Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_12[] = "MuTauTree: Expected branch singleE_leg2Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_13[] = "MuTauTree: Expected branch singleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_14[] = "MuTauTree: Expected branch singleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_15[] = "MuTauTree: Expected branch singleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_16[] = "MuTauTree: Expected branch singleMuSingleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_17[] = "MuTauTree: Expected branch singleMuSingleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_18[] = "MuTauTree: Expected branch singleMuSingleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_19[] = "MuTauTree: Expected branch singleMu_leg1Group does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_20[] = "MuTauTree: Expected branch singleMu_leg1Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_21[] = "MuTauTree: Expected branch singleMu_leg1Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_22[] = "MuTauTree: Expected branch singleMu_leg1_noisoGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_23[] = "MuTauTree: Expected branch singleMu_leg1_noisoPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_24[] = "MuTauTree: Expected branch singleMu_leg1_noisoPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_25[] = "MuTauTree: Expected branch singleMu_leg2Group does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_26[] = "MuTauTree: Expected branch singleMu_leg2Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_27[] = "MuTauTree: Expected branch singleMu_leg2Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_28[] = "MuTauTree: Expected branch singleMu_leg2_noisoGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_29[] = "MuTauTree: Expected branch singleMu_leg2_noisoPass does not exist! It will crash if you try and use it!";
static char __pyx_k_MuTauTree_Expected_branch_single_30[] = "MuTauTree: Expected branch singleMu_leg2_noisoPrescale does not exist! It will crash if you try and use it!";
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_n_s_AsCObject;
static PyObject *__pyx_n_s_MuTauTree;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_EmbPtW;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_Eta_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_GenWei;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_Ht_doe;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_LT_doe;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_MassEr;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_MassEr_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_MassEr_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_MassEr_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_MassEr_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_Mass_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_Mt_doe;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_NUP_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_Phi_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_Pt_doe;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_bjetCI;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_charge;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_10;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_11;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_12;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_13;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_14;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_15;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_7;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_8;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_double_9;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_eVetoM;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_eVetoM_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_evt_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_idx_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_isdata;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_jetVet;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_jetVet_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_jetVet_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_jetVet_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_jetVet_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_jetVet_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_lumi_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mAbsEt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mBestT;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mCharg;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mComes;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mEffec;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mEffec_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mEta_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenCh;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenEn;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenEt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenMo;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenPd;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenPh;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenPt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenVZ;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mGenVt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mIP3D;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mIP3DE;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mIsGlo;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mIsPFM;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mIsTra;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetAr;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetBt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetEt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetPF;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetPa;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetPh;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mJetPt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mLowes;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMass;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_10;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_11;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_12;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_7;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_8;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMatch_9;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToM;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToP;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mMuonH;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mNeare;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mNormT;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFCha;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFIDL;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFIDM;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFIDT;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFNeu;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFPUC;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPFPho;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPVDXY;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPVDZ;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPhi_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPixHi;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mPt_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mRank;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mRelPF;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mRho_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mSIP2D;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mSIP3D;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mTkLay;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mToMET;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mTypeC;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_mVZ_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_Co;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_DP;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_DR;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_Et;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ma;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_Mt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ph;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_Pt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_SS;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_m_t_To;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_muGlbI;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_muVeto;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_muVeto_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_muVeto_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_nTrueP;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_nvtx_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMetE;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMetP;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_7;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pfMet_8;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_proces;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvChi2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvDX_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvDY_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvDZ_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvIsFa;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvIsVa;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvNorm;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvRho;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvX_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvY_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvZ_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_pvndof;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_recoil;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_recoil_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_rho_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_run_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_10;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_11;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_12;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_13;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_14;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_15;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_16;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_17;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_18;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_19;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_20;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_21;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_22;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_23;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_24;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_25;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_26;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_27;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_28;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_29;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_30;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_7;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_8;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_single_9;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAbsEt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_7;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_8;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tAgain_9;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByCom;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByIso;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByIso_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByLoo;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByMed;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByMed_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByMed_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByTig;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByTig_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByTig_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByVLo;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByVLo_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByVTi;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByVTi_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByVVT;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tByVVT_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tCharg;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tCharg_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tDecay;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tDecay_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tDecay_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tElecO;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tElect;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tElect_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tElect_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tElect_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tEta_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tGenDe;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tGloba;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetAr;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetBt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetEt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetPF;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetPa;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetPh;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tJetPt;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tLeadT;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tLowes;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMass;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToM;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToP;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMuOve;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMuonI;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tNeare;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tNeutr;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tPVDXY;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tPVDZ;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tPhi_d;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tPt_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tPuCor;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tRank;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tTNPId;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tToMET;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tVZ_do;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tauVet;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tauVet_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tauVet_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tauVet_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tauVet_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_tauVet_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_triple;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_triple_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_triple_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_triple_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_triple_5;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_triple_6;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_type1;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_type1_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfDet;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfDij;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfDph;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfHra;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfJet;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_2;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_3;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_4;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfMVA;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfMas;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfNJe;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfVis;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfdij;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfdit;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfj1e;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfj1p;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfj2e;
static PyObject *__pyx_kp_s_MuTauTree_Expected_branch_vbfj2p;
static PyObject *__pyx_n_s_MuTauTree___iter;
static PyObject *__pyx_n_s_MuTauTree_where;
static PyObject *__pyx_n_s_ROOT;
static PyObject *__pyx_n_s_Warning;
static PyObject *__pyx_kp_s_afs_hep_wisc_edu_cms_aglevine_F;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_category;
static PyObject *__pyx_n_s_close;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_filename;
static PyObject *__pyx_n_s_formatwarning;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_iter;
static PyObject *__pyx_n_s_line;
static PyObject *__pyx_n_s_lineno;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_message;
static PyObject *__pyx_n_s_my_warning_format;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_kp_s_s_s;
static PyObject *__pyx_n_s_send;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_throw;
static PyObject *__pyx_n_s_ttree;
static PyObject *__pyx_n_s_warn;
static PyObject *__pyx_n_s_warnings;
static PyObject *__pyx_n_s_where;
static PyObject *__pyx_pf_9MuTauTree_my_warning_format(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_message, PyObject *__pyx_v_category, CYTHON_UNUSED PyObject *__pyx_v_filename, CYTHON_UNUSED PyObject *__pyx_v_lineno, CYTHON_UNUSED PyObject *__pyx_v_line); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree___cinit__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_ttree); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2__iter__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5where(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_filter); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5entry___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree_5entry_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11EmbPtWeight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3Eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9GenWeight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Ht___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2LT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9MassError___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord4___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Mt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3NUP___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto20Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20bjetCISVVeto20Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto20Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto30Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20bjetCISVVeto30Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto30Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6charge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11doubleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15doubleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleESingleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19doubleESingleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23doubleESingleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doubleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleMuSingleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19doubleMuSingleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23doubleMuSingleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14doubleTauGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doubleTauPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doubleTauPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11eVetoMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3evt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6isdata___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14jetVeto20_DR05___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14jetVeto30_DR05___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto40___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14jetVeto40_DR05___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4lumi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mBestTrackType___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mComesFromHiggs___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mGenCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mGenEnergy___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mGenEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mGenMotherPdgId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mGenPdgId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mGenPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mGenPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mGenVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mGenVtxPVMatch___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mIP3D___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mIP3DErr___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mIsGlobal___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mIsPFMuon___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIsTracker___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mJetPFCISVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mJetPartonFlavour___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mLowestMll___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchedStations___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesDoubleESingleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchesDoubleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesDoubleMuSingleE___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesSingleESingleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchesSingleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesSingleMuSingleE___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg1_noiso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg2_noiso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchesTripleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mMuonHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mNearestZMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mNormTrkChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mPFIDLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mPFIDMedium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mPFIDTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFNeutralIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPFPUChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mPFPhotonIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mPVDXY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mPVDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mPixHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mRank___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mRelPFIsoDBDefault___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mRelPFIsoRho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mRelPFIsoRhoFSR___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mRho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mSIP2D___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mSIP3D___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mTypeCode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16m_t_CosThetaStar___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_DPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_DR___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7m_t_Eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_Mt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9m_t_PZeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12m_t_PZetaVis___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7m_t_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_SS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9muVetoPt5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7nTruePU___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4nvtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_jes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_jes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_mes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_mes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_tes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_tes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_ues_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_ues_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9processID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pvIsFake___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9pvIsValid___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10pvNormChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5pvRho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvndof___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12recoilDaught___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13recoilWithMet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3rho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3run___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11singleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15singleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleESingleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19singleESingleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleESingleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleE_leg1Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleE_leg1Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleE_leg1Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleE_leg2Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleE_leg2Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleE_leg2Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13singleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleMuSingleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19singleMuSingleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleMuSingleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18singleMu_leg1Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleMu_leg1Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21singleMu_leg1Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24singleMu_leg1_noisoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleMu_leg1_noisoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27singleMu_leg1_noisoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18singleMu_leg2Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleMu_leg2Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21singleMu_leg2Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24singleMu_leg2_noisoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleMu_leg2_noisoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27singleMu_leg2_noisoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tAgainstElectronLooseMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_28tAgainstElectronMVA5category___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAgainstElectronMVA5raw___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronMediumMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tAgainstElectronTightMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronVLooseMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronVTightMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAgainstMuonLoose3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAgainstMuonTight3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_41tByCombinedIsolationDeltaBetaCorrRaw3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27tByIsolationMVA3newDMwLTraw___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27tByIsolationMVA3oldDMwLTraw___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_43tByLooseCombinedIsolationDeltaBetaCorr3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_44tByMediumCombinedIsolationDeltaBetaCorr3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_43tByTightCombinedIsolationDeltaBetaCorr3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tChargedIsoPtSum___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17tDecayModeFinding___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tDecayModeFindingNewDMs___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tElecOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_28tElectronPt10IdIsoVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tElectronPt10IdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_28tElectronPt15IdIsoVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tElectronPt15IdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tGenDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21tGlobalMuonVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tJetPFCISVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17tJetPartonFlavour___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tLeadTrackPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tLowestMll___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMuOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tMuonIdIsoStdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20tMuonIdIsoVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17tMuonIdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tNearestZMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tNeutralIsoPtSum___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tPVDXY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tPVDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tPuCorrPtSum___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tRank___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tTNPId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tauVetoPt20EleLooseMuTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tauVetoPt20EleTightMuLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tauVetoPt20Loose3HitsNewDMVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tauVetoPt20TightMVALTNewDMVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20TightMVALTVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tripleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tripleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tripleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tripleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tripleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tripleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13type1_pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14type1_pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfDeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11vbfDijetrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfDphi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9vbfDphihj___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14vbfDphihjnomet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfHrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17vbfJetVetoTight20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17vbfJetVetoTight30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6vbfMVA___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfNJets___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfVispt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10vbfdijetpt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10vbfditaupt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj1eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfj1pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj2eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfj2pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3idx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10complained___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_4__del__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_9MuTauTree_MuTauTree(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_codeobj__3;

/* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_1my_warning_format(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9MuTauTree_1my_warning_format = {"my_warning_format", (PyCFunction)__pyx_pw_9MuTauTree_1my_warning_format, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9MuTauTree_1my_warning_format(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_message = 0;
  PyObject *__pyx_v_category = 0;
  CYTHON_UNUSED PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED PyObject *__pyx_v_lineno = 0;
  CYTHON_UNUSED PyObject *__pyx_v_line = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("my_warning_format (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_message,&__pyx_n_s_category,&__pyx_n_s_filename,&__pyx_n_s_lineno,&__pyx_n_s_line,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[4] = ((PyObject *)__pyx_kp_s_);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_message)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_category)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lineno)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_line);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "my_warning_format") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_message = values[0];
    __pyx_v_category = values[1];
    __pyx_v_filename = values[2];
    __pyx_v_lineno = values[3];
    __pyx_v_line = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("MuTauTree.my_warning_format", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9MuTauTree_my_warning_format(__pyx_self, __pyx_v_message, __pyx_v_category, __pyx_v_filename, __pyx_v_lineno, __pyx_v_line);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_my_warning_format(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_message, PyObject *__pyx_v_category, CYTHON_UNUSED PyObject *__pyx_v_filename, CYTHON_UNUSED PyObject *__pyx_v_lineno, CYTHON_UNUSED PyObject *__pyx_v_line) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("my_warning_format", 0);

  /* "MuTauTree.pyx":39
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)             # <<<<<<<<<<<<<<
 * warnings.formatwarning = my_warning_format
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_category, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_message);
  __Pyx_GIVEREF(__pyx_v_message);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_message);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_s_s, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("MuTauTree.my_warning_format", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":986
 * 
 * 
 *     def __cinit__(self, ttree):             # <<<<<<<<<<<<<<
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 */

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ttree = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ttree,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ttree)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 986; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ttree = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 986; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree___cinit__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), __pyx_v_ttree);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9MuTauTree_9MuTauTree___cinit__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_ttree) {
  PyObject *__pyx_v_AsCObject = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  void *__pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "MuTauTree.pyx":989
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 *         from ROOT import AsCObject             # <<<<<<<<<<<<<<
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_AsCObject);
  __Pyx_GIVEREF(__pyx_n_s_AsCObject);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_AsCObject);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_ROOT, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_AsCObject); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_AsCObject = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "MuTauTree.pyx":990
 *         # Constructor from a ROOT.TTree
 *         from ROOT import AsCObject
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         self.currentTreeNumber = -1
 */
  __Pyx_INCREF(__pyx_v_AsCObject);
  __pyx_t_1 = __pyx_v_AsCObject; __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  if (!__pyx_t_3) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_ttree); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    __Pyx_INCREF(__pyx_v_ttree);
    __Pyx_GIVEREF(__pyx_v_ttree);
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v_ttree);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = PyCObject_AsVoidPtr(__pyx_t_2); if (unlikely(__pyx_t_5 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->tree = ((TTree *)__pyx_t_5);

  /* "MuTauTree.pyx":991
 *         from ROOT import AsCObject
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         self.currentTreeNumber = -1
 *         #print self.tree.GetEntries()
 */
  __pyx_v_self->ientry = 0;

  /* "MuTauTree.pyx":992
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0
 *         self.currentTreeNumber = -1             # <<<<<<<<<<<<<<
 *         #print self.tree.GetEntries()
 *         #self.load_entry(0)
 */
  __pyx_v_self->currentTreeNumber = -1;

  /* "MuTauTree.pyx":995
 *         #print self.tree.GetEntries()
 *         #self.load_entry(0)
 *         self.complained = set([])             # <<<<<<<<<<<<<<
 * 
 *     cdef load_entry(self, long i):
 */
  __pyx_t_2 = PySet_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 995; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(__pyx_v_self->complained);
  __pyx_v_self->complained = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "MuTauTree.pyx":986
 * 
 * 
 *     def __cinit__(self, ttree):             # <<<<<<<<<<<<<<
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_AsCObject);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":997
 *         self.complained = set([])
 * 
 *     cdef load_entry(self, long i):             # <<<<<<<<<<<<<<
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 */

static PyObject *__pyx_f_9MuTauTree_9MuTauTree_load_entry(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, long __pyx_v_i) {
  TTree *__pyx_v_new_tree;
  int __pyx_v_treenum;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_entry", 0);

  /* "MuTauTree.pyx":1000
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 *         self.localentry = self.tree.LoadTree(i)             # <<<<<<<<<<<<<<
 *         #print "local", self.localentry
 *         new_tree = self.tree.GetTree()
 */
  __pyx_v_self->localentry = __pyx_v_self->tree->LoadTree(__pyx_v_i);

  /* "MuTauTree.pyx":1002
 *         self.localentry = self.tree.LoadTree(i)
 *         #print "local", self.localentry
 *         new_tree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *         #print "tree", <long>(new_tree)
 *         treenum = self.tree.GetTreeNumber()
 */
  __pyx_v_new_tree = __pyx_v_self->tree->GetTree();

  /* "MuTauTree.pyx":1004
 *         new_tree = self.tree.GetTree()
 *         #print "tree", <long>(new_tree)
 *         treenum = self.tree.GetTreeNumber()             # <<<<<<<<<<<<<<
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:
 */
  __pyx_v_treenum = __pyx_v_self->tree->GetTreeNumber();

  /* "MuTauTree.pyx":1006
 *         treenum = self.tree.GetTreeNumber()
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:             # <<<<<<<<<<<<<<
 *             #print "New tree!"
 *             self.currentTree = new_tree
 */
  __pyx_t_2 = ((__pyx_v_treenum != __pyx_v_self->currentTreeNumber) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_new_tree != __pyx_v_self->currentTree) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1008
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:
 *             #print "New tree!"
 *             self.currentTree = new_tree             # <<<<<<<<<<<<<<
 *             self.currentTreeNumber = treenum
 *             self.setup_branches(new_tree)
 */
    __pyx_v_self->currentTree = __pyx_v_new_tree;

    /* "MuTauTree.pyx":1009
 *             #print "New tree!"
 *             self.currentTree = new_tree
 *             self.currentTreeNumber = treenum             # <<<<<<<<<<<<<<
 *             self.setup_branches(new_tree)
 * 
 */
    __pyx_v_self->currentTreeNumber = __pyx_v_treenum;

    /* "MuTauTree.pyx":1010
 *             self.currentTree = new_tree
 *             self.currentTreeNumber = treenum
 *             self.setup_branches(new_tree)             # <<<<<<<<<<<<<<
 * 
 *     cdef setup_branches(self, TTree* the_tree):
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_9MuTauTree_MuTauTree *)__pyx_v_self->__pyx_vtab)->setup_branches(__pyx_v_self, __pyx_v_new_tree); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1010; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1006
 *         treenum = self.tree.GetTreeNumber()
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:             # <<<<<<<<<<<<<<
 *             #print "New tree!"
 *             self.currentTree = new_tree
 */
  }

  /* "MuTauTree.pyx":997
 *         self.complained = set([])
 * 
 *     cdef load_entry(self, long i):             # <<<<<<<<<<<<<<
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.load_entry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":1012
 *             self.setup_branches(new_tree)
 * 
 *     cdef setup_branches(self, TTree* the_tree):             # <<<<<<<<<<<<<<
 *         #print "setup"
 * 
 */

static PyObject *__pyx_f_9MuTauTree_9MuTauTree_setup_branches(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, TTree *__pyx_v_the_tree) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_branches", 0);

  /* "MuTauTree.pyx":1016
 * 
 *         #print "making EmbPtWeight"
 *         self.EmbPtWeight_branch = the_tree.GetBranch("EmbPtWeight")             # <<<<<<<<<<<<<<
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":
 */
  __pyx_v_self->EmbPtWeight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_EmbPtWeight);

  /* "MuTauTree.pyx":1018
 *         self.EmbPtWeight_branch = the_tree.GetBranch("EmbPtWeight")
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("EmbPtWeight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->EmbPtWeight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1019
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":
 *             warnings.warn( "MuTauTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("EmbPtWeight")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_EmbPtW);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_EmbPtW);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_EmbPtW);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1018
 *         self.EmbPtWeight_branch = the_tree.GetBranch("EmbPtWeight")
 *         #if not self.EmbPtWeight_branch and "EmbPtWeight" not in self.complained:
 *         if not self.EmbPtWeight_branch and "EmbPtWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch EmbPtWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("EmbPtWeight")
 */
    goto __pyx_L3;
  }

  /* "MuTauTree.pyx":1022
 *             #self.complained.add("EmbPtWeight")
 *         else:
 *             self.EmbPtWeight_branch.SetAddress(<void*>&self.EmbPtWeight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Eta"
 */
  /*else*/ {
    __pyx_v_self->EmbPtWeight_branch->SetAddress(((void *)(&__pyx_v_self->EmbPtWeight_value)));
  }
  __pyx_L3:;

  /* "MuTauTree.pyx":1025
 * 
 *         #print "making Eta"
 *         self.Eta_branch = the_tree.GetBranch("Eta")             # <<<<<<<<<<<<<<
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":
 */
  __pyx_v_self->Eta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_Eta);

  /* "MuTauTree.pyx":1027
 *         self.Eta_branch = the_tree.GetBranch("Eta")
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L7_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L7_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1028
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":
 *             warnings.warn( "MuTauTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Eta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_Eta_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_Eta_do);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_Eta_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1027
 *         self.Eta_branch = the_tree.GetBranch("Eta")
 *         #if not self.Eta_branch and "Eta" not in self.complained:
 *         if not self.Eta_branch and "Eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Eta")
 */
    goto __pyx_L6;
  }

  /* "MuTauTree.pyx":1031
 *             #self.complained.add("Eta")
 *         else:
 *             self.Eta_branch.SetAddress(<void*>&self.Eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making GenWeight"
 */
  /*else*/ {
    __pyx_v_self->Eta_branch->SetAddress(((void *)(&__pyx_v_self->Eta_value)));
  }
  __pyx_L6:;

  /* "MuTauTree.pyx":1034
 * 
 *         #print "making GenWeight"
 *         self.GenWeight_branch = the_tree.GetBranch("GenWeight")             # <<<<<<<<<<<<<<
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":
 */
  __pyx_v_self->GenWeight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_GenWeight);

  /* "MuTauTree.pyx":1036
 *         self.GenWeight_branch = the_tree.GetBranch("GenWeight")
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("GenWeight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->GenWeight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L10_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1037
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":
 *             warnings.warn( "MuTauTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("GenWeight")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_GenWei);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_GenWei);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_GenWei);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1036
 *         self.GenWeight_branch = the_tree.GetBranch("GenWeight")
 *         #if not self.GenWeight_branch and "GenWeight" not in self.complained:
 *         if not self.GenWeight_branch and "GenWeight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch GenWeight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("GenWeight")
 */
    goto __pyx_L9;
  }

  /* "MuTauTree.pyx":1040
 *             #self.complained.add("GenWeight")
 *         else:
 *             self.GenWeight_branch.SetAddress(<void*>&self.GenWeight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Ht"
 */
  /*else*/ {
    __pyx_v_self->GenWeight_branch->SetAddress(((void *)(&__pyx_v_self->GenWeight_value)));
  }
  __pyx_L9:;

  /* "MuTauTree.pyx":1043
 * 
 *         #print "making Ht"
 *         self.Ht_branch = the_tree.GetBranch("Ht")             # <<<<<<<<<<<<<<
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":
 */
  __pyx_v_self->Ht_branch = __pyx_v_the_tree->GetBranch(__pyx_k_Ht);

  /* "MuTauTree.pyx":1045
 *         self.Ht_branch = the_tree.GetBranch("Ht")
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ht")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Ht_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L13_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L13_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1046
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":
 *             warnings.warn( "MuTauTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Ht")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_Ht_doe);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_Ht_doe);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_Ht_doe);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1045
 *         self.Ht_branch = the_tree.GetBranch("Ht")
 *         #if not self.Ht_branch and "Ht" not in self.complained:
 *         if not self.Ht_branch and "Ht":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Ht does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Ht")
 */
    goto __pyx_L12;
  }

  /* "MuTauTree.pyx":1049
 *             #self.complained.add("Ht")
 *         else:
 *             self.Ht_branch.SetAddress(<void*>&self.Ht_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making LT"
 */
  /*else*/ {
    __pyx_v_self->Ht_branch->SetAddress(((void *)(&__pyx_v_self->Ht_value)));
  }
  __pyx_L12:;

  /* "MuTauTree.pyx":1052
 * 
 *         #print "making LT"
 *         self.LT_branch = the_tree.GetBranch("LT")             # <<<<<<<<<<<<<<
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 */
  __pyx_v_self->LT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_LT);

  /* "MuTauTree.pyx":1054
 *         self.LT_branch = the_tree.GetBranch("LT")
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("LT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->LT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L16_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L16_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1055
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 *             warnings.warn( "MuTauTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("LT")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_LT_doe);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_LT_doe);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_LT_doe);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1054
 *         self.LT_branch = the_tree.GetBranch("LT")
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("LT")
 */
    goto __pyx_L15;
  }

  /* "MuTauTree.pyx":1058
 *             #self.complained.add("LT")
 *         else:
 *             self.LT_branch.SetAddress(<void*>&self.LT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Mass"
 */
  /*else*/ {
    __pyx_v_self->LT_branch->SetAddress(((void *)(&__pyx_v_self->LT_value)));
  }
  __pyx_L15:;

  /* "MuTauTree.pyx":1061
 * 
 *         #print "making Mass"
 *         self.Mass_branch = the_tree.GetBranch("Mass")             # <<<<<<<<<<<<<<
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 */
  __pyx_v_self->Mass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_Mass);

  /* "MuTauTree.pyx":1063
 *         self.Mass_branch = the_tree.GetBranch("Mass")
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Mass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L19_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L19_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1064
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 *             warnings.warn( "MuTauTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mass")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_Mass_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_Mass_d);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_Mass_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1064; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1063
 *         self.Mass_branch = the_tree.GetBranch("Mass")
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mass")
 */
    goto __pyx_L18;
  }

  /* "MuTauTree.pyx":1067
 *             #self.complained.add("Mass")
 *         else:
 *             self.Mass_branch.SetAddress(<void*>&self.Mass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassError"
 */
  /*else*/ {
    __pyx_v_self->Mass_branch->SetAddress(((void *)(&__pyx_v_self->Mass_value)));
  }
  __pyx_L18:;

  /* "MuTauTree.pyx":1070
 * 
 *         #print "making MassError"
 *         self.MassError_branch = the_tree.GetBranch("MassError")             # <<<<<<<<<<<<<<
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 */
  __pyx_v_self->MassError_branch = __pyx_v_the_tree->GetBranch(__pyx_k_MassError);

  /* "MuTauTree.pyx":1072
 *         self.MassError_branch = the_tree.GetBranch("MassError")
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassError")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassError_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L22_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L22_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1073
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 *             warnings.warn( "MuTauTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassError")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_MassEr);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1073; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1072
 *         self.MassError_branch = the_tree.GetBranch("MassError")
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassError")
 */
    goto __pyx_L21;
  }

  /* "MuTauTree.pyx":1076
 *             #self.complained.add("MassError")
 *         else:
 *             self.MassError_branch.SetAddress(<void*>&self.MassError_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord1"
 */
  /*else*/ {
    __pyx_v_self->MassError_branch->SetAddress(((void *)(&__pyx_v_self->MassError_value)));
  }
  __pyx_L21:;

  /* "MuTauTree.pyx":1079
 * 
 *         #print "making MassErrord1"
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 */
  __pyx_v_self->MassErrord1_branch = __pyx_v_the_tree->GetBranch(__pyx_k_MassErrord1);

  /* "MuTauTree.pyx":1081
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L25_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L25_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1082
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord1")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_MassEr_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1081
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord1")
 */
    goto __pyx_L24;
  }

  /* "MuTauTree.pyx":1085
 *             #self.complained.add("MassErrord1")
 *         else:
 *             self.MassErrord1_branch.SetAddress(<void*>&self.MassErrord1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord2"
 */
  /*else*/ {
    __pyx_v_self->MassErrord1_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord1_value)));
  }
  __pyx_L24:;

  /* "MuTauTree.pyx":1088
 * 
 *         #print "making MassErrord2"
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 */
  __pyx_v_self->MassErrord2_branch = __pyx_v_the_tree->GetBranch(__pyx_k_MassErrord2);

  /* "MuTauTree.pyx":1090
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L28_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L28_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1091
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord2")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_MassEr_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1090
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord2")
 */
    goto __pyx_L27;
  }

  /* "MuTauTree.pyx":1094
 *             #self.complained.add("MassErrord2")
 *         else:
 *             self.MassErrord2_branch.SetAddress(<void*>&self.MassErrord2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord3"
 */
  /*else*/ {
    __pyx_v_self->MassErrord2_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord2_value)));
  }
  __pyx_L27:;

  /* "MuTauTree.pyx":1097
 * 
 *         #print "making MassErrord3"
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 */
  __pyx_v_self->MassErrord3_branch = __pyx_v_the_tree->GetBranch(__pyx_k_MassErrord3);

  /* "MuTauTree.pyx":1099
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord3")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord3_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L31_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L31_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1100
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord3")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_4);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_MassEr_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1099
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord3")
 */
    goto __pyx_L30;
  }

  /* "MuTauTree.pyx":1103
 *             #self.complained.add("MassErrord3")
 *         else:
 *             self.MassErrord3_branch.SetAddress(<void*>&self.MassErrord3_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord4"
 */
  /*else*/ {
    __pyx_v_self->MassErrord3_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord3_value)));
  }
  __pyx_L30:;

  /* "MuTauTree.pyx":1106
 * 
 *         #print "making MassErrord4"
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 */
  __pyx_v_self->MassErrord4_branch = __pyx_v_the_tree->GetBranch(__pyx_k_MassErrord4);

  /* "MuTauTree.pyx":1108
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord4")
 */
  __pyx_t_2 = ((!(__pyx_v_self->MassErrord4_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L34_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L34_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1109
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord4")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_MassEr_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_MassEr_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1109; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1108
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord4")
 */
    goto __pyx_L33;
  }

  /* "MuTauTree.pyx":1112
 *             #self.complained.add("MassErrord4")
 *         else:
 *             self.MassErrord4_branch.SetAddress(<void*>&self.MassErrord4_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Mt"
 */
  /*else*/ {
    __pyx_v_self->MassErrord4_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord4_value)));
  }
  __pyx_L33:;

  /* "MuTauTree.pyx":1115
 * 
 *         #print "making Mt"
 *         self.Mt_branch = the_tree.GetBranch("Mt")             # <<<<<<<<<<<<<<
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":
 */
  __pyx_v_self->Mt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_Mt);

  /* "MuTauTree.pyx":1117
 *         self.Mt_branch = the_tree.GetBranch("Mt")
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Mt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L37_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L37_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1118
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":
 *             warnings.warn( "MuTauTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_Mt_doe);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_Mt_doe);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_Mt_doe);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1117
 *         self.Mt_branch = the_tree.GetBranch("Mt")
 *         #if not self.Mt_branch and "Mt" not in self.complained:
 *         if not self.Mt_branch and "Mt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Mt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mt")
 */
    goto __pyx_L36;
  }

  /* "MuTauTree.pyx":1121
 *             #self.complained.add("Mt")
 *         else:
 *             self.Mt_branch.SetAddress(<void*>&self.Mt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making NUP"
 */
  /*else*/ {
    __pyx_v_self->Mt_branch->SetAddress(((void *)(&__pyx_v_self->Mt_value)));
  }
  __pyx_L36:;

  /* "MuTauTree.pyx":1124
 * 
 *         #print "making NUP"
 *         self.NUP_branch = the_tree.GetBranch("NUP")             # <<<<<<<<<<<<<<
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":
 */
  __pyx_v_self->NUP_branch = __pyx_v_the_tree->GetBranch(__pyx_k_NUP);

  /* "MuTauTree.pyx":1126
 *         self.NUP_branch = the_tree.GetBranch("NUP")
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("NUP")
 */
  __pyx_t_2 = ((!(__pyx_v_self->NUP_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L40_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L40_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1127
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":
 *             warnings.warn( "MuTauTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("NUP")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_NUP_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_NUP_do);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_NUP_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1126
 *         self.NUP_branch = the_tree.GetBranch("NUP")
 *         #if not self.NUP_branch and "NUP" not in self.complained:
 *         if not self.NUP_branch and "NUP":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch NUP does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("NUP")
 */
    goto __pyx_L39;
  }

  /* "MuTauTree.pyx":1130
 *             #self.complained.add("NUP")
 *         else:
 *             self.NUP_branch.SetAddress(<void*>&self.NUP_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Phi"
 */
  /*else*/ {
    __pyx_v_self->NUP_branch->SetAddress(((void *)(&__pyx_v_self->NUP_value)));
  }
  __pyx_L39:;

  /* "MuTauTree.pyx":1133
 * 
 *         #print "making Phi"
 *         self.Phi_branch = the_tree.GetBranch("Phi")             # <<<<<<<<<<<<<<
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":
 */
  __pyx_v_self->Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_Phi);

  /* "MuTauTree.pyx":1135
 *         self.Phi_branch = the_tree.GetBranch("Phi")
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L43_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L43_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1136
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":
 *             warnings.warn( "MuTauTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Phi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_Phi_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_Phi_do);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_Phi_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1135
 *         self.Phi_branch = the_tree.GetBranch("Phi")
 *         #if not self.Phi_branch and "Phi" not in self.complained:
 *         if not self.Phi_branch and "Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Phi")
 */
    goto __pyx_L42;
  }

  /* "MuTauTree.pyx":1139
 *             #self.complained.add("Phi")
 *         else:
 *             self.Phi_branch.SetAddress(<void*>&self.Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Pt"
 */
  /*else*/ {
    __pyx_v_self->Phi_branch->SetAddress(((void *)(&__pyx_v_self->Phi_value)));
  }
  __pyx_L42:;

  /* "MuTauTree.pyx":1142
 * 
 *         #print "making Pt"
 *         self.Pt_branch = the_tree.GetBranch("Pt")             # <<<<<<<<<<<<<<
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 */
  __pyx_v_self->Pt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_Pt);

  /* "MuTauTree.pyx":1144
 *         self.Pt_branch = the_tree.GetBranch("Pt")
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->Pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L46_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L46_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1145
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 *             warnings.warn( "MuTauTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Pt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_Pt_doe);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_Pt_doe);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_Pt_doe);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1144
 *         self.Pt_branch = the_tree.GetBranch("Pt")
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Pt")
 */
    goto __pyx_L45;
  }

  /* "MuTauTree.pyx":1148
 *             #self.complained.add("Pt")
 *         else:
 *             self.Pt_branch.SetAddress(<void*>&self.Pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCISVVeto20Loose"
 */
  /*else*/ {
    __pyx_v_self->Pt_branch->SetAddress(((void *)(&__pyx_v_self->Pt_value)));
  }
  __pyx_L45:;

  /* "MuTauTree.pyx":1151
 * 
 *         #print "making bjetCISVVeto20Loose"
 *         self.bjetCISVVeto20Loose_branch = the_tree.GetBranch("bjetCISVVeto20Loose")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose" not in self.complained:
 *         if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose":
 */
  __pyx_v_self->bjetCISVVeto20Loose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_bjetCISVVeto20Loose);

  /* "MuTauTree.pyx":1153
 *         self.bjetCISVVeto20Loose_branch = the_tree.GetBranch("bjetCISVVeto20Loose")
 *         #if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose" not in self.complained:
 *         if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Loose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto20Loose")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetCISVVeto20Loose_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L49_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L49_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1154
 *         #if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose" not in self.complained:
 *         if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose":
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Loose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCISVVeto20Loose")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_bjetCI);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1153
 *         self.bjetCISVVeto20Loose_branch = the_tree.GetBranch("bjetCISVVeto20Loose")
 *         #if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose" not in self.complained:
 *         if not self.bjetCISVVeto20Loose_branch and "bjetCISVVeto20Loose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Loose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto20Loose")
 */
    goto __pyx_L48;
  }

  /* "MuTauTree.pyx":1157
 *             #self.complained.add("bjetCISVVeto20Loose")
 *         else:
 *             self.bjetCISVVeto20Loose_branch.SetAddress(<void*>&self.bjetCISVVeto20Loose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCISVVeto20Medium"
 */
  /*else*/ {
    __pyx_v_self->bjetCISVVeto20Loose_branch->SetAddress(((void *)(&__pyx_v_self->bjetCISVVeto20Loose_value)));
  }
  __pyx_L48:;

  /* "MuTauTree.pyx":1160
 * 
 *         #print "making bjetCISVVeto20Medium"
 *         self.bjetCISVVeto20Medium_branch = the_tree.GetBranch("bjetCISVVeto20Medium")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium" not in self.complained:
 *         if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium":
 */
  __pyx_v_self->bjetCISVVeto20Medium_branch = __pyx_v_the_tree->GetBranch(__pyx_k_bjetCISVVeto20Medium);

  /* "MuTauTree.pyx":1162
 *         self.bjetCISVVeto20Medium_branch = the_tree.GetBranch("bjetCISVVeto20Medium")
 *         #if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium" not in self.complained:
 *         if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Medium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto20Medium")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetCISVVeto20Medium_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L52_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L52_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1163
 *         #if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium" not in self.complained:
 *         if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium":
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Medium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCISVVeto20Medium")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_bjetCI_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1162
 *         self.bjetCISVVeto20Medium_branch = the_tree.GetBranch("bjetCISVVeto20Medium")
 *         #if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium" not in self.complained:
 *         if not self.bjetCISVVeto20Medium_branch and "bjetCISVVeto20Medium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Medium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto20Medium")
 */
    goto __pyx_L51;
  }

  /* "MuTauTree.pyx":1166
 *             #self.complained.add("bjetCISVVeto20Medium")
 *         else:
 *             self.bjetCISVVeto20Medium_branch.SetAddress(<void*>&self.bjetCISVVeto20Medium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCISVVeto20Tight"
 */
  /*else*/ {
    __pyx_v_self->bjetCISVVeto20Medium_branch->SetAddress(((void *)(&__pyx_v_self->bjetCISVVeto20Medium_value)));
  }
  __pyx_L51:;

  /* "MuTauTree.pyx":1169
 * 
 *         #print "making bjetCISVVeto20Tight"
 *         self.bjetCISVVeto20Tight_branch = the_tree.GetBranch("bjetCISVVeto20Tight")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight" not in self.complained:
 *         if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight":
 */
  __pyx_v_self->bjetCISVVeto20Tight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_bjetCISVVeto20Tight);

  /* "MuTauTree.pyx":1171
 *         self.bjetCISVVeto20Tight_branch = the_tree.GetBranch("bjetCISVVeto20Tight")
 *         #if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight" not in self.complained:
 *         if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Tight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto20Tight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetCISVVeto20Tight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L55_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L55_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1172
 *         #if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight" not in self.complained:
 *         if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight":
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Tight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCISVVeto20Tight")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_bjetCI_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1171
 *         self.bjetCISVVeto20Tight_branch = the_tree.GetBranch("bjetCISVVeto20Tight")
 *         #if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight" not in self.complained:
 *         if not self.bjetCISVVeto20Tight_branch and "bjetCISVVeto20Tight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto20Tight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto20Tight")
 */
    goto __pyx_L54;
  }

  /* "MuTauTree.pyx":1175
 *             #self.complained.add("bjetCISVVeto20Tight")
 *         else:
 *             self.bjetCISVVeto20Tight_branch.SetAddress(<void*>&self.bjetCISVVeto20Tight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCISVVeto30Loose"
 */
  /*else*/ {
    __pyx_v_self->bjetCISVVeto20Tight_branch->SetAddress(((void *)(&__pyx_v_self->bjetCISVVeto20Tight_value)));
  }
  __pyx_L54:;

  /* "MuTauTree.pyx":1178
 * 
 *         #print "making bjetCISVVeto30Loose"
 *         self.bjetCISVVeto30Loose_branch = the_tree.GetBranch("bjetCISVVeto30Loose")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose" not in self.complained:
 *         if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose":
 */
  __pyx_v_self->bjetCISVVeto30Loose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_bjetCISVVeto30Loose);

  /* "MuTauTree.pyx":1180
 *         self.bjetCISVVeto30Loose_branch = the_tree.GetBranch("bjetCISVVeto30Loose")
 *         #if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose" not in self.complained:
 *         if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Loose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto30Loose")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetCISVVeto30Loose_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L58_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L58_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1181
 *         #if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose" not in self.complained:
 *         if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose":
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Loose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCISVVeto30Loose")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_4);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_bjetCI_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1180
 *         self.bjetCISVVeto30Loose_branch = the_tree.GetBranch("bjetCISVVeto30Loose")
 *         #if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose" not in self.complained:
 *         if not self.bjetCISVVeto30Loose_branch and "bjetCISVVeto30Loose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Loose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto30Loose")
 */
    goto __pyx_L57;
  }

  /* "MuTauTree.pyx":1184
 *             #self.complained.add("bjetCISVVeto30Loose")
 *         else:
 *             self.bjetCISVVeto30Loose_branch.SetAddress(<void*>&self.bjetCISVVeto30Loose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCISVVeto30Medium"
 */
  /*else*/ {
    __pyx_v_self->bjetCISVVeto30Loose_branch->SetAddress(((void *)(&__pyx_v_self->bjetCISVVeto30Loose_value)));
  }
  __pyx_L57:;

  /* "MuTauTree.pyx":1187
 * 
 *         #print "making bjetCISVVeto30Medium"
 *         self.bjetCISVVeto30Medium_branch = the_tree.GetBranch("bjetCISVVeto30Medium")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium" not in self.complained:
 *         if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium":
 */
  __pyx_v_self->bjetCISVVeto30Medium_branch = __pyx_v_the_tree->GetBranch(__pyx_k_bjetCISVVeto30Medium);

  /* "MuTauTree.pyx":1189
 *         self.bjetCISVVeto30Medium_branch = the_tree.GetBranch("bjetCISVVeto30Medium")
 *         #if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium" not in self.complained:
 *         if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Medium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto30Medium")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetCISVVeto30Medium_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L61_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L61_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1190
 *         #if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium" not in self.complained:
 *         if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium":
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Medium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCISVVeto30Medium")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_bjetCI_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1189
 *         self.bjetCISVVeto30Medium_branch = the_tree.GetBranch("bjetCISVVeto30Medium")
 *         #if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium" not in self.complained:
 *         if not self.bjetCISVVeto30Medium_branch and "bjetCISVVeto30Medium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Medium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto30Medium")
 */
    goto __pyx_L60;
  }

  /* "MuTauTree.pyx":1193
 *             #self.complained.add("bjetCISVVeto30Medium")
 *         else:
 *             self.bjetCISVVeto30Medium_branch.SetAddress(<void*>&self.bjetCISVVeto30Medium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCISVVeto30Tight"
 */
  /*else*/ {
    __pyx_v_self->bjetCISVVeto30Medium_branch->SetAddress(((void *)(&__pyx_v_self->bjetCISVVeto30Medium_value)));
  }
  __pyx_L60:;

  /* "MuTauTree.pyx":1196
 * 
 *         #print "making bjetCISVVeto30Tight"
 *         self.bjetCISVVeto30Tight_branch = the_tree.GetBranch("bjetCISVVeto30Tight")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight" not in self.complained:
 *         if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight":
 */
  __pyx_v_self->bjetCISVVeto30Tight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_bjetCISVVeto30Tight);

  /* "MuTauTree.pyx":1198
 *         self.bjetCISVVeto30Tight_branch = the_tree.GetBranch("bjetCISVVeto30Tight")
 *         #if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight" not in self.complained:
 *         if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Tight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto30Tight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->bjetCISVVeto30Tight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L64_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L64_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1199
 *         #if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight" not in self.complained:
 *         if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight":
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Tight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCISVVeto30Tight")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_6);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_bjetCI_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1198
 *         self.bjetCISVVeto30Tight_branch = the_tree.GetBranch("bjetCISVVeto30Tight")
 *         #if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight" not in self.complained:
 *         if not self.bjetCISVVeto30Tight_branch and "bjetCISVVeto30Tight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCISVVeto30Tight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCISVVeto30Tight")
 */
    goto __pyx_L63;
  }

  /* "MuTauTree.pyx":1202
 *             #self.complained.add("bjetCISVVeto30Tight")
 *         else:
 *             self.bjetCISVVeto30Tight_branch.SetAddress(<void*>&self.bjetCISVVeto30Tight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making charge"
 */
  /*else*/ {
    __pyx_v_self->bjetCISVVeto30Tight_branch->SetAddress(((void *)(&__pyx_v_self->bjetCISVVeto30Tight_value)));
  }
  __pyx_L63:;

  /* "MuTauTree.pyx":1205
 * 
 *         #print "making charge"
 *         self.charge_branch = the_tree.GetBranch("charge")             # <<<<<<<<<<<<<<
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 */
  __pyx_v_self->charge_branch = __pyx_v_the_tree->GetBranch(__pyx_k_charge);

  /* "MuTauTree.pyx":1207
 *         self.charge_branch = the_tree.GetBranch("charge")
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("charge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->charge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L67_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L67_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1208
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 *             warnings.warn( "MuTauTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("charge")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_charge);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_charge);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_charge);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1207
 *         self.charge_branch = the_tree.GetBranch("charge")
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("charge")
 */
    goto __pyx_L66;
  }

  /* "MuTauTree.pyx":1211
 *             #self.complained.add("charge")
 *         else:
 *             self.charge_branch.SetAddress(<void*>&self.charge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEGroup"
 */
  /*else*/ {
    __pyx_v_self->charge_branch->SetAddress(((void *)(&__pyx_v_self->charge_value)));
  }
  __pyx_L66:;

  /* "MuTauTree.pyx":1214
 * 
 *         #print "making doubleEGroup"
 *         self.doubleEGroup_branch = the_tree.GetBranch("doubleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":
 */
  __pyx_v_self->doubleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleEGroup);

  /* "MuTauTree.pyx":1216
 *         self.doubleEGroup_branch = the_tree.GetBranch("doubleEGroup")
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleEGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L70_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L70_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1217
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEGroup")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1216
 *         self.doubleEGroup_branch = the_tree.GetBranch("doubleEGroup")
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEGroup")
 */
    goto __pyx_L69;
  }

  /* "MuTauTree.pyx":1220
 *             #self.complained.add("doubleEGroup")
 *         else:
 *             self.doubleEGroup_branch.SetAddress(<void*>&self.doubleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEPass"
 */
  /*else*/ {
    __pyx_v_self->doubleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleEGroup_value)));
  }
  __pyx_L69:;

  /* "MuTauTree.pyx":1223
 * 
 *         #print "making doubleEPass"
 *         self.doubleEPass_branch = the_tree.GetBranch("doubleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":
 */
  __pyx_v_self->doubleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleEPass);

  /* "MuTauTree.pyx":1225
 *         self.doubleEPass_branch = the_tree.GetBranch("doubleEPass")
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleEPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L73_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L73_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1226
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEPass")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1225
 *         self.doubleEPass_branch = the_tree.GetBranch("doubleEPass")
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEPass")
 */
    goto __pyx_L72;
  }

  /* "MuTauTree.pyx":1229
 *             #self.complained.add("doubleEPass")
 *         else:
 *             self.doubleEPass_branch.SetAddress(<void*>&self.doubleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEPrescale"
 */
  /*else*/ {
    __pyx_v_self->doubleEPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleEPass_value)));
  }
  __pyx_L72:;

  /* "MuTauTree.pyx":1232
 * 
 *         #print "making doubleEPrescale"
 *         self.doubleEPrescale_branch = the_tree.GetBranch("doubleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":
 */
  __pyx_v_self->doubleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleEPrescale);

  /* "MuTauTree.pyx":1234
 *         self.doubleEPrescale_branch = the_tree.GetBranch("doubleEPrescale")
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleEPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L76_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L76_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1235
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1234
 *         self.doubleEPrescale_branch = the_tree.GetBranch("doubleEPrescale")
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEPrescale")
 */
    goto __pyx_L75;
  }

  /* "MuTauTree.pyx":1238
 *             #self.complained.add("doubleEPrescale")
 *         else:
 *             self.doubleEPrescale_branch.SetAddress(<void*>&self.doubleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleESingleMuGroup"
 */
  /*else*/ {
    __pyx_v_self->doubleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleEPrescale_value)));
  }
  __pyx_L75:;

  /* "MuTauTree.pyx":1241
 * 
 *         #print "making doubleESingleMuGroup"
 *         self.doubleESingleMuGroup_branch = the_tree.GetBranch("doubleESingleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup" not in self.complained:
 *         if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup":
 */
  __pyx_v_self->doubleESingleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleESingleMuGroup);

  /* "MuTauTree.pyx":1243
 *         self.doubleESingleMuGroup_branch = the_tree.GetBranch("doubleESingleMuGroup")
 *         #if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup" not in self.complained:
 *         if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleESingleMuGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleESingleMuGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L79_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L79_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1244
 *         #if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup" not in self.complained:
 *         if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleESingleMuGroup")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1243
 *         self.doubleESingleMuGroup_branch = the_tree.GetBranch("doubleESingleMuGroup")
 *         #if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup" not in self.complained:
 *         if not self.doubleESingleMuGroup_branch and "doubleESingleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleESingleMuGroup")
 */
    goto __pyx_L78;
  }

  /* "MuTauTree.pyx":1247
 *             #self.complained.add("doubleESingleMuGroup")
 *         else:
 *             self.doubleESingleMuGroup_branch.SetAddress(<void*>&self.doubleESingleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleESingleMuPass"
 */
  /*else*/ {
    __pyx_v_self->doubleESingleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleESingleMuGroup_value)));
  }
  __pyx_L78:;

  /* "MuTauTree.pyx":1250
 * 
 *         #print "making doubleESingleMuPass"
 *         self.doubleESingleMuPass_branch = the_tree.GetBranch("doubleESingleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleESingleMuPass_branch and "doubleESingleMuPass" not in self.complained:
 *         if not self.doubleESingleMuPass_branch and "doubleESingleMuPass":
 */
  __pyx_v_self->doubleESingleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleESingleMuPass);

  /* "MuTauTree.pyx":1252
 *         self.doubleESingleMuPass_branch = the_tree.GetBranch("doubleESingleMuPass")
 *         #if not self.doubleESingleMuPass_branch and "doubleESingleMuPass" not in self.complained:
 *         if not self.doubleESingleMuPass_branch and "doubleESingleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleESingleMuPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleESingleMuPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L82_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L82_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1253
 *         #if not self.doubleESingleMuPass_branch and "doubleESingleMuPass" not in self.complained:
 *         if not self.doubleESingleMuPass_branch and "doubleESingleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleESingleMuPass")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1252
 *         self.doubleESingleMuPass_branch = the_tree.GetBranch("doubleESingleMuPass")
 *         #if not self.doubleESingleMuPass_branch and "doubleESingleMuPass" not in self.complained:
 *         if not self.doubleESingleMuPass_branch and "doubleESingleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleESingleMuPass")
 */
    goto __pyx_L81;
  }

  /* "MuTauTree.pyx":1256
 *             #self.complained.add("doubleESingleMuPass")
 *         else:
 *             self.doubleESingleMuPass_branch.SetAddress(<void*>&self.doubleESingleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleESingleMuPrescale"
 */
  /*else*/ {
    __pyx_v_self->doubleESingleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleESingleMuPass_value)));
  }
  __pyx_L81:;

  /* "MuTauTree.pyx":1259
 * 
 *         #print "making doubleESingleMuPrescale"
 *         self.doubleESingleMuPrescale_branch = the_tree.GetBranch("doubleESingleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale" not in self.complained:
 *         if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale":
 */
  __pyx_v_self->doubleESingleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleESingleMuPrescale);

  /* "MuTauTree.pyx":1261
 *         self.doubleESingleMuPrescale_branch = the_tree.GetBranch("doubleESingleMuPrescale")
 *         #if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale" not in self.complained:
 *         if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleESingleMuPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleESingleMuPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L85_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L85_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1262
 *         #if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale" not in self.complained:
 *         if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleESingleMuPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_6);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1261
 *         self.doubleESingleMuPrescale_branch = the_tree.GetBranch("doubleESingleMuPrescale")
 *         #if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale" not in self.complained:
 *         if not self.doubleESingleMuPrescale_branch and "doubleESingleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleESingleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleESingleMuPrescale")
 */
    goto __pyx_L84;
  }

  /* "MuTauTree.pyx":1265
 *             #self.complained.add("doubleESingleMuPrescale")
 *         else:
 *             self.doubleESingleMuPrescale_branch.SetAddress(<void*>&self.doubleESingleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuGroup"
 */
  /*else*/ {
    __pyx_v_self->doubleESingleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleESingleMuPrescale_value)));
  }
  __pyx_L84:;

  /* "MuTauTree.pyx":1268
 * 
 *         #print "making doubleMuGroup"
 *         self.doubleMuGroup_branch = the_tree.GetBranch("doubleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":
 */
  __pyx_v_self->doubleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleMuGroup);

  /* "MuTauTree.pyx":1270
 *         self.doubleMuGroup_branch = the_tree.GetBranch("doubleMuGroup")
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleMuGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L88_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L88_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1271
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuGroup")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_7);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_7);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_7);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1270
 *         self.doubleMuGroup_branch = the_tree.GetBranch("doubleMuGroup")
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuGroup")
 */
    goto __pyx_L87;
  }

  /* "MuTauTree.pyx":1274
 *             #self.complained.add("doubleMuGroup")
 *         else:
 *             self.doubleMuGroup_branch.SetAddress(<void*>&self.doubleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuPass"
 */
  /*else*/ {
    __pyx_v_self->doubleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuGroup_value)));
  }
  __pyx_L87:;

  /* "MuTauTree.pyx":1277
 * 
 *         #print "making doubleMuPass"
 *         self.doubleMuPass_branch = the_tree.GetBranch("doubleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":
 */
  __pyx_v_self->doubleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleMuPass);

  /* "MuTauTree.pyx":1279
 *         self.doubleMuPass_branch = the_tree.GetBranch("doubleMuPass")
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleMuPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L91_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L91_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1280
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuPass")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_8);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_8);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_8);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1280; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1279
 *         self.doubleMuPass_branch = the_tree.GetBranch("doubleMuPass")
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuPass")
 */
    goto __pyx_L90;
  }

  /* "MuTauTree.pyx":1283
 *             #self.complained.add("doubleMuPass")
 *         else:
 *             self.doubleMuPass_branch.SetAddress(<void*>&self.doubleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuPrescale"
 */
  /*else*/ {
    __pyx_v_self->doubleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuPass_value)));
  }
  __pyx_L90:;

  /* "MuTauTree.pyx":1286
 * 
 *         #print "making doubleMuPrescale"
 *         self.doubleMuPrescale_branch = the_tree.GetBranch("doubleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":
 */
  __pyx_v_self->doubleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleMuPrescale);

  /* "MuTauTree.pyx":1288
 *         self.doubleMuPrescale_branch = the_tree.GetBranch("doubleMuPrescale")
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleMuPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L94_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L94_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1289
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_9);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_9);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_9);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1288
 *         self.doubleMuPrescale_branch = the_tree.GetBranch("doubleMuPrescale")
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuPrescale")
 */
    goto __pyx_L93;
  }

  /* "MuTauTree.pyx":1292
 *             #self.complained.add("doubleMuPrescale")
 *         else:
 *             self.doubleMuPrescale_branch.SetAddress(<void*>&self.doubleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuSingleEGroup"
 */
  /*else*/ {
    __pyx_v_self->doubleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuPrescale_value)));
  }
  __pyx_L93:;

  /* "MuTauTree.pyx":1295
 * 
 *         #print "making doubleMuSingleEGroup"
 *         self.doubleMuSingleEGroup_branch = the_tree.GetBranch("doubleMuSingleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup" not in self.complained:
 *         if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup":
 */
  __pyx_v_self->doubleMuSingleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleMuSingleEGroup);

  /* "MuTauTree.pyx":1297
 *         self.doubleMuSingleEGroup_branch = the_tree.GetBranch("doubleMuSingleEGroup")
 *         #if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup" not in self.complained:
 *         if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuSingleEGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleMuSingleEGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L97_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L97_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1298
 *         #if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup" not in self.complained:
 *         if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuSingleEGroup")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_10);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_10);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_10);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1297
 *         self.doubleMuSingleEGroup_branch = the_tree.GetBranch("doubleMuSingleEGroup")
 *         #if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup" not in self.complained:
 *         if not self.doubleMuSingleEGroup_branch and "doubleMuSingleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuSingleEGroup")
 */
    goto __pyx_L96;
  }

  /* "MuTauTree.pyx":1301
 *             #self.complained.add("doubleMuSingleEGroup")
 *         else:
 *             self.doubleMuSingleEGroup_branch.SetAddress(<void*>&self.doubleMuSingleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuSingleEPass"
 */
  /*else*/ {
    __pyx_v_self->doubleMuSingleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuSingleEGroup_value)));
  }
  __pyx_L96:;

  /* "MuTauTree.pyx":1304
 * 
 *         #print "making doubleMuSingleEPass"
 *         self.doubleMuSingleEPass_branch = the_tree.GetBranch("doubleMuSingleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass" not in self.complained:
 *         if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass":
 */
  __pyx_v_self->doubleMuSingleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleMuSingleEPass);

  /* "MuTauTree.pyx":1306
 *         self.doubleMuSingleEPass_branch = the_tree.GetBranch("doubleMuSingleEPass")
 *         #if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass" not in self.complained:
 *         if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuSingleEPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleMuSingleEPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L100_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L100_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1307
 *         #if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass" not in self.complained:
 *         if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuSingleEPass")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_11);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_11);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_11);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1306
 *         self.doubleMuSingleEPass_branch = the_tree.GetBranch("doubleMuSingleEPass")
 *         #if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass" not in self.complained:
 *         if not self.doubleMuSingleEPass_branch and "doubleMuSingleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuSingleEPass")
 */
    goto __pyx_L99;
  }

  /* "MuTauTree.pyx":1310
 *             #self.complained.add("doubleMuSingleEPass")
 *         else:
 *             self.doubleMuSingleEPass_branch.SetAddress(<void*>&self.doubleMuSingleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuSingleEPrescale"
 */
  /*else*/ {
    __pyx_v_self->doubleMuSingleEPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuSingleEPass_value)));
  }
  __pyx_L99:;

  /* "MuTauTree.pyx":1313
 * 
 *         #print "making doubleMuSingleEPrescale"
 *         self.doubleMuSingleEPrescale_branch = the_tree.GetBranch("doubleMuSingleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale" not in self.complained:
 *         if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale":
 */
  __pyx_v_self->doubleMuSingleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleMuSingleEPrescale);

  /* "MuTauTree.pyx":1315
 *         self.doubleMuSingleEPrescale_branch = the_tree.GetBranch("doubleMuSingleEPrescale")
 *         #if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale" not in self.complained:
 *         if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuSingleEPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleMuSingleEPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L103_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L103_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1316
 *         #if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale" not in self.complained:
 *         if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuSingleEPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_12);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_12);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_12);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1315
 *         self.doubleMuSingleEPrescale_branch = the_tree.GetBranch("doubleMuSingleEPrescale")
 *         #if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale" not in self.complained:
 *         if not self.doubleMuSingleEPrescale_branch and "doubleMuSingleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuSingleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuSingleEPrescale")
 */
    goto __pyx_L102;
  }

  /* "MuTauTree.pyx":1319
 *             #self.complained.add("doubleMuSingleEPrescale")
 *         else:
 *             self.doubleMuSingleEPrescale_branch.SetAddress(<void*>&self.doubleMuSingleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleTauGroup"
 */
  /*else*/ {
    __pyx_v_self->doubleMuSingleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuSingleEPrescale_value)));
  }
  __pyx_L102:;

  /* "MuTauTree.pyx":1322
 * 
 *         #print "making doubleTauGroup"
 *         self.doubleTauGroup_branch = the_tree.GetBranch("doubleTauGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleTauGroup_branch and "doubleTauGroup" not in self.complained:
 *         if not self.doubleTauGroup_branch and "doubleTauGroup":
 */
  __pyx_v_self->doubleTauGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleTauGroup);

  /* "MuTauTree.pyx":1324
 *         self.doubleTauGroup_branch = the_tree.GetBranch("doubleTauGroup")
 *         #if not self.doubleTauGroup_branch and "doubleTauGroup" not in self.complained:
 *         if not self.doubleTauGroup_branch and "doubleTauGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleTauGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleTauGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleTauGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L106_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L106_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1325
 *         #if not self.doubleTauGroup_branch and "doubleTauGroup" not in self.complained:
 *         if not self.doubleTauGroup_branch and "doubleTauGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleTauGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleTauGroup")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_13);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_13);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_13);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1324
 *         self.doubleTauGroup_branch = the_tree.GetBranch("doubleTauGroup")
 *         #if not self.doubleTauGroup_branch and "doubleTauGroup" not in self.complained:
 *         if not self.doubleTauGroup_branch and "doubleTauGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleTauGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleTauGroup")
 */
    goto __pyx_L105;
  }

  /* "MuTauTree.pyx":1328
 *             #self.complained.add("doubleTauGroup")
 *         else:
 *             self.doubleTauGroup_branch.SetAddress(<void*>&self.doubleTauGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleTauPass"
 */
  /*else*/ {
    __pyx_v_self->doubleTauGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleTauGroup_value)));
  }
  __pyx_L105:;

  /* "MuTauTree.pyx":1331
 * 
 *         #print "making doubleTauPass"
 *         self.doubleTauPass_branch = the_tree.GetBranch("doubleTauPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleTauPass_branch and "doubleTauPass" not in self.complained:
 *         if not self.doubleTauPass_branch and "doubleTauPass":
 */
  __pyx_v_self->doubleTauPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleTauPass);

  /* "MuTauTree.pyx":1333
 *         self.doubleTauPass_branch = the_tree.GetBranch("doubleTauPass")
 *         #if not self.doubleTauPass_branch and "doubleTauPass" not in self.complained:
 *         if not self.doubleTauPass_branch and "doubleTauPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleTauPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleTauPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleTauPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L109_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L109_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1334
 *         #if not self.doubleTauPass_branch and "doubleTauPass" not in self.complained:
 *         if not self.doubleTauPass_branch and "doubleTauPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleTauPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleTauPass")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_14);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_14);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_14);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1333
 *         self.doubleTauPass_branch = the_tree.GetBranch("doubleTauPass")
 *         #if not self.doubleTauPass_branch and "doubleTauPass" not in self.complained:
 *         if not self.doubleTauPass_branch and "doubleTauPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleTauPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleTauPass")
 */
    goto __pyx_L108;
  }

  /* "MuTauTree.pyx":1337
 *             #self.complained.add("doubleTauPass")
 *         else:
 *             self.doubleTauPass_branch.SetAddress(<void*>&self.doubleTauPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleTauPrescale"
 */
  /*else*/ {
    __pyx_v_self->doubleTauPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleTauPass_value)));
  }
  __pyx_L108:;

  /* "MuTauTree.pyx":1340
 * 
 *         #print "making doubleTauPrescale"
 *         self.doubleTauPrescale_branch = the_tree.GetBranch("doubleTauPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleTauPrescale_branch and "doubleTauPrescale" not in self.complained:
 *         if not self.doubleTauPrescale_branch and "doubleTauPrescale":
 */
  __pyx_v_self->doubleTauPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_doubleTauPrescale);

  /* "MuTauTree.pyx":1342
 *         self.doubleTauPrescale_branch = the_tree.GetBranch("doubleTauPrescale")
 *         #if not self.doubleTauPrescale_branch and "doubleTauPrescale" not in self.complained:
 *         if not self.doubleTauPrescale_branch and "doubleTauPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleTauPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->doubleTauPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L112_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L112_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1343
 *         #if not self.doubleTauPrescale_branch and "doubleTauPrescale" not in self.complained:
 *         if not self.doubleTauPrescale_branch and "doubleTauPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleTauPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_double_15);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_double_15);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_double_15);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1343; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1342
 *         self.doubleTauPrescale_branch = the_tree.GetBranch("doubleTauPrescale")
 *         #if not self.doubleTauPrescale_branch and "doubleTauPrescale" not in self.complained:
 *         if not self.doubleTauPrescale_branch and "doubleTauPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleTauPrescale")
 */
    goto __pyx_L111;
  }

  /* "MuTauTree.pyx":1346
 *             #self.complained.add("doubleTauPrescale")
 *         else:
 *             self.doubleTauPrescale_branch.SetAddress(<void*>&self.doubleTauPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoMVAIso"
 */
  /*else*/ {
    __pyx_v_self->doubleTauPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleTauPrescale_value)));
  }
  __pyx_L111:;

  /* "MuTauTree.pyx":1349
 * 
 *         #print "making eVetoMVAIso"
 *         self.eVetoMVAIso_branch = the_tree.GetBranch("eVetoMVAIso")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":
 */
  __pyx_v_self->eVetoMVAIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_eVetoMVAIso);

  /* "MuTauTree.pyx":1351
 *         self.eVetoMVAIso_branch = the_tree.GetBranch("eVetoMVAIso")
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eVetoMVAIso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L115_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L115_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1352
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoMVAIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_eVetoM);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_eVetoM);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_eVetoM);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1351
 *         self.eVetoMVAIso_branch = the_tree.GetBranch("eVetoMVAIso")
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIso")
 */
    goto __pyx_L114;
  }

  /* "MuTauTree.pyx":1355
 *             #self.complained.add("eVetoMVAIso")
 *         else:
 *             self.eVetoMVAIso_branch.SetAddress(<void*>&self.eVetoMVAIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoMVAIsoVtx"
 */
  /*else*/ {
    __pyx_v_self->eVetoMVAIso_branch->SetAddress(((void *)(&__pyx_v_self->eVetoMVAIso_value)));
  }
  __pyx_L114:;

  /* "MuTauTree.pyx":1358
 * 
 *         #print "making eVetoMVAIsoVtx"
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 */
  __pyx_v_self->eVetoMVAIsoVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_eVetoMVAIsoVtx);

  /* "MuTauTree.pyx":1360
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIsoVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->eVetoMVAIsoVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L118_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L118_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1361
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_eVetoM_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_eVetoM_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_eVetoM_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1360
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIsoVtx")
 */
    goto __pyx_L117;
  }

  /* "MuTauTree.pyx":1364
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 *             self.eVetoMVAIsoVtx_branch.SetAddress(<void*>&self.eVetoMVAIsoVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making evt"
 */
  /*else*/ {
    __pyx_v_self->eVetoMVAIsoVtx_branch->SetAddress(((void *)(&__pyx_v_self->eVetoMVAIsoVtx_value)));
  }
  __pyx_L117:;

  /* "MuTauTree.pyx":1367
 * 
 *         #print "making evt"
 *         self.evt_branch = the_tree.GetBranch("evt")             # <<<<<<<<<<<<<<
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 */
  __pyx_v_self->evt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_evt);

  /* "MuTauTree.pyx":1369
 *         self.evt_branch = the_tree.GetBranch("evt")
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("evt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->evt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L121_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L121_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1370
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 *             warnings.warn( "MuTauTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("evt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_evt_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_evt_do);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_evt_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1369
 *         self.evt_branch = the_tree.GetBranch("evt")
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("evt")
 */
    goto __pyx_L120;
  }

  /* "MuTauTree.pyx":1373
 *             #self.complained.add("evt")
 *         else:
 *             self.evt_branch.SetAddress(<void*>&self.evt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isdata"
 */
  /*else*/ {
    __pyx_v_self->evt_branch->SetAddress(((void *)(&__pyx_v_self->evt_value)));
  }
  __pyx_L120:;

  /* "MuTauTree.pyx":1376
 * 
 *         #print "making isdata"
 *         self.isdata_branch = the_tree.GetBranch("isdata")             # <<<<<<<<<<<<<<
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 */
  __pyx_v_self->isdata_branch = __pyx_v_the_tree->GetBranch(__pyx_k_isdata);

  /* "MuTauTree.pyx":1378
 *         self.isdata_branch = the_tree.GetBranch("isdata")
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isdata")
 */
  __pyx_t_2 = ((!(__pyx_v_self->isdata_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L124_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L124_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1379
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 *             warnings.warn( "MuTauTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isdata")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_isdata);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_isdata);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_isdata);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1378
 *         self.isdata_branch = the_tree.GetBranch("isdata")
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isdata")
 */
    goto __pyx_L123;
  }

  /* "MuTauTree.pyx":1382
 *             #self.complained.add("isdata")
 *         else:
 *             self.isdata_branch.SetAddress(<void*>&self.isdata_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto20"
 */
  /*else*/ {
    __pyx_v_self->isdata_branch->SetAddress(((void *)(&__pyx_v_self->isdata_value)));
  }
  __pyx_L123:;

  /* "MuTauTree.pyx":1385
 * 
 *         #print "making jetVeto20"
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 */
  __pyx_v_self->jetVeto20_branch = __pyx_v_the_tree->GetBranch(__pyx_k_jetVeto20);

  /* "MuTauTree.pyx":1387
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto20_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L127_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L127_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1388
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_jetVet);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1387
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20")
 */
    goto __pyx_L126;
  }

  /* "MuTauTree.pyx":1391
 *             #self.complained.add("jetVeto20")
 *         else:
 *             self.jetVeto20_branch.SetAddress(<void*>&self.jetVeto20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto20_DR05"
 */
  /*else*/ {
    __pyx_v_self->jetVeto20_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto20_value)));
  }
  __pyx_L126:;

  /* "MuTauTree.pyx":1394
 * 
 *         #print "making jetVeto20_DR05"
 *         self.jetVeto20_DR05_branch = the_tree.GetBranch("jetVeto20_DR05")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto20_DR05_branch and "jetVeto20_DR05" not in self.complained:
 *         if not self.jetVeto20_DR05_branch and "jetVeto20_DR05":
 */
  __pyx_v_self->jetVeto20_DR05_branch = __pyx_v_the_tree->GetBranch(__pyx_k_jetVeto20_DR05);

  /* "MuTauTree.pyx":1396
 *         self.jetVeto20_DR05_branch = the_tree.GetBranch("jetVeto20_DR05")
 *         #if not self.jetVeto20_DR05_branch and "jetVeto20_DR05" not in self.complained:
 *         if not self.jetVeto20_DR05_branch and "jetVeto20_DR05":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20_DR05 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20_DR05")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto20_DR05_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L130_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L130_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1397
 *         #if not self.jetVeto20_DR05_branch and "jetVeto20_DR05" not in self.complained:
 *         if not self.jetVeto20_DR05_branch and "jetVeto20_DR05":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20_DR05 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20_DR05")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_jetVet_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1396
 *         self.jetVeto20_DR05_branch = the_tree.GetBranch("jetVeto20_DR05")
 *         #if not self.jetVeto20_DR05_branch and "jetVeto20_DR05" not in self.complained:
 *         if not self.jetVeto20_DR05_branch and "jetVeto20_DR05":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20_DR05 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20_DR05")
 */
    goto __pyx_L129;
  }

  /* "MuTauTree.pyx":1400
 *             #self.complained.add("jetVeto20_DR05")
 *         else:
 *             self.jetVeto20_DR05_branch.SetAddress(<void*>&self.jetVeto20_DR05_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30"
 */
  /*else*/ {
    __pyx_v_self->jetVeto20_DR05_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto20_DR05_value)));
  }
  __pyx_L129:;

  /* "MuTauTree.pyx":1403
 * 
 *         #print "making jetVeto30"
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 */
  __pyx_v_self->jetVeto30_branch = __pyx_v_the_tree->GetBranch(__pyx_k_jetVeto30);

  /* "MuTauTree.pyx":1405
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L133_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L133_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1406
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_jetVet_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1405
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30")
 */
    goto __pyx_L132;
  }

  /* "MuTauTree.pyx":1409
 *             #self.complained.add("jetVeto30")
 *         else:
 *             self.jetVeto30_branch.SetAddress(<void*>&self.jetVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30_DR05"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30_value)));
  }
  __pyx_L132:;

  /* "MuTauTree.pyx":1412
 * 
 *         #print "making jetVeto30_DR05"
 *         self.jetVeto30_DR05_branch = the_tree.GetBranch("jetVeto30_DR05")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30_DR05_branch and "jetVeto30_DR05" not in self.complained:
 *         if not self.jetVeto30_DR05_branch and "jetVeto30_DR05":
 */
  __pyx_v_self->jetVeto30_DR05_branch = __pyx_v_the_tree->GetBranch(__pyx_k_jetVeto30_DR05);

  /* "MuTauTree.pyx":1414
 *         self.jetVeto30_DR05_branch = the_tree.GetBranch("jetVeto30_DR05")
 *         #if not self.jetVeto30_DR05_branch and "jetVeto30_DR05" not in self.complained:
 *         if not self.jetVeto30_DR05_branch and "jetVeto30_DR05":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30_DR05 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30_DR05")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto30_DR05_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L136_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L136_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1415
 *         #if not self.jetVeto30_DR05_branch and "jetVeto30_DR05" not in self.complained:
 *         if not self.jetVeto30_DR05_branch and "jetVeto30_DR05":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30_DR05 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30_DR05")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_jetVet_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1414
 *         self.jetVeto30_DR05_branch = the_tree.GetBranch("jetVeto30_DR05")
 *         #if not self.jetVeto30_DR05_branch and "jetVeto30_DR05" not in self.complained:
 *         if not self.jetVeto30_DR05_branch and "jetVeto30_DR05":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30_DR05 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30_DR05")
 */
    goto __pyx_L135;
  }

  /* "MuTauTree.pyx":1418
 *             #self.complained.add("jetVeto30_DR05")
 *         else:
 *             self.jetVeto30_DR05_branch.SetAddress(<void*>&self.jetVeto30_DR05_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto40"
 */
  /*else*/ {
    __pyx_v_self->jetVeto30_DR05_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30_DR05_value)));
  }
  __pyx_L135:;

  /* "MuTauTree.pyx":1421
 * 
 *         #print "making jetVeto40"
 *         self.jetVeto40_branch = the_tree.GetBranch("jetVeto40")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":
 */
  __pyx_v_self->jetVeto40_branch = __pyx_v_the_tree->GetBranch(__pyx_k_jetVeto40);

  /* "MuTauTree.pyx":1423
 *         self.jetVeto40_branch = the_tree.GetBranch("jetVeto40")
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto40")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto40_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L139_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L139_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1424
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto40")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_jetVet_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1423
 *         self.jetVeto40_branch = the_tree.GetBranch("jetVeto40")
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto40")
 */
    goto __pyx_L138;
  }

  /* "MuTauTree.pyx":1427
 *             #self.complained.add("jetVeto40")
 *         else:
 *             self.jetVeto40_branch.SetAddress(<void*>&self.jetVeto40_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto40_DR05"
 */
  /*else*/ {
    __pyx_v_self->jetVeto40_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto40_value)));
  }
  __pyx_L138:;

  /* "MuTauTree.pyx":1430
 * 
 *         #print "making jetVeto40_DR05"
 *         self.jetVeto40_DR05_branch = the_tree.GetBranch("jetVeto40_DR05")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto40_DR05_branch and "jetVeto40_DR05" not in self.complained:
 *         if not self.jetVeto40_DR05_branch and "jetVeto40_DR05":
 */
  __pyx_v_self->jetVeto40_DR05_branch = __pyx_v_the_tree->GetBranch(__pyx_k_jetVeto40_DR05);

  /* "MuTauTree.pyx":1432
 *         self.jetVeto40_DR05_branch = the_tree.GetBranch("jetVeto40_DR05")
 *         #if not self.jetVeto40_DR05_branch and "jetVeto40_DR05" not in self.complained:
 *         if not self.jetVeto40_DR05_branch and "jetVeto40_DR05":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40_DR05 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto40_DR05")
 */
  __pyx_t_2 = ((!(__pyx_v_self->jetVeto40_DR05_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L142_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L142_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1433
 *         #if not self.jetVeto40_DR05_branch and "jetVeto40_DR05" not in self.complained:
 *         if not self.jetVeto40_DR05_branch and "jetVeto40_DR05":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40_DR05 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto40_DR05")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_jetVet_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_jetVet_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1432
 *         self.jetVeto40_DR05_branch = the_tree.GetBranch("jetVeto40_DR05")
 *         #if not self.jetVeto40_DR05_branch and "jetVeto40_DR05" not in self.complained:
 *         if not self.jetVeto40_DR05_branch and "jetVeto40_DR05":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40_DR05 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto40_DR05")
 */
    goto __pyx_L141;
  }

  /* "MuTauTree.pyx":1436
 *             #self.complained.add("jetVeto40_DR05")
 *         else:
 *             self.jetVeto40_DR05_branch.SetAddress(<void*>&self.jetVeto40_DR05_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making lumi"
 */
  /*else*/ {
    __pyx_v_self->jetVeto40_DR05_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto40_DR05_value)));
  }
  __pyx_L141:;

  /* "MuTauTree.pyx":1439
 * 
 *         #print "making lumi"
 *         self.lumi_branch = the_tree.GetBranch("lumi")             # <<<<<<<<<<<<<<
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 */
  __pyx_v_self->lumi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_lumi);

  /* "MuTauTree.pyx":1441
 *         self.lumi_branch = the_tree.GetBranch("lumi")
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("lumi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->lumi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L145_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L145_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1442
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 *             warnings.warn( "MuTauTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("lumi")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_lumi_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_lumi_d);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_lumi_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1441
 *         self.lumi_branch = the_tree.GetBranch("lumi")
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("lumi")
 */
    goto __pyx_L144;
  }

  /* "MuTauTree.pyx":1445
 *             #self.complained.add("lumi")
 *         else:
 *             self.lumi_branch.SetAddress(<void*>&self.lumi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mAbsEta"
 */
  /*else*/ {
    __pyx_v_self->lumi_branch->SetAddress(((void *)(&__pyx_v_self->lumi_value)));
  }
  __pyx_L144:;

  /* "MuTauTree.pyx":1448
 * 
 *         #print "making mAbsEta"
 *         self.mAbsEta_branch = the_tree.GetBranch("mAbsEta")             # <<<<<<<<<<<<<<
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":
 */
  __pyx_v_self->mAbsEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mAbsEta);

  /* "MuTauTree.pyx":1450
 *         self.mAbsEta_branch = the_tree.GetBranch("mAbsEta")
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mAbsEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mAbsEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mAbsEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L148_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L148_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1451
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":
 *             warnings.warn( "MuTauTree: Expected branch mAbsEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mAbsEta")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mAbsEt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mAbsEt);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mAbsEt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1450
 *         self.mAbsEta_branch = the_tree.GetBranch("mAbsEta")
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mAbsEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mAbsEta")
 */
    goto __pyx_L147;
  }

  /* "MuTauTree.pyx":1454
 *             #self.complained.add("mAbsEta")
 *         else:
 *             self.mAbsEta_branch.SetAddress(<void*>&self.mAbsEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mBestTrackType"
 */
  /*else*/ {
    __pyx_v_self->mAbsEta_branch->SetAddress(((void *)(&__pyx_v_self->mAbsEta_value)));
  }
  __pyx_L147:;

  /* "MuTauTree.pyx":1457
 * 
 *         #print "making mBestTrackType"
 *         self.mBestTrackType_branch = the_tree.GetBranch("mBestTrackType")             # <<<<<<<<<<<<<<
 *         #if not self.mBestTrackType_branch and "mBestTrackType" not in self.complained:
 *         if not self.mBestTrackType_branch and "mBestTrackType":
 */
  __pyx_v_self->mBestTrackType_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mBestTrackType);

  /* "MuTauTree.pyx":1459
 *         self.mBestTrackType_branch = the_tree.GetBranch("mBestTrackType")
 *         #if not self.mBestTrackType_branch and "mBestTrackType" not in self.complained:
 *         if not self.mBestTrackType_branch and "mBestTrackType":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mBestTrackType does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mBestTrackType")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mBestTrackType_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L151_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L151_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1460
 *         #if not self.mBestTrackType_branch and "mBestTrackType" not in self.complained:
 *         if not self.mBestTrackType_branch and "mBestTrackType":
 *             warnings.warn( "MuTauTree: Expected branch mBestTrackType does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mBestTrackType")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mBestT);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mBestT);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mBestT);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1459
 *         self.mBestTrackType_branch = the_tree.GetBranch("mBestTrackType")
 *         #if not self.mBestTrackType_branch and "mBestTrackType" not in self.complained:
 *         if not self.mBestTrackType_branch and "mBestTrackType":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mBestTrackType does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mBestTrackType")
 */
    goto __pyx_L150;
  }

  /* "MuTauTree.pyx":1463
 *             #self.complained.add("mBestTrackType")
 *         else:
 *             self.mBestTrackType_branch.SetAddress(<void*>&self.mBestTrackType_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mCharge"
 */
  /*else*/ {
    __pyx_v_self->mBestTrackType_branch->SetAddress(((void *)(&__pyx_v_self->mBestTrackType_value)));
  }
  __pyx_L150:;

  /* "MuTauTree.pyx":1466
 * 
 *         #print "making mCharge"
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")             # <<<<<<<<<<<<<<
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 */
  __pyx_v_self->mCharge_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mCharge);

  /* "MuTauTree.pyx":1468
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L154_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L154_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1469
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 *             warnings.warn( "MuTauTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mCharge")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mCharg);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mCharg);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mCharg);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1468
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mCharge")
 */
    goto __pyx_L153;
  }

  /* "MuTauTree.pyx":1472
 *             #self.complained.add("mCharge")
 *         else:
 *             self.mCharge_branch.SetAddress(<void*>&self.mCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mComesFromHiggs"
 */
  /*else*/ {
    __pyx_v_self->mCharge_branch->SetAddress(((void *)(&__pyx_v_self->mCharge_value)));
  }
  __pyx_L153:;

  /* "MuTauTree.pyx":1475
 * 
 *         #print "making mComesFromHiggs"
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")             # <<<<<<<<<<<<<<
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 */
  __pyx_v_self->mComesFromHiggs_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mComesFromHiggs);

  /* "MuTauTree.pyx":1477
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mComesFromHiggs")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mComesFromHiggs_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L157_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L157_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1478
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 *             warnings.warn( "MuTauTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mComes);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mComes);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mComes);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1478; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1477
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mComesFromHiggs")
 */
    goto __pyx_L156;
  }

  /* "MuTauTree.pyx":1481
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 *             self.mComesFromHiggs_branch.SetAddress(<void*>&self.mComesFromHiggs_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEffectiveArea2011"
 */
  /*else*/ {
    __pyx_v_self->mComesFromHiggs_branch->SetAddress(((void *)(&__pyx_v_self->mComesFromHiggs_value)));
  }
  __pyx_L156:;

  /* "MuTauTree.pyx":1484
 * 
 *         #print "making mEffectiveArea2011"
 *         self.mEffectiveArea2011_branch = the_tree.GetBranch("mEffectiveArea2011")             # <<<<<<<<<<<<<<
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":
 */
  __pyx_v_self->mEffectiveArea2011_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mEffectiveArea2011);

  /* "MuTauTree.pyx":1486
 *         self.mEffectiveArea2011_branch = the_tree.GetBranch("mEffectiveArea2011")
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2011 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEffectiveArea2011")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mEffectiveArea2011_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L160_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L160_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1487
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2011 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEffectiveArea2011")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mEffec);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mEffec);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mEffec);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1486
 *         self.mEffectiveArea2011_branch = the_tree.GetBranch("mEffectiveArea2011")
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2011 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEffectiveArea2011")
 */
    goto __pyx_L159;
  }

  /* "MuTauTree.pyx":1490
 *             #self.complained.add("mEffectiveArea2011")
 *         else:
 *             self.mEffectiveArea2011_branch.SetAddress(<void*>&self.mEffectiveArea2011_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEffectiveArea2012"
 */
  /*else*/ {
    __pyx_v_self->mEffectiveArea2011_branch->SetAddress(((void *)(&__pyx_v_self->mEffectiveArea2011_value)));
  }
  __pyx_L159:;

  /* "MuTauTree.pyx":1493
 * 
 *         #print "making mEffectiveArea2012"
 *         self.mEffectiveArea2012_branch = the_tree.GetBranch("mEffectiveArea2012")             # <<<<<<<<<<<<<<
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":
 */
  __pyx_v_self->mEffectiveArea2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mEffectiveArea2012);

  /* "MuTauTree.pyx":1495
 *         self.mEffectiveArea2012_branch = the_tree.GetBranch("mEffectiveArea2012")
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEffectiveArea2012")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mEffectiveArea2012_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L163_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L163_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1496
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEffectiveArea2012")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mEffec_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mEffec_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mEffec_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1495
 *         self.mEffectiveArea2012_branch = the_tree.GetBranch("mEffectiveArea2012")
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEffectiveArea2012")
 */
    goto __pyx_L162;
  }

  /* "MuTauTree.pyx":1499
 *             #self.complained.add("mEffectiveArea2012")
 *         else:
 *             self.mEffectiveArea2012_branch.SetAddress(<void*>&self.mEffectiveArea2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEta"
 */
  /*else*/ {
    __pyx_v_self->mEffectiveArea2012_branch->SetAddress(((void *)(&__pyx_v_self->mEffectiveArea2012_value)));
  }
  __pyx_L162:;

  /* "MuTauTree.pyx":1502
 * 
 *         #print "making mEta"
 *         self.mEta_branch = the_tree.GetBranch("mEta")             # <<<<<<<<<<<<<<
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 */
  __pyx_v_self->mEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mEta);

  /* "MuTauTree.pyx":1504
 *         self.mEta_branch = the_tree.GetBranch("mEta")
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L166_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L166_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1505
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 *             warnings.warn( "MuTauTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEta")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mEta_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mEta_d);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mEta_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1504
 *         self.mEta_branch = the_tree.GetBranch("mEta")
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEta")
 */
    goto __pyx_L165;
  }

  /* "MuTauTree.pyx":1508
 *             #self.complained.add("mEta")
 *         else:
 *             self.mEta_branch.SetAddress(<void*>&self.mEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenCharge"
 */
  /*else*/ {
    __pyx_v_self->mEta_branch->SetAddress(((void *)(&__pyx_v_self->mEta_value)));
  }
  __pyx_L165:;

  /* "MuTauTree.pyx":1511
 * 
 *         #print "making mGenCharge"
 *         self.mGenCharge_branch = the_tree.GetBranch("mGenCharge")             # <<<<<<<<<<<<<<
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":
 */
  __pyx_v_self->mGenCharge_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenCharge);

  /* "MuTauTree.pyx":1513
 *         self.mGenCharge_branch = the_tree.GetBranch("mGenCharge")
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L169_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L169_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1514
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":
 *             warnings.warn( "MuTauTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenCharge")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenCh);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenCh);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenCh);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1513
 *         self.mGenCharge_branch = the_tree.GetBranch("mGenCharge")
 *         #if not self.mGenCharge_branch and "mGenCharge" not in self.complained:
 *         if not self.mGenCharge_branch and "mGenCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenCharge")
 */
    goto __pyx_L168;
  }

  /* "MuTauTree.pyx":1517
 *             #self.complained.add("mGenCharge")
 *         else:
 *             self.mGenCharge_branch.SetAddress(<void*>&self.mGenCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenEnergy"
 */
  /*else*/ {
    __pyx_v_self->mGenCharge_branch->SetAddress(((void *)(&__pyx_v_self->mGenCharge_value)));
  }
  __pyx_L168:;

  /* "MuTauTree.pyx":1520
 * 
 *         #print "making mGenEnergy"
 *         self.mGenEnergy_branch = the_tree.GetBranch("mGenEnergy")             # <<<<<<<<<<<<<<
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":
 */
  __pyx_v_self->mGenEnergy_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenEnergy);

  /* "MuTauTree.pyx":1522
 *         self.mGenEnergy_branch = the_tree.GetBranch("mGenEnergy")
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEnergy")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenEnergy_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L172_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L172_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1523
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":
 *             warnings.warn( "MuTauTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenEnergy")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenEn);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenEn);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenEn);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1523; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1522
 *         self.mGenEnergy_branch = the_tree.GetBranch("mGenEnergy")
 *         #if not self.mGenEnergy_branch and "mGenEnergy" not in self.complained:
 *         if not self.mGenEnergy_branch and "mGenEnergy":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenEnergy does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEnergy")
 */
    goto __pyx_L171;
  }

  /* "MuTauTree.pyx":1526
 *             #self.complained.add("mGenEnergy")
 *         else:
 *             self.mGenEnergy_branch.SetAddress(<void*>&self.mGenEnergy_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenEta"
 */
  /*else*/ {
    __pyx_v_self->mGenEnergy_branch->SetAddress(((void *)(&__pyx_v_self->mGenEnergy_value)));
  }
  __pyx_L171:;

  /* "MuTauTree.pyx":1529
 * 
 *         #print "making mGenEta"
 *         self.mGenEta_branch = the_tree.GetBranch("mGenEta")             # <<<<<<<<<<<<<<
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":
 */
  __pyx_v_self->mGenEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenEta);

  /* "MuTauTree.pyx":1531
 *         self.mGenEta_branch = the_tree.GetBranch("mGenEta")
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L175_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L175_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1532
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":
 *             warnings.warn( "MuTauTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenEta")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenEt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenEt);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenEt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1531
 *         self.mGenEta_branch = the_tree.GetBranch("mGenEta")
 *         #if not self.mGenEta_branch and "mGenEta" not in self.complained:
 *         if not self.mGenEta_branch and "mGenEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenEta")
 */
    goto __pyx_L174;
  }

  /* "MuTauTree.pyx":1535
 *             #self.complained.add("mGenEta")
 *         else:
 *             self.mGenEta_branch.SetAddress(<void*>&self.mGenEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenMotherPdgId"
 */
  /*else*/ {
    __pyx_v_self->mGenEta_branch->SetAddress(((void *)(&__pyx_v_self->mGenEta_value)));
  }
  __pyx_L174:;

  /* "MuTauTree.pyx":1538
 * 
 *         #print "making mGenMotherPdgId"
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 */
  __pyx_v_self->mGenMotherPdgId_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenMotherPdgId);

  /* "MuTauTree.pyx":1540
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenMotherPdgId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenMotherPdgId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L178_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L178_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1541
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 *             warnings.warn( "MuTauTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenMo);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenMo);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenMo);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1540
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenMotherPdgId")
 */
    goto __pyx_L177;
  }

  /* "MuTauTree.pyx":1544
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 *             self.mGenMotherPdgId_branch.SetAddress(<void*>&self.mGenMotherPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPdgId"
 */
  /*else*/ {
    __pyx_v_self->mGenMotherPdgId_branch->SetAddress(((void *)(&__pyx_v_self->mGenMotherPdgId_value)));
  }
  __pyx_L177:;

  /* "MuTauTree.pyx":1547
 * 
 *         #print "making mGenPdgId"
 *         self.mGenPdgId_branch = the_tree.GetBranch("mGenPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":
 */
  __pyx_v_self->mGenPdgId_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenPdgId);

  /* "MuTauTree.pyx":1549
 *         self.mGenPdgId_branch = the_tree.GetBranch("mGenPdgId")
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPdgId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPdgId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L181_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L181_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1550
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":
 *             warnings.warn( "MuTauTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPdgId")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenPd);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenPd);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenPd);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1549
 *         self.mGenPdgId_branch = the_tree.GetBranch("mGenPdgId")
 *         #if not self.mGenPdgId_branch and "mGenPdgId" not in self.complained:
 *         if not self.mGenPdgId_branch and "mGenPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPdgId")
 */
    goto __pyx_L180;
  }

  /* "MuTauTree.pyx":1553
 *             #self.complained.add("mGenPdgId")
 *         else:
 *             self.mGenPdgId_branch.SetAddress(<void*>&self.mGenPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPhi"
 */
  /*else*/ {
    __pyx_v_self->mGenPdgId_branch->SetAddress(((void *)(&__pyx_v_self->mGenPdgId_value)));
  }
  __pyx_L180:;

  /* "MuTauTree.pyx":1556
 * 
 *         #print "making mGenPhi"
 *         self.mGenPhi_branch = the_tree.GetBranch("mGenPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":
 */
  __pyx_v_self->mGenPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenPhi);

  /* "MuTauTree.pyx":1558
 *         self.mGenPhi_branch = the_tree.GetBranch("mGenPhi")
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L184_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L184_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1559
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":
 *             warnings.warn( "MuTauTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenPh);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenPh);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenPh);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1558
 *         self.mGenPhi_branch = the_tree.GetBranch("mGenPhi")
 *         #if not self.mGenPhi_branch and "mGenPhi" not in self.complained:
 *         if not self.mGenPhi_branch and "mGenPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPhi")
 */
    goto __pyx_L183;
  }

  /* "MuTauTree.pyx":1562
 *             #self.complained.add("mGenPhi")
 *         else:
 *             self.mGenPhi_branch.SetAddress(<void*>&self.mGenPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenPt"
 */
  /*else*/ {
    __pyx_v_self->mGenPhi_branch->SetAddress(((void *)(&__pyx_v_self->mGenPhi_value)));
  }
  __pyx_L183:;

  /* "MuTauTree.pyx":1565
 * 
 *         #print "making mGenPt"
 *         self.mGenPt_branch = the_tree.GetBranch("mGenPt")             # <<<<<<<<<<<<<<
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":
 */
  __pyx_v_self->mGenPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenPt);

  /* "MuTauTree.pyx":1567
 *         self.mGenPt_branch = the_tree.GetBranch("mGenPt")
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L187_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L187_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1568
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":
 *             warnings.warn( "MuTauTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenPt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenPt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenPt);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenPt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1567
 *         self.mGenPt_branch = the_tree.GetBranch("mGenPt")
 *         #if not self.mGenPt_branch and "mGenPt" not in self.complained:
 *         if not self.mGenPt_branch and "mGenPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenPt")
 */
    goto __pyx_L186;
  }

  /* "MuTauTree.pyx":1571
 *             #self.complained.add("mGenPt")
 *         else:
 *             self.mGenPt_branch.SetAddress(<void*>&self.mGenPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenVZ"
 */
  /*else*/ {
    __pyx_v_self->mGenPt_branch->SetAddress(((void *)(&__pyx_v_self->mGenPt_value)));
  }
  __pyx_L186:;

  /* "MuTauTree.pyx":1574
 * 
 *         #print "making mGenVZ"
 *         self.mGenVZ_branch = the_tree.GetBranch("mGenVZ")             # <<<<<<<<<<<<<<
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":
 */
  __pyx_v_self->mGenVZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenVZ);

  /* "MuTauTree.pyx":1576
 *         self.mGenVZ_branch = the_tree.GetBranch("mGenVZ")
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L190_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L190_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1577
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":
 *             warnings.warn( "MuTauTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenVZ")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenVZ);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenVZ);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenVZ);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1576
 *         self.mGenVZ_branch = the_tree.GetBranch("mGenVZ")
 *         #if not self.mGenVZ_branch and "mGenVZ" not in self.complained:
 *         if not self.mGenVZ_branch and "mGenVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVZ")
 */
    goto __pyx_L189;
  }

  /* "MuTauTree.pyx":1580
 *             #self.complained.add("mGenVZ")
 *         else:
 *             self.mGenVZ_branch.SetAddress(<void*>&self.mGenVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenVtxPVMatch"
 */
  /*else*/ {
    __pyx_v_self->mGenVZ_branch->SetAddress(((void *)(&__pyx_v_self->mGenVZ_value)));
  }
  __pyx_L189:;

  /* "MuTauTree.pyx":1583
 * 
 *         #print "making mGenVtxPVMatch"
 *         self.mGenVtxPVMatch_branch = the_tree.GetBranch("mGenVtxPVMatch")             # <<<<<<<<<<<<<<
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":
 */
  __pyx_v_self->mGenVtxPVMatch_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mGenVtxPVMatch);

  /* "MuTauTree.pyx":1585
 *         self.mGenVtxPVMatch_branch = the_tree.GetBranch("mGenVtxPVMatch")
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVtxPVMatch")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mGenVtxPVMatch_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L193_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L193_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1586
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":
 *             warnings.warn( "MuTauTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenVtxPVMatch")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenVt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mGenVt);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mGenVt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1585
 *         self.mGenVtxPVMatch_branch = the_tree.GetBranch("mGenVtxPVMatch")
 *         #if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch" not in self.complained:
 *         if not self.mGenVtxPVMatch_branch and "mGenVtxPVMatch":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenVtxPVMatch does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenVtxPVMatch")
 */
    goto __pyx_L192;
  }

  /* "MuTauTree.pyx":1589
 *             #self.complained.add("mGenVtxPVMatch")
 *         else:
 *             self.mGenVtxPVMatch_branch.SetAddress(<void*>&self.mGenVtxPVMatch_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIP3D"
 */
  /*else*/ {
    __pyx_v_self->mGenVtxPVMatch_branch->SetAddress(((void *)(&__pyx_v_self->mGenVtxPVMatch_value)));
  }
  __pyx_L192:;

  /* "MuTauTree.pyx":1592
 * 
 *         #print "making mIP3D"
 *         self.mIP3D_branch = the_tree.GetBranch("mIP3D")             # <<<<<<<<<<<<<<
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":
 */
  __pyx_v_self->mIP3D_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mIP3D);

  /* "MuTauTree.pyx":1594
 *         self.mIP3D_branch = the_tree.GetBranch("mIP3D")
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIP3D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L196_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L196_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1595
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":
 *             warnings.warn( "MuTauTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3D")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mIP3D);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mIP3D);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mIP3D);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1594
 *         self.mIP3D_branch = the_tree.GetBranch("mIP3D")
 *         #if not self.mIP3D_branch and "mIP3D" not in self.complained:
 *         if not self.mIP3D_branch and "mIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3D")
 */
    goto __pyx_L195;
  }

  /* "MuTauTree.pyx":1598
 *             #self.complained.add("mIP3D")
 *         else:
 *             self.mIP3D_branch.SetAddress(<void*>&self.mIP3D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIP3DErr"
 */
  /*else*/ {
    __pyx_v_self->mIP3D_branch->SetAddress(((void *)(&__pyx_v_self->mIP3D_value)));
  }
  __pyx_L195:;

  /* "MuTauTree.pyx":1601
 * 
 *         #print "making mIP3DErr"
 *         self.mIP3DErr_branch = the_tree.GetBranch("mIP3DErr")             # <<<<<<<<<<<<<<
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":
 */
  __pyx_v_self->mIP3DErr_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mIP3DErr);

  /* "MuTauTree.pyx":1603
 *         self.mIP3DErr_branch = the_tree.GetBranch("mIP3DErr")
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3DErr")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIP3DErr_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L199_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L199_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1604
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":
 *             warnings.warn( "MuTauTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3DErr")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mIP3DE);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mIP3DE);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mIP3DE);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1603
 *         self.mIP3DErr_branch = the_tree.GetBranch("mIP3DErr")
 *         #if not self.mIP3DErr_branch and "mIP3DErr" not in self.complained:
 *         if not self.mIP3DErr_branch and "mIP3DErr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIP3DErr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3DErr")
 */
    goto __pyx_L198;
  }

  /* "MuTauTree.pyx":1607
 *             #self.complained.add("mIP3DErr")
 *         else:
 *             self.mIP3DErr_branch.SetAddress(<void*>&self.mIP3DErr_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsGlobal"
 */
  /*else*/ {
    __pyx_v_self->mIP3DErr_branch->SetAddress(((void *)(&__pyx_v_self->mIP3DErr_value)));
  }
  __pyx_L198:;

  /* "MuTauTree.pyx":1610
 * 
 *         #print "making mIsGlobal"
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")             # <<<<<<<<<<<<<<
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 */
  __pyx_v_self->mIsGlobal_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mIsGlobal);

  /* "MuTauTree.pyx":1612
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsGlobal")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIsGlobal_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L202_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L202_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1613
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 *             warnings.warn( "MuTauTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsGlobal")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mIsGlo);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mIsGlo);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mIsGlo);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1612
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsGlobal")
 */
    goto __pyx_L201;
  }

  /* "MuTauTree.pyx":1616
 *             #self.complained.add("mIsGlobal")
 *         else:
 *             self.mIsGlobal_branch.SetAddress(<void*>&self.mIsGlobal_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsPFMuon"
 */
  /*else*/ {
    __pyx_v_self->mIsGlobal_branch->SetAddress(((void *)(&__pyx_v_self->mIsGlobal_value)));
  }
  __pyx_L201:;

  /* "MuTauTree.pyx":1619
 * 
 *         #print "making mIsPFMuon"
 *         self.mIsPFMuon_branch = the_tree.GetBranch("mIsPFMuon")             # <<<<<<<<<<<<<<
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":
 */
  __pyx_v_self->mIsPFMuon_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mIsPFMuon);

  /* "MuTauTree.pyx":1621
 *         self.mIsPFMuon_branch = the_tree.GetBranch("mIsPFMuon")
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsPFMuon")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIsPFMuon_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L205_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L205_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1622
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":
 *             warnings.warn( "MuTauTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsPFMuon")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mIsPFM);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mIsPFM);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mIsPFM);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1621
 *         self.mIsPFMuon_branch = the_tree.GetBranch("mIsPFMuon")
 *         #if not self.mIsPFMuon_branch and "mIsPFMuon" not in self.complained:
 *         if not self.mIsPFMuon_branch and "mIsPFMuon":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsPFMuon does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsPFMuon")
 */
    goto __pyx_L204;
  }

  /* "MuTauTree.pyx":1625
 *             #self.complained.add("mIsPFMuon")
 *         else:
 *             self.mIsPFMuon_branch.SetAddress(<void*>&self.mIsPFMuon_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsTracker"
 */
  /*else*/ {
    __pyx_v_self->mIsPFMuon_branch->SetAddress(((void *)(&__pyx_v_self->mIsPFMuon_value)));
  }
  __pyx_L204:;

  /* "MuTauTree.pyx":1628
 * 
 *         #print "making mIsTracker"
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")             # <<<<<<<<<<<<<<
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 */
  __pyx_v_self->mIsTracker_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mIsTracker);

  /* "MuTauTree.pyx":1630
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsTracker")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mIsTracker_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L208_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L208_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1631
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 *             warnings.warn( "MuTauTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsTracker")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mIsTra);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mIsTra);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mIsTra);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1630
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsTracker")
 */
    goto __pyx_L207;
  }

  /* "MuTauTree.pyx":1634
 *             #self.complained.add("mIsTracker")
 *         else:
 *             self.mIsTracker_branch.SetAddress(<void*>&self.mIsTracker_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetArea"
 */
  /*else*/ {
    __pyx_v_self->mIsTracker_branch->SetAddress(((void *)(&__pyx_v_self->mIsTracker_value)));
  }
  __pyx_L207:;

  /* "MuTauTree.pyx":1637
 * 
 *         #print "making mJetArea"
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")             # <<<<<<<<<<<<<<
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 */
  __pyx_v_self->mJetArea_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetArea);

  /* "MuTauTree.pyx":1639
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetArea")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetArea_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L211_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L211_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1640
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 *             warnings.warn( "MuTauTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetArea")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetAr);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetAr);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetAr);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1639
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetArea")
 */
    goto __pyx_L210;
  }

  /* "MuTauTree.pyx":1643
 *             #self.complained.add("mJetArea")
 *         else:
 *             self.mJetArea_branch.SetAddress(<void*>&self.mJetArea_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetBtag"
 */
  /*else*/ {
    __pyx_v_self->mJetArea_branch->SetAddress(((void *)(&__pyx_v_self->mJetArea_value)));
  }
  __pyx_L210:;

  /* "MuTauTree.pyx":1646
 * 
 *         #print "making mJetBtag"
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")             # <<<<<<<<<<<<<<
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 */
  __pyx_v_self->mJetBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetBtag);

  /* "MuTauTree.pyx":1648
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L214_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L214_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1649
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 *             warnings.warn( "MuTauTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetBtag")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetBt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetBt);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetBt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1648
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetBtag")
 */
    goto __pyx_L213;
  }

  /* "MuTauTree.pyx":1652
 *             #self.complained.add("mJetBtag")
 *         else:
 *             self.mJetBtag_branch.SetAddress(<void*>&self.mJetBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaEtaMoment"
 */
  /*else*/ {
    __pyx_v_self->mJetBtag_branch->SetAddress(((void *)(&__pyx_v_self->mJetBtag_value)));
  }
  __pyx_L213:;

  /* "MuTauTree.pyx":1655
 * 
 *         #print "making mJetEtaEtaMoment"
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 */
  __pyx_v_self->mJetEtaEtaMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetEtaEtaMoment);

  /* "MuTauTree.pyx":1657
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaEtaMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetEtaEtaMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L217_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L217_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1658
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetEt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetEt);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetEt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1657
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaEtaMoment")
 */
    goto __pyx_L216;
  }

  /* "MuTauTree.pyx":1661
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 *             self.mJetEtaEtaMoment_branch.SetAddress(<void*>&self.mJetEtaEtaMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->mJetEtaEtaMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaEtaMoment_value)));
  }
  __pyx_L216:;

  /* "MuTauTree.pyx":1664
 * 
 *         #print "making mJetEtaPhiMoment"
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 */
  __pyx_v_self->mJetEtaPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetEtaPhiMoment);

  /* "MuTauTree.pyx":1666
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetEtaPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L220_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L220_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1667
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetEt_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1666
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiMoment")
 */
    goto __pyx_L219;
  }

  /* "MuTauTree.pyx":1670
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 *             self.mJetEtaPhiMoment_branch.SetAddress(<void*>&self.mJetEtaPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaPhiSpread"
 */
  /*else*/ {
    __pyx_v_self->mJetEtaPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaPhiMoment_value)));
  }
  __pyx_L219:;

  /* "MuTauTree.pyx":1673
 * 
 *         #print "making mJetEtaPhiSpread"
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 */
  __pyx_v_self->mJetEtaPhiSpread_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetEtaPhiSpread);

  /* "MuTauTree.pyx":1675
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiSpread")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetEtaPhiSpread_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L223_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L223_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1676
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetEt_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1675
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiSpread")
 */
    goto __pyx_L222;
  }

  /* "MuTauTree.pyx":1679
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 *             self.mJetEtaPhiSpread_branch.SetAddress(<void*>&self.mJetEtaPhiSpread_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPFCISVBtag"
 */
  /*else*/ {
    __pyx_v_self->mJetEtaPhiSpread_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaPhiSpread_value)));
  }
  __pyx_L222:;

  /* "MuTauTree.pyx":1682
 * 
 *         #print "making mJetPFCISVBtag"
 *         self.mJetPFCISVBtag_branch = the_tree.GetBranch("mJetPFCISVBtag")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":
 */
  __pyx_v_self->mJetPFCISVBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetPFCISVBtag);

  /* "MuTauTree.pyx":1684
 *         self.mJetPFCISVBtag_branch = the_tree.GetBranch("mJetPFCISVBtag")
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPFCISVBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPFCISVBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L226_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L226_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1685
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":
 *             warnings.warn( "MuTauTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPFCISVBtag")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPF);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPF);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetPF);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1684
 *         self.mJetPFCISVBtag_branch = the_tree.GetBranch("mJetPFCISVBtag")
 *         #if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag" not in self.complained:
 *         if not self.mJetPFCISVBtag_branch and "mJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPFCISVBtag")
 */
    goto __pyx_L225;
  }

  /* "MuTauTree.pyx":1688
 *             #self.complained.add("mJetPFCISVBtag")
 *         else:
 *             self.mJetPFCISVBtag_branch.SetAddress(<void*>&self.mJetPFCISVBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPartonFlavour"
 */
  /*else*/ {
    __pyx_v_self->mJetPFCISVBtag_branch->SetAddress(((void *)(&__pyx_v_self->mJetPFCISVBtag_value)));
  }
  __pyx_L225:;

  /* "MuTauTree.pyx":1691
 * 
 *         #print "making mJetPartonFlavour"
 *         self.mJetPartonFlavour_branch = the_tree.GetBranch("mJetPartonFlavour")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":
 */
  __pyx_v_self->mJetPartonFlavour_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetPartonFlavour);

  /* "MuTauTree.pyx":1693
 *         self.mJetPartonFlavour_branch = the_tree.GetBranch("mJetPartonFlavour")
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPartonFlavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPartonFlavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L229_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L229_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1694
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":
 *             warnings.warn( "MuTauTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPartonFlavour")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPa);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPa);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetPa);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1693
 *         self.mJetPartonFlavour_branch = the_tree.GetBranch("mJetPartonFlavour")
 *         #if not self.mJetPartonFlavour_branch and "mJetPartonFlavour" not in self.complained:
 *         if not self.mJetPartonFlavour_branch and "mJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPartonFlavour")
 */
    goto __pyx_L228;
  }

  /* "MuTauTree.pyx":1697
 *             #self.complained.add("mJetPartonFlavour")
 *         else:
 *             self.mJetPartonFlavour_branch.SetAddress(<void*>&self.mJetPartonFlavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPhiPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->mJetPartonFlavour_branch->SetAddress(((void *)(&__pyx_v_self->mJetPartonFlavour_value)));
  }
  __pyx_L228:;

  /* "MuTauTree.pyx":1700
 * 
 *         #print "making mJetPhiPhiMoment"
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 */
  __pyx_v_self->mJetPhiPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetPhiPhiMoment);

  /* "MuTauTree.pyx":1702
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPhiPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPhiPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L232_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L232_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1703
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPh);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPh);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetPh);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1702
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPhiPhiMoment")
 */
    goto __pyx_L231;
  }

  /* "MuTauTree.pyx":1706
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 *             self.mJetPhiPhiMoment_branch.SetAddress(<void*>&self.mJetPhiPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPt"
 */
  /*else*/ {
    __pyx_v_self->mJetPhiPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetPhiPhiMoment_value)));
  }
  __pyx_L231:;

  /* "MuTauTree.pyx":1709
 * 
 *         #print "making mJetPt"
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 */
  __pyx_v_self->mJetPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mJetPt);

  /* "MuTauTree.pyx":1711
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mJetPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L235_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L235_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1712
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 *             warnings.warn( "MuTauTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mJetPt);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mJetPt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1711
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPt")
 */
    goto __pyx_L234;
  }

  /* "MuTauTree.pyx":1715
 *             #self.complained.add("mJetPt")
 *         else:
 *             self.mJetPt_branch.SetAddress(<void*>&self.mJetPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mLowestMll"
 */
  /*else*/ {
    __pyx_v_self->mJetPt_branch->SetAddress(((void *)(&__pyx_v_self->mJetPt_value)));
  }
  __pyx_L234:;

  /* "MuTauTree.pyx":1718
 * 
 *         #print "making mLowestMll"
 *         self.mLowestMll_branch = the_tree.GetBranch("mLowestMll")             # <<<<<<<<<<<<<<
 *         #if not self.mLowestMll_branch and "mLowestMll" not in self.complained:
 *         if not self.mLowestMll_branch and "mLowestMll":
 */
  __pyx_v_self->mLowestMll_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mLowestMll);

  /* "MuTauTree.pyx":1720
 *         self.mLowestMll_branch = the_tree.GetBranch("mLowestMll")
 *         #if not self.mLowestMll_branch and "mLowestMll" not in self.complained:
 *         if not self.mLowestMll_branch and "mLowestMll":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mLowestMll does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mLowestMll")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mLowestMll_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L238_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L238_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1721
 *         #if not self.mLowestMll_branch and "mLowestMll" not in self.complained:
 *         if not self.mLowestMll_branch and "mLowestMll":
 *             warnings.warn( "MuTauTree: Expected branch mLowestMll does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mLowestMll")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mLowes);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mLowes);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mLowes);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1720
 *         self.mLowestMll_branch = the_tree.GetBranch("mLowestMll")
 *         #if not self.mLowestMll_branch and "mLowestMll" not in self.complained:
 *         if not self.mLowestMll_branch and "mLowestMll":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mLowestMll does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mLowestMll")
 */
    goto __pyx_L237;
  }

  /* "MuTauTree.pyx":1724
 *             #self.complained.add("mLowestMll")
 *         else:
 *             self.mLowestMll_branch.SetAddress(<void*>&self.mLowestMll_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMass"
 */
  /*else*/ {
    __pyx_v_self->mLowestMll_branch->SetAddress(((void *)(&__pyx_v_self->mLowestMll_value)));
  }
  __pyx_L237:;

  /* "MuTauTree.pyx":1727
 * 
 *         #print "making mMass"
 *         self.mMass_branch = the_tree.GetBranch("mMass")             # <<<<<<<<<<<<<<
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 */
  __pyx_v_self->mMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMass);

  /* "MuTauTree.pyx":1729
 *         self.mMass_branch = the_tree.GetBranch("mMass")
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L241_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L241_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1730
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 *             warnings.warn( "MuTauTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMass);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMass);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMass);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1729
 *         self.mMass_branch = the_tree.GetBranch("mMass")
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMass")
 */
    goto __pyx_L240;
  }

  /* "MuTauTree.pyx":1733
 *             #self.complained.add("mMass")
 *         else:
 *             self.mMass_branch.SetAddress(<void*>&self.mMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchedStations"
 */
  /*else*/ {
    __pyx_v_self->mMass_branch->SetAddress(((void *)(&__pyx_v_self->mMass_value)));
  }
  __pyx_L240:;

  /* "MuTauTree.pyx":1736
 * 
 *         #print "making mMatchedStations"
 *         self.mMatchedStations_branch = the_tree.GetBranch("mMatchedStations")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":
 */
  __pyx_v_self->mMatchedStations_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchedStations);

  /* "MuTauTree.pyx":1738
 *         self.mMatchedStations_branch = the_tree.GetBranch("mMatchedStations")
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchedStations does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchedStations")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchedStations_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L244_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L244_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1739
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":
 *             warnings.warn( "MuTauTree: Expected branch mMatchedStations does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchedStations")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1738
 *         self.mMatchedStations_branch = the_tree.GetBranch("mMatchedStations")
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchedStations does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchedStations")
 */
    goto __pyx_L243;
  }

  /* "MuTauTree.pyx":1742
 *             #self.complained.add("mMatchedStations")
 *         else:
 *             self.mMatchedStations_branch.SetAddress(<void*>&self.mMatchedStations_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesDoubleESingleMu"
 */
  /*else*/ {
    __pyx_v_self->mMatchedStations_branch->SetAddress(((void *)(&__pyx_v_self->mMatchedStations_value)));
  }
  __pyx_L243:;

  /* "MuTauTree.pyx":1745
 * 
 *         #print "making mMatchesDoubleESingleMu"
 *         self.mMatchesDoubleESingleMu_branch = the_tree.GetBranch("mMatchesDoubleESingleMu")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu" not in self.complained:
 *         if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu":
 */
  __pyx_v_self->mMatchesDoubleESingleMu_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesDoubleESingleMu);

  /* "MuTauTree.pyx":1747
 *         self.mMatchesDoubleESingleMu_branch = the_tree.GetBranch("mMatchesDoubleESingleMu")
 *         #if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu" not in self.complained:
 *         if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleESingleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleESingleMu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesDoubleESingleMu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L247_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L247_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1748
 *         #if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu" not in self.complained:
 *         if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleESingleMu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesDoubleESingleMu")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1747
 *         self.mMatchesDoubleESingleMu_branch = the_tree.GetBranch("mMatchesDoubleESingleMu")
 *         #if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu" not in self.complained:
 *         if not self.mMatchesDoubleESingleMu_branch and "mMatchesDoubleESingleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleESingleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleESingleMu")
 */
    goto __pyx_L246;
  }

  /* "MuTauTree.pyx":1751
 *             #self.complained.add("mMatchesDoubleESingleMu")
 *         else:
 *             self.mMatchesDoubleESingleMu_branch.SetAddress(<void*>&self.mMatchesDoubleESingleMu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesDoubleMu"
 */
  /*else*/ {
    __pyx_v_self->mMatchesDoubleESingleMu_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesDoubleESingleMu_value)));
  }
  __pyx_L246:;

  /* "MuTauTree.pyx":1754
 * 
 *         #print "making mMatchesDoubleMu"
 *         self.mMatchesDoubleMu_branch = the_tree.GetBranch("mMatchesDoubleMu")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu" not in self.complained:
 *         if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu":
 */
  __pyx_v_self->mMatchesDoubleMu_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesDoubleMu);

  /* "MuTauTree.pyx":1756
 *         self.mMatchesDoubleMu_branch = the_tree.GetBranch("mMatchesDoubleMu")
 *         #if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu" not in self.complained:
 *         if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleMu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesDoubleMu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L250_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L250_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1757
 *         #if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu" not in self.complained:
 *         if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesDoubleMu")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1756
 *         self.mMatchesDoubleMu_branch = the_tree.GetBranch("mMatchesDoubleMu")
 *         #if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu" not in self.complained:
 *         if not self.mMatchesDoubleMu_branch and "mMatchesDoubleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleMu")
 */
    goto __pyx_L249;
  }

  /* "MuTauTree.pyx":1760
 *             #self.complained.add("mMatchesDoubleMu")
 *         else:
 *             self.mMatchesDoubleMu_branch.SetAddress(<void*>&self.mMatchesDoubleMu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesDoubleMuSingleE"
 */
  /*else*/ {
    __pyx_v_self->mMatchesDoubleMu_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesDoubleMu_value)));
  }
  __pyx_L249:;

  /* "MuTauTree.pyx":1763
 * 
 *         #print "making mMatchesDoubleMuSingleE"
 *         self.mMatchesDoubleMuSingleE_branch = the_tree.GetBranch("mMatchesDoubleMuSingleE")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE" not in self.complained:
 *         if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE":
 */
  __pyx_v_self->mMatchesDoubleMuSingleE_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesDoubleMuSingleE);

  /* "MuTauTree.pyx":1765
 *         self.mMatchesDoubleMuSingleE_branch = the_tree.GetBranch("mMatchesDoubleMuSingleE")
 *         #if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE" not in self.complained:
 *         if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMuSingleE does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleMuSingleE")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesDoubleMuSingleE_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L253_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L253_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1766
 *         #if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE" not in self.complained:
 *         if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMuSingleE does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesDoubleMuSingleE")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1765
 *         self.mMatchesDoubleMuSingleE_branch = the_tree.GetBranch("mMatchesDoubleMuSingleE")
 *         #if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE" not in self.complained:
 *         if not self.mMatchesDoubleMuSingleE_branch and "mMatchesDoubleMuSingleE":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMuSingleE does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleMuSingleE")
 */
    goto __pyx_L252;
  }

  /* "MuTauTree.pyx":1769
 *             #self.complained.add("mMatchesDoubleMuSingleE")
 *         else:
 *             self.mMatchesDoubleMuSingleE_branch.SetAddress(<void*>&self.mMatchesDoubleMuSingleE_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleESingleMu"
 */
  /*else*/ {
    __pyx_v_self->mMatchesDoubleMuSingleE_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesDoubleMuSingleE_value)));
  }
  __pyx_L252:;

  /* "MuTauTree.pyx":1772
 * 
 *         #print "making mMatchesSingleESingleMu"
 *         self.mMatchesSingleESingleMu_branch = the_tree.GetBranch("mMatchesSingleESingleMu")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu" not in self.complained:
 *         if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu":
 */
  __pyx_v_self->mMatchesSingleESingleMu_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleESingleMu);

  /* "MuTauTree.pyx":1774
 *         self.mMatchesSingleESingleMu_branch = the_tree.GetBranch("mMatchesSingleESingleMu")
 *         #if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu" not in self.complained:
 *         if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleESingleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleESingleMu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleESingleMu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L256_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L256_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1775
 *         #if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu" not in self.complained:
 *         if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleESingleMu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleESingleMu")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1774
 *         self.mMatchesSingleESingleMu_branch = the_tree.GetBranch("mMatchesSingleESingleMu")
 *         #if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu" not in self.complained:
 *         if not self.mMatchesSingleESingleMu_branch and "mMatchesSingleESingleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleESingleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleESingleMu")
 */
    goto __pyx_L255;
  }

  /* "MuTauTree.pyx":1778
 *             #self.complained.add("mMatchesSingleESingleMu")
 *         else:
 *             self.mMatchesSingleESingleMu_branch.SetAddress(<void*>&self.mMatchesSingleESingleMu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleMu"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleESingleMu_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleESingleMu_value)));
  }
  __pyx_L255:;

  /* "MuTauTree.pyx":1781
 * 
 *         #print "making mMatchesSingleMu"
 *         self.mMatchesSingleMu_branch = the_tree.GetBranch("mMatchesSingleMu")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleMu_branch and "mMatchesSingleMu" not in self.complained:
 *         if not self.mMatchesSingleMu_branch and "mMatchesSingleMu":
 */
  __pyx_v_self->mMatchesSingleMu_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleMu);

  /* "MuTauTree.pyx":1783
 *         self.mMatchesSingleMu_branch = the_tree.GetBranch("mMatchesSingleMu")
 *         #if not self.mMatchesSingleMu_branch and "mMatchesSingleMu" not in self.complained:
 *         if not self.mMatchesSingleMu_branch and "mMatchesSingleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleMu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L259_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L259_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1784
 *         #if not self.mMatchesSingleMu_branch and "mMatchesSingleMu" not in self.complained:
 *         if not self.mMatchesSingleMu_branch and "mMatchesSingleMu":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleMu")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1783
 *         self.mMatchesSingleMu_branch = the_tree.GetBranch("mMatchesSingleMu")
 *         #if not self.mMatchesSingleMu_branch and "mMatchesSingleMu" not in self.complained:
 *         if not self.mMatchesSingleMu_branch and "mMatchesSingleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu")
 */
    goto __pyx_L258;
  }

  /* "MuTauTree.pyx":1787
 *             #self.complained.add("mMatchesSingleMu")
 *         else:
 *             self.mMatchesSingleMu_branch.SetAddress(<void*>&self.mMatchesSingleMu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleMuSingleE"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleMu_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleMu_value)));
  }
  __pyx_L258:;

  /* "MuTauTree.pyx":1790
 * 
 *         #print "making mMatchesSingleMuSingleE"
 *         self.mMatchesSingleMuSingleE_branch = the_tree.GetBranch("mMatchesSingleMuSingleE")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE" not in self.complained:
 *         if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE":
 */
  __pyx_v_self->mMatchesSingleMuSingleE_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleMuSingleE);

  /* "MuTauTree.pyx":1792
 *         self.mMatchesSingleMuSingleE_branch = the_tree.GetBranch("mMatchesSingleMuSingleE")
 *         #if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE" not in self.complained:
 *         if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMuSingleE does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMuSingleE")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleMuSingleE_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L262_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L262_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1793
 *         #if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE" not in self.complained:
 *         if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMuSingleE does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleMuSingleE")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_7);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_7);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_7);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1793; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1792
 *         self.mMatchesSingleMuSingleE_branch = the_tree.GetBranch("mMatchesSingleMuSingleE")
 *         #if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE" not in self.complained:
 *         if not self.mMatchesSingleMuSingleE_branch and "mMatchesSingleMuSingleE":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMuSingleE does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMuSingleE")
 */
    goto __pyx_L261;
  }

  /* "MuTauTree.pyx":1796
 *             #self.complained.add("mMatchesSingleMuSingleE")
 *         else:
 *             self.mMatchesSingleMuSingleE_branch.SetAddress(<void*>&self.mMatchesSingleMuSingleE_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleMu_leg1"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleMuSingleE_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleMuSingleE_value)));
  }
  __pyx_L261:;

  /* "MuTauTree.pyx":1799
 * 
 *         #print "making mMatchesSingleMu_leg1"
 *         self.mMatchesSingleMu_leg1_branch = the_tree.GetBranch("mMatchesSingleMu_leg1")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1":
 */
  __pyx_v_self->mMatchesSingleMu_leg1_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleMu_leg1);

  /* "MuTauTree.pyx":1801
 *         self.mMatchesSingleMu_leg1_branch = the_tree.GetBranch("mMatchesSingleMu_leg1")
 *         #if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleMu_leg1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L265_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L265_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1802
 *         #if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleMu_leg1")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_8);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_8);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_8);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1801
 *         self.mMatchesSingleMu_leg1_branch = the_tree.GetBranch("mMatchesSingleMu_leg1")
 *         #if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_branch and "mMatchesSingleMu_leg1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg1")
 */
    goto __pyx_L264;
  }

  /* "MuTauTree.pyx":1805
 *             #self.complained.add("mMatchesSingleMu_leg1")
 *         else:
 *             self.mMatchesSingleMu_leg1_branch.SetAddress(<void*>&self.mMatchesSingleMu_leg1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleMu_leg1_noiso"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleMu_leg1_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleMu_leg1_value)));
  }
  __pyx_L264:;

  /* "MuTauTree.pyx":1808
 * 
 *         #print "making mMatchesSingleMu_leg1_noiso"
 *         self.mMatchesSingleMu_leg1_noiso_branch = the_tree.GetBranch("mMatchesSingleMu_leg1_noiso")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso":
 */
  __pyx_v_self->mMatchesSingleMu_leg1_noiso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleMu_leg1_noiso);

  /* "MuTauTree.pyx":1810
 *         self.mMatchesSingleMu_leg1_noiso_branch = the_tree.GetBranch("mMatchesSingleMu_leg1_noiso")
 *         #if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg1_noiso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg1_noiso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleMu_leg1_noiso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L268_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L268_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1811
 *         #if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg1_noiso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleMu_leg1_noiso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_9);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_9);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_9);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1810
 *         self.mMatchesSingleMu_leg1_noiso_branch = the_tree.GetBranch("mMatchesSingleMu_leg1_noiso")
 *         #if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg1_noiso_branch and "mMatchesSingleMu_leg1_noiso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg1_noiso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg1_noiso")
 */
    goto __pyx_L267;
  }

  /* "MuTauTree.pyx":1814
 *             #self.complained.add("mMatchesSingleMu_leg1_noiso")
 *         else:
 *             self.mMatchesSingleMu_leg1_noiso_branch.SetAddress(<void*>&self.mMatchesSingleMu_leg1_noiso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleMu_leg2"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleMu_leg1_noiso_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleMu_leg1_noiso_value)));
  }
  __pyx_L267:;

  /* "MuTauTree.pyx":1817
 * 
 *         #print "making mMatchesSingleMu_leg2"
 *         self.mMatchesSingleMu_leg2_branch = the_tree.GetBranch("mMatchesSingleMu_leg2")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2":
 */
  __pyx_v_self->mMatchesSingleMu_leg2_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleMu_leg2);

  /* "MuTauTree.pyx":1819
 *         self.mMatchesSingleMu_leg2_branch = the_tree.GetBranch("mMatchesSingleMu_leg2")
 *         #if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleMu_leg2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L271_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L271_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1820
 *         #if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleMu_leg2")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_10);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_10);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_10);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1819
 *         self.mMatchesSingleMu_leg2_branch = the_tree.GetBranch("mMatchesSingleMu_leg2")
 *         #if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_branch and "mMatchesSingleMu_leg2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg2")
 */
    goto __pyx_L270;
  }

  /* "MuTauTree.pyx":1823
 *             #self.complained.add("mMatchesSingleMu_leg2")
 *         else:
 *             self.mMatchesSingleMu_leg2_branch.SetAddress(<void*>&self.mMatchesSingleMu_leg2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesSingleMu_leg2_noiso"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleMu_leg2_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleMu_leg2_value)));
  }
  __pyx_L270:;

  /* "MuTauTree.pyx":1826
 * 
 *         #print "making mMatchesSingleMu_leg2_noiso"
 *         self.mMatchesSingleMu_leg2_noiso_branch = the_tree.GetBranch("mMatchesSingleMu_leg2_noiso")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso":
 */
  __pyx_v_self->mMatchesSingleMu_leg2_noiso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesSingleMu_leg2_noiso);

  /* "MuTauTree.pyx":1828
 *         self.mMatchesSingleMu_leg2_noiso_branch = the_tree.GetBranch("mMatchesSingleMu_leg2_noiso")
 *         #if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg2_noiso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg2_noiso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesSingleMu_leg2_noiso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L274_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L274_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1829
 *         #if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg2_noiso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesSingleMu_leg2_noiso")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_11);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_11);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_11);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1828
 *         self.mMatchesSingleMu_leg2_noiso_branch = the_tree.GetBranch("mMatchesSingleMu_leg2_noiso")
 *         #if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso" not in self.complained:
 *         if not self.mMatchesSingleMu_leg2_noiso_branch and "mMatchesSingleMu_leg2_noiso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesSingleMu_leg2_noiso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesSingleMu_leg2_noiso")
 */
    goto __pyx_L273;
  }

  /* "MuTauTree.pyx":1832
 *             #self.complained.add("mMatchesSingleMu_leg2_noiso")
 *         else:
 *             self.mMatchesSingleMu_leg2_noiso_branch.SetAddress(<void*>&self.mMatchesSingleMu_leg2_noiso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesTripleMu"
 */
  /*else*/ {
    __pyx_v_self->mMatchesSingleMu_leg2_noiso_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesSingleMu_leg2_noiso_value)));
  }
  __pyx_L273:;

  /* "MuTauTree.pyx":1835
 * 
 *         #print "making mMatchesTripleMu"
 *         self.mMatchesTripleMu_branch = the_tree.GetBranch("mMatchesTripleMu")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesTripleMu_branch and "mMatchesTripleMu" not in self.complained:
 *         if not self.mMatchesTripleMu_branch and "mMatchesTripleMu":
 */
  __pyx_v_self->mMatchesTripleMu_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMatchesTripleMu);

  /* "MuTauTree.pyx":1837
 *         self.mMatchesTripleMu_branch = the_tree.GetBranch("mMatchesTripleMu")
 *         #if not self.mMatchesTripleMu_branch and "mMatchesTripleMu" not in self.complained:
 *         if not self.mMatchesTripleMu_branch and "mMatchesTripleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesTripleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesTripleMu")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMatchesTripleMu_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L277_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L277_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1838
 *         #if not self.mMatchesTripleMu_branch and "mMatchesTripleMu" not in self.complained:
 *         if not self.mMatchesTripleMu_branch and "mMatchesTripleMu":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesTripleMu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesTripleMu")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_12);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMatch_12);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMatch_12);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1837
 *         self.mMatchesTripleMu_branch = the_tree.GetBranch("mMatchesTripleMu")
 *         #if not self.mMatchesTripleMu_branch and "mMatchesTripleMu" not in self.complained:
 *         if not self.mMatchesTripleMu_branch and "mMatchesTripleMu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesTripleMu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesTripleMu")
 */
    goto __pyx_L276;
  }

  /* "MuTauTree.pyx":1841
 *             #self.complained.add("mMatchesTripleMu")
 *         else:
 *             self.mMatchesTripleMu_branch.SetAddress(<void*>&self.mMatchesTripleMu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToMET"
 */
  /*else*/ {
    __pyx_v_self->mMatchesTripleMu_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesTripleMu_value)));
  }
  __pyx_L276:;

  /* "MuTauTree.pyx":1844
 * 
 *         #print "making mMtToMET"
 *         self.mMtToMET_branch = the_tree.GetBranch("mMtToMET")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":
 */
  __pyx_v_self->mMtToMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToMET);

  /* "MuTauTree.pyx":1846
 *         self.mMtToMET_branch = the_tree.GetBranch("mMtToMET")
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToMET")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToMET_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L280_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L280_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1847
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":
 *             warnings.warn( "MuTauTree: Expected branch mMtToMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToMET")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToM);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToM);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToM);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1846
 *         self.mMtToMET_branch = the_tree.GetBranch("mMtToMET")
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToMET")
 */
    goto __pyx_L279;
  }

  /* "MuTauTree.pyx":1850
 *             #self.complained.add("mMtToMET")
 *         else:
 *             self.mMtToMET_branch.SetAddress(<void*>&self.mMtToMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPFMET"
 */
  /*else*/ {
    __pyx_v_self->mMtToMET_branch->SetAddress(((void *)(&__pyx_v_self->mMtToMET_value)));
  }
  __pyx_L279:;

  /* "MuTauTree.pyx":1853
 * 
 *         #print "making mMtToPFMET"
 *         self.mMtToPFMET_branch = the_tree.GetBranch("mMtToPFMET")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":
 */
  __pyx_v_self->mMtToPFMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToPFMET);

  /* "MuTauTree.pyx":1855
 *         self.mMtToPFMET_branch = the_tree.GetBranch("mMtToPFMET")
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPFMET")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToPFMET_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L283_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L283_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1856
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPFMET")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToP);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1855
 *         self.mMtToPFMET_branch = the_tree.GetBranch("mMtToPFMET")
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPFMET")
 */
    goto __pyx_L282;
  }

  /* "MuTauTree.pyx":1859
 *             #self.complained.add("mMtToPFMET")
 *         else:
 *             self.mMtToPFMET_branch.SetAddress(<void*>&self.mMtToPFMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_Ty1"
 */
  /*else*/ {
    __pyx_v_self->mMtToPFMET_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPFMET_value)));
  }
  __pyx_L282:;

  /* "MuTauTree.pyx":1862
 * 
 *         #print "making mMtToPfMet_Ty1"
 *         self.mMtToPfMet_Ty1_branch = the_tree.GetBranch("mMtToPfMet_Ty1")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":
 */
  __pyx_v_self->mMtToPfMet_Ty1_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToPfMet_Ty1);

  /* "MuTauTree.pyx":1864
 *         self.mMtToPfMet_Ty1_branch = the_tree.GetBranch("mMtToPfMet_Ty1")
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_Ty1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToPfMet_Ty1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L286_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L286_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1865
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_Ty1")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToP_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1864
 *         self.mMtToPfMet_Ty1_branch = the_tree.GetBranch("mMtToPfMet_Ty1")
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_Ty1")
 */
    goto __pyx_L285;
  }

  /* "MuTauTree.pyx":1868
 *             #self.complained.add("mMtToPfMet_Ty1")
 *         else:
 *             self.mMtToPfMet_Ty1_branch.SetAddress(<void*>&self.mMtToPfMet_Ty1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_jes"
 */
  /*else*/ {
    __pyx_v_self->mMtToPfMet_Ty1_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_Ty1_value)));
  }
  __pyx_L285:;

  /* "MuTauTree.pyx":1871
 * 
 *         #print "making mMtToPfMet_jes"
 *         self.mMtToPfMet_jes_branch = the_tree.GetBranch("mMtToPfMet_jes")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":
 */
  __pyx_v_self->mMtToPfMet_jes_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToPfMet_jes);

  /* "MuTauTree.pyx":1873
 *         self.mMtToPfMet_jes_branch = the_tree.GetBranch("mMtToPfMet_jes")
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_jes")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToPfMet_jes_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L289_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L289_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1874
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_jes")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToP_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1873
 *         self.mMtToPfMet_jes_branch = the_tree.GetBranch("mMtToPfMet_jes")
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_jes")
 */
    goto __pyx_L288;
  }

  /* "MuTauTree.pyx":1877
 *             #self.complained.add("mMtToPfMet_jes")
 *         else:
 *             self.mMtToPfMet_jes_branch.SetAddress(<void*>&self.mMtToPfMet_jes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_mes"
 */
  /*else*/ {
    __pyx_v_self->mMtToPfMet_jes_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_jes_value)));
  }
  __pyx_L288:;

  /* "MuTauTree.pyx":1880
 * 
 *         #print "making mMtToPfMet_mes"
 *         self.mMtToPfMet_mes_branch = the_tree.GetBranch("mMtToPfMet_mes")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":
 */
  __pyx_v_self->mMtToPfMet_mes_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToPfMet_mes);

  /* "MuTauTree.pyx":1882
 *         self.mMtToPfMet_mes_branch = the_tree.GetBranch("mMtToPfMet_mes")
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_mes")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToPfMet_mes_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L292_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L292_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1883
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_mes")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_4);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToP_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1882
 *         self.mMtToPfMet_mes_branch = the_tree.GetBranch("mMtToPfMet_mes")
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_mes")
 */
    goto __pyx_L291;
  }

  /* "MuTauTree.pyx":1886
 *             #self.complained.add("mMtToPfMet_mes")
 *         else:
 *             self.mMtToPfMet_mes_branch.SetAddress(<void*>&self.mMtToPfMet_mes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_tes"
 */
  /*else*/ {
    __pyx_v_self->mMtToPfMet_mes_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_mes_value)));
  }
  __pyx_L291:;

  /* "MuTauTree.pyx":1889
 * 
 *         #print "making mMtToPfMet_tes"
 *         self.mMtToPfMet_tes_branch = the_tree.GetBranch("mMtToPfMet_tes")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":
 */
  __pyx_v_self->mMtToPfMet_tes_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToPfMet_tes);

  /* "MuTauTree.pyx":1891
 *         self.mMtToPfMet_tes_branch = the_tree.GetBranch("mMtToPfMet_tes")
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_tes")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToPfMet_tes_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L295_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L295_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1892
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_tes")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToP_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1891
 *         self.mMtToPfMet_tes_branch = the_tree.GetBranch("mMtToPfMet_tes")
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_tes")
 */
    goto __pyx_L294;
  }

  /* "MuTauTree.pyx":1895
 *             #self.complained.add("mMtToPfMet_tes")
 *         else:
 *             self.mMtToPfMet_tes_branch.SetAddress(<void*>&self.mMtToPfMet_tes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_ues"
 */
  /*else*/ {
    __pyx_v_self->mMtToPfMet_tes_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_tes_value)));
  }
  __pyx_L294:;

  /* "MuTauTree.pyx":1898
 * 
 *         #print "making mMtToPfMet_ues"
 *         self.mMtToPfMet_ues_branch = the_tree.GetBranch("mMtToPfMet_ues")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":
 */
  __pyx_v_self->mMtToPfMet_ues_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMtToPfMet_ues);

  /* "MuTauTree.pyx":1900
 *         self.mMtToPfMet_ues_branch = the_tree.GetBranch("mMtToPfMet_ues")
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_ues")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMtToPfMet_ues_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L298_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L298_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1901
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_ues")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_6);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMtToP_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1900
 *         self.mMtToPfMet_ues_branch = the_tree.GetBranch("mMtToPfMet_ues")
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_ues")
 */
    goto __pyx_L297;
  }

  /* "MuTauTree.pyx":1904
 *             #self.complained.add("mMtToPfMet_ues")
 *         else:
 *             self.mMtToPfMet_ues_branch.SetAddress(<void*>&self.mMtToPfMet_ues_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMuonHits"
 */
  /*else*/ {
    __pyx_v_self->mMtToPfMet_ues_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_ues_value)));
  }
  __pyx_L297:;

  /* "MuTauTree.pyx":1907
 * 
 *         #print "making mMuonHits"
 *         self.mMuonHits_branch = the_tree.GetBranch("mMuonHits")             # <<<<<<<<<<<<<<
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":
 */
  __pyx_v_self->mMuonHits_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mMuonHits);

  /* "MuTauTree.pyx":1909
 *         self.mMuonHits_branch = the_tree.GetBranch("mMuonHits")
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMuonHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMuonHits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mMuonHits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L301_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L301_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1910
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":
 *             warnings.warn( "MuTauTree: Expected branch mMuonHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMuonHits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mMuonH);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mMuonH);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mMuonH);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1910; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1909
 *         self.mMuonHits_branch = the_tree.GetBranch("mMuonHits")
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMuonHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMuonHits")
 */
    goto __pyx_L300;
  }

  /* "MuTauTree.pyx":1913
 *             #self.complained.add("mMuonHits")
 *         else:
 *             self.mMuonHits_branch.SetAddress(<void*>&self.mMuonHits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mNearestZMass"
 */
  /*else*/ {
    __pyx_v_self->mMuonHits_branch->SetAddress(((void *)(&__pyx_v_self->mMuonHits_value)));
  }
  __pyx_L300:;

  /* "MuTauTree.pyx":1916
 * 
 *         #print "making mNearestZMass"
 *         self.mNearestZMass_branch = the_tree.GetBranch("mNearestZMass")             # <<<<<<<<<<<<<<
 *         #if not self.mNearestZMass_branch and "mNearestZMass" not in self.complained:
 *         if not self.mNearestZMass_branch and "mNearestZMass":
 */
  __pyx_v_self->mNearestZMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mNearestZMass);

  /* "MuTauTree.pyx":1918
 *         self.mNearestZMass_branch = the_tree.GetBranch("mNearestZMass")
 *         #if not self.mNearestZMass_branch and "mNearestZMass" not in self.complained:
 *         if not self.mNearestZMass_branch and "mNearestZMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mNearestZMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mNearestZMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mNearestZMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L304_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L304_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1919
 *         #if not self.mNearestZMass_branch and "mNearestZMass" not in self.complained:
 *         if not self.mNearestZMass_branch and "mNearestZMass":
 *             warnings.warn( "MuTauTree: Expected branch mNearestZMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mNearestZMass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mNeare);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mNeare);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mNeare);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1918
 *         self.mNearestZMass_branch = the_tree.GetBranch("mNearestZMass")
 *         #if not self.mNearestZMass_branch and "mNearestZMass" not in self.complained:
 *         if not self.mNearestZMass_branch and "mNearestZMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mNearestZMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mNearestZMass")
 */
    goto __pyx_L303;
  }

  /* "MuTauTree.pyx":1922
 *             #self.complained.add("mNearestZMass")
 *         else:
 *             self.mNearestZMass_branch.SetAddress(<void*>&self.mNearestZMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mNormTrkChi2"
 */
  /*else*/ {
    __pyx_v_self->mNearestZMass_branch->SetAddress(((void *)(&__pyx_v_self->mNearestZMass_value)));
  }
  __pyx_L303:;

  /* "MuTauTree.pyx":1925
 * 
 *         #print "making mNormTrkChi2"
 *         self.mNormTrkChi2_branch = the_tree.GetBranch("mNormTrkChi2")             # <<<<<<<<<<<<<<
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":
 */
  __pyx_v_self->mNormTrkChi2_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mNormTrkChi2);

  /* "MuTauTree.pyx":1927
 *         self.mNormTrkChi2_branch = the_tree.GetBranch("mNormTrkChi2")
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mNormTrkChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mNormTrkChi2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mNormTrkChi2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L307_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L307_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1928
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":
 *             warnings.warn( "MuTauTree: Expected branch mNormTrkChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mNormTrkChi2")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mNormT);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mNormT);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mNormT);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1928; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1927
 *         self.mNormTrkChi2_branch = the_tree.GetBranch("mNormTrkChi2")
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mNormTrkChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mNormTrkChi2")
 */
    goto __pyx_L306;
  }

  /* "MuTauTree.pyx":1931
 *             #self.complained.add("mNormTrkChi2")
 *         else:
 *             self.mNormTrkChi2_branch.SetAddress(<void*>&self.mNormTrkChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFChargedIso"
 */
  /*else*/ {
    __pyx_v_self->mNormTrkChi2_branch->SetAddress(((void *)(&__pyx_v_self->mNormTrkChi2_value)));
  }
  __pyx_L306:;

  /* "MuTauTree.pyx":1934
 * 
 *         #print "making mPFChargedIso"
 *         self.mPFChargedIso_branch = the_tree.GetBranch("mPFChargedIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":
 */
  __pyx_v_self->mPFChargedIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFChargedIso);

  /* "MuTauTree.pyx":1936
 *         self.mPFChargedIso_branch = the_tree.GetBranch("mPFChargedIso")
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFChargedIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFChargedIso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFChargedIso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L310_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L310_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1937
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFChargedIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFChargedIso")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFCha);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFCha);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFCha);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1936
 *         self.mPFChargedIso_branch = the_tree.GetBranch("mPFChargedIso")
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFChargedIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFChargedIso")
 */
    goto __pyx_L309;
  }

  /* "MuTauTree.pyx":1940
 *             #self.complained.add("mPFChargedIso")
 *         else:
 *             self.mPFChargedIso_branch.SetAddress(<void*>&self.mPFChargedIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDLoose"
 */
  /*else*/ {
    __pyx_v_self->mPFChargedIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFChargedIso_value)));
  }
  __pyx_L309:;

  /* "MuTauTree.pyx":1943
 * 
 *         #print "making mPFIDLoose"
 *         self.mPFIDLoose_branch = the_tree.GetBranch("mPFIDLoose")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":
 */
  __pyx_v_self->mPFIDLoose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFIDLoose);

  /* "MuTauTree.pyx":1945
 *         self.mPFIDLoose_branch = the_tree.GetBranch("mPFIDLoose")
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDLoose")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFIDLoose_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L313_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L313_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1946
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":
 *             warnings.warn( "MuTauTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDLoose")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFIDL);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFIDL);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFIDL);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1945
 *         self.mPFIDLoose_branch = the_tree.GetBranch("mPFIDLoose")
 *         #if not self.mPFIDLoose_branch and "mPFIDLoose" not in self.complained:
 *         if not self.mPFIDLoose_branch and "mPFIDLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDLoose")
 */
    goto __pyx_L312;
  }

  /* "MuTauTree.pyx":1949
 *             #self.complained.add("mPFIDLoose")
 *         else:
 *             self.mPFIDLoose_branch.SetAddress(<void*>&self.mPFIDLoose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDMedium"
 */
  /*else*/ {
    __pyx_v_self->mPFIDLoose_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDLoose_value)));
  }
  __pyx_L312:;

  /* "MuTauTree.pyx":1952
 * 
 *         #print "making mPFIDMedium"
 *         self.mPFIDMedium_branch = the_tree.GetBranch("mPFIDMedium")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":
 */
  __pyx_v_self->mPFIDMedium_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFIDMedium);

  /* "MuTauTree.pyx":1954
 *         self.mPFIDMedium_branch = the_tree.GetBranch("mPFIDMedium")
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDMedium")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFIDMedium_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L316_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L316_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1955
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":
 *             warnings.warn( "MuTauTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDMedium")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFIDM);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFIDM);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFIDM);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1954
 *         self.mPFIDMedium_branch = the_tree.GetBranch("mPFIDMedium")
 *         #if not self.mPFIDMedium_branch and "mPFIDMedium" not in self.complained:
 *         if not self.mPFIDMedium_branch and "mPFIDMedium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDMedium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDMedium")
 */
    goto __pyx_L315;
  }

  /* "MuTauTree.pyx":1958
 *             #self.complained.add("mPFIDMedium")
 *         else:
 *             self.mPFIDMedium_branch.SetAddress(<void*>&self.mPFIDMedium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDTight"
 */
  /*else*/ {
    __pyx_v_self->mPFIDMedium_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDMedium_value)));
  }
  __pyx_L315:;

  /* "MuTauTree.pyx":1961
 * 
 *         #print "making mPFIDTight"
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 */
  __pyx_v_self->mPFIDTight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFIDTight);

  /* "MuTauTree.pyx":1963
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDTight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFIDTight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L319_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L319_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1964
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 *             warnings.warn( "MuTauTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDTight")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFIDT);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFIDT);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFIDT);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1964; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1963
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDTight")
 */
    goto __pyx_L318;
  }

  /* "MuTauTree.pyx":1967
 *             #self.complained.add("mPFIDTight")
 *         else:
 *             self.mPFIDTight_branch.SetAddress(<void*>&self.mPFIDTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFNeutralIso"
 */
  /*else*/ {
    __pyx_v_self->mPFIDTight_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDTight_value)));
  }
  __pyx_L318:;

  /* "MuTauTree.pyx":1970
 * 
 *         #print "making mPFNeutralIso"
 *         self.mPFNeutralIso_branch = the_tree.GetBranch("mPFNeutralIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":
 */
  __pyx_v_self->mPFNeutralIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFNeutralIso);

  /* "MuTauTree.pyx":1972
 *         self.mPFNeutralIso_branch = the_tree.GetBranch("mPFNeutralIso")
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFNeutralIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFNeutralIso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFNeutralIso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L322_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L322_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1973
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFNeutralIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFNeutralIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFNeu);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFNeu);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFNeu);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1973; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1972
 *         self.mPFNeutralIso_branch = the_tree.GetBranch("mPFNeutralIso")
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFNeutralIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFNeutralIso")
 */
    goto __pyx_L321;
  }

  /* "MuTauTree.pyx":1976
 *             #self.complained.add("mPFNeutralIso")
 *         else:
 *             self.mPFNeutralIso_branch.SetAddress(<void*>&self.mPFNeutralIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFPUChargedIso"
 */
  /*else*/ {
    __pyx_v_self->mPFNeutralIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFNeutralIso_value)));
  }
  __pyx_L321:;

  /* "MuTauTree.pyx":1979
 * 
 *         #print "making mPFPUChargedIso"
 *         self.mPFPUChargedIso_branch = the_tree.GetBranch("mPFPUChargedIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":
 */
  __pyx_v_self->mPFPUChargedIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFPUChargedIso);

  /* "MuTauTree.pyx":1981
 *         self.mPFPUChargedIso_branch = the_tree.GetBranch("mPFPUChargedIso")
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFPUChargedIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFPUChargedIso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFPUChargedIso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L325_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L325_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1982
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFPUChargedIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFPUChargedIso")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFPUC);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFPUC);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFPUC);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1981
 *         self.mPFPUChargedIso_branch = the_tree.GetBranch("mPFPUChargedIso")
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFPUChargedIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFPUChargedIso")
 */
    goto __pyx_L324;
  }

  /* "MuTauTree.pyx":1985
 *             #self.complained.add("mPFPUChargedIso")
 *         else:
 *             self.mPFPUChargedIso_branch.SetAddress(<void*>&self.mPFPUChargedIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFPhotonIso"
 */
  /*else*/ {
    __pyx_v_self->mPFPUChargedIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFPUChargedIso_value)));
  }
  __pyx_L324:;

  /* "MuTauTree.pyx":1988
 * 
 *         #print "making mPFPhotonIso"
 *         self.mPFPhotonIso_branch = the_tree.GetBranch("mPFPhotonIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":
 */
  __pyx_v_self->mPFPhotonIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPFPhotonIso);

  /* "MuTauTree.pyx":1990
 *         self.mPFPhotonIso_branch = the_tree.GetBranch("mPFPhotonIso")
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFPhotonIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFPhotonIso")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPFPhotonIso_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L328_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L328_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1991
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFPhotonIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFPhotonIso")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFPho);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPFPho);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPFPho);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1990
 *         self.mPFPhotonIso_branch = the_tree.GetBranch("mPFPhotonIso")
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFPhotonIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFPhotonIso")
 */
    goto __pyx_L327;
  }

  /* "MuTauTree.pyx":1994
 *             #self.complained.add("mPFPhotonIso")
 *         else:
 *             self.mPFPhotonIso_branch.SetAddress(<void*>&self.mPFPhotonIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPVDXY"
 */
  /*else*/ {
    __pyx_v_self->mPFPhotonIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFPhotonIso_value)));
  }
  __pyx_L327:;

  /* "MuTauTree.pyx":1997
 * 
 *         #print "making mPVDXY"
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")             # <<<<<<<<<<<<<<
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 */
  __pyx_v_self->mPVDXY_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPVDXY);

  /* "MuTauTree.pyx":1999
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDXY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPVDXY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L331_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L331_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2000
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 *             warnings.warn( "MuTauTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDXY")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPVDXY);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPVDXY);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPVDXY);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":1999
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDXY")
 */
    goto __pyx_L330;
  }

  /* "MuTauTree.pyx":2003
 *             #self.complained.add("mPVDXY")
 *         else:
 *             self.mPVDXY_branch.SetAddress(<void*>&self.mPVDXY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPVDZ"
 */
  /*else*/ {
    __pyx_v_self->mPVDXY_branch->SetAddress(((void *)(&__pyx_v_self->mPVDXY_value)));
  }
  __pyx_L330:;

  /* "MuTauTree.pyx":2006
 * 
 *         #print "making mPVDZ"
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")             # <<<<<<<<<<<<<<
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 */
  __pyx_v_self->mPVDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPVDZ);

  /* "MuTauTree.pyx":2008
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPVDZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L334_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L334_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2009
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 *             warnings.warn( "MuTauTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDZ")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPVDZ);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPVDZ);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPVDZ);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2009; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2008
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDZ")
 */
    goto __pyx_L333;
  }

  /* "MuTauTree.pyx":2012
 *             #self.complained.add("mPVDZ")
 *         else:
 *             self.mPVDZ_branch.SetAddress(<void*>&self.mPVDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPhi"
 */
  /*else*/ {
    __pyx_v_self->mPVDZ_branch->SetAddress(((void *)(&__pyx_v_self->mPVDZ_value)));
  }
  __pyx_L333:;

  /* "MuTauTree.pyx":2015
 * 
 *         #print "making mPhi"
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 */
  __pyx_v_self->mPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPhi);

  /* "MuTauTree.pyx":2017
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L337_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L337_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2018
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 *             warnings.warn( "MuTauTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPhi_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPhi_d);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPhi_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2018; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2017
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhi")
 */
    goto __pyx_L336;
  }

  /* "MuTauTree.pyx":2021
 *             #self.complained.add("mPhi")
 *         else:
 *             self.mPhi_branch.SetAddress(<void*>&self.mPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPixHits"
 */
  /*else*/ {
    __pyx_v_self->mPhi_branch->SetAddress(((void *)(&__pyx_v_self->mPhi_value)));
  }
  __pyx_L336:;

  /* "MuTauTree.pyx":2024
 * 
 *         #print "making mPixHits"
 *         self.mPixHits_branch = the_tree.GetBranch("mPixHits")             # <<<<<<<<<<<<<<
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":
 */
  __pyx_v_self->mPixHits_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPixHits);

  /* "MuTauTree.pyx":2026
 *         self.mPixHits_branch = the_tree.GetBranch("mPixHits")
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPixHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPixHits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPixHits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L340_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L340_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2027
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":
 *             warnings.warn( "MuTauTree: Expected branch mPixHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPixHits")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPixHi);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPixHi);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPixHi);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2026
 *         self.mPixHits_branch = the_tree.GetBranch("mPixHits")
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPixHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPixHits")
 */
    goto __pyx_L339;
  }

  /* "MuTauTree.pyx":2030
 *             #self.complained.add("mPixHits")
 *         else:
 *             self.mPixHits_branch.SetAddress(<void*>&self.mPixHits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPt"
 */
  /*else*/ {
    __pyx_v_self->mPixHits_branch->SetAddress(((void *)(&__pyx_v_self->mPixHits_value)));
  }
  __pyx_L339:;

  /* "MuTauTree.pyx":2033
 * 
 *         #print "making mPt"
 *         self.mPt_branch = the_tree.GetBranch("mPt")             # <<<<<<<<<<<<<<
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 */
  __pyx_v_self->mPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mPt);

  /* "MuTauTree.pyx":2035
 *         self.mPt_branch = the_tree.GetBranch("mPt")
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L343_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L343_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2036
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 *             warnings.warn( "MuTauTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mPt_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mPt_do);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mPt_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2035
 *         self.mPt_branch = the_tree.GetBranch("mPt")
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPt")
 */
    goto __pyx_L342;
  }

  /* "MuTauTree.pyx":2039
 *             #self.complained.add("mPt")
 *         else:
 *             self.mPt_branch.SetAddress(<void*>&self.mPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRank"
 */
  /*else*/ {
    __pyx_v_self->mPt_branch->SetAddress(((void *)(&__pyx_v_self->mPt_value)));
  }
  __pyx_L342:;

  /* "MuTauTree.pyx":2042
 * 
 *         #print "making mRank"
 *         self.mRank_branch = the_tree.GetBranch("mRank")             # <<<<<<<<<<<<<<
 *         #if not self.mRank_branch and "mRank" not in self.complained:
 *         if not self.mRank_branch and "mRank":
 */
  __pyx_v_self->mRank_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mRank);

  /* "MuTauTree.pyx":2044
 *         self.mRank_branch = the_tree.GetBranch("mRank")
 *         #if not self.mRank_branch and "mRank" not in self.complained:
 *         if not self.mRank_branch and "mRank":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRank does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRank")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mRank_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L346_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L346_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2045
 *         #if not self.mRank_branch and "mRank" not in self.complained:
 *         if not self.mRank_branch and "mRank":
 *             warnings.warn( "MuTauTree: Expected branch mRank does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRank")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mRank);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mRank);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mRank);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2045; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2044
 *         self.mRank_branch = the_tree.GetBranch("mRank")
 *         #if not self.mRank_branch and "mRank" not in self.complained:
 *         if not self.mRank_branch and "mRank":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRank does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRank")
 */
    goto __pyx_L345;
  }

  /* "MuTauTree.pyx":2048
 *             #self.complained.add("mRank")
 *         else:
 *             self.mRank_branch.SetAddress(<void*>&self.mRank_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRelPFIsoDBDefault"
 */
  /*else*/ {
    __pyx_v_self->mRank_branch->SetAddress(((void *)(&__pyx_v_self->mRank_value)));
  }
  __pyx_L345:;

  /* "MuTauTree.pyx":2051
 * 
 *         #print "making mRelPFIsoDBDefault"
 *         self.mRelPFIsoDBDefault_branch = the_tree.GetBranch("mRelPFIsoDBDefault")             # <<<<<<<<<<<<<<
 *         #if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault" not in self.complained:
 *         if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault":
 */
  __pyx_v_self->mRelPFIsoDBDefault_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mRelPFIsoDBDefault);

  /* "MuTauTree.pyx":2053
 *         self.mRelPFIsoDBDefault_branch = the_tree.GetBranch("mRelPFIsoDBDefault")
 *         #if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault" not in self.complained:
 *         if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoDBDefault does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoDBDefault")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mRelPFIsoDBDefault_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L349_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L349_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2054
 *         #if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault" not in self.complained:
 *         if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault":
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoDBDefault does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRelPFIsoDBDefault")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mRelPF);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mRelPF);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mRelPF);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2054; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2053
 *         self.mRelPFIsoDBDefault_branch = the_tree.GetBranch("mRelPFIsoDBDefault")
 *         #if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault" not in self.complained:
 *         if not self.mRelPFIsoDBDefault_branch and "mRelPFIsoDBDefault":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoDBDefault does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoDBDefault")
 */
    goto __pyx_L348;
  }

  /* "MuTauTree.pyx":2057
 *             #self.complained.add("mRelPFIsoDBDefault")
 *         else:
 *             self.mRelPFIsoDBDefault_branch.SetAddress(<void*>&self.mRelPFIsoDBDefault_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRelPFIsoRho"
 */
  /*else*/ {
    __pyx_v_self->mRelPFIsoDBDefault_branch->SetAddress(((void *)(&__pyx_v_self->mRelPFIsoDBDefault_value)));
  }
  __pyx_L348:;

  /* "MuTauTree.pyx":2060
 * 
 *         #print "making mRelPFIsoRho"
 *         self.mRelPFIsoRho_branch = the_tree.GetBranch("mRelPFIsoRho")             # <<<<<<<<<<<<<<
 *         #if not self.mRelPFIsoRho_branch and "mRelPFIsoRho" not in self.complained:
 *         if not self.mRelPFIsoRho_branch and "mRelPFIsoRho":
 */
  __pyx_v_self->mRelPFIsoRho_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mRelPFIsoRho);

  /* "MuTauTree.pyx":2062
 *         self.mRelPFIsoRho_branch = the_tree.GetBranch("mRelPFIsoRho")
 *         #if not self.mRelPFIsoRho_branch and "mRelPFIsoRho" not in self.complained:
 *         if not self.mRelPFIsoRho_branch and "mRelPFIsoRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoRho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mRelPFIsoRho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L352_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L352_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2063
 *         #if not self.mRelPFIsoRho_branch and "mRelPFIsoRho" not in self.complained:
 *         if not self.mRelPFIsoRho_branch and "mRelPFIsoRho":
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRelPFIsoRho")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mRelPF_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2062
 *         self.mRelPFIsoRho_branch = the_tree.GetBranch("mRelPFIsoRho")
 *         #if not self.mRelPFIsoRho_branch and "mRelPFIsoRho" not in self.complained:
 *         if not self.mRelPFIsoRho_branch and "mRelPFIsoRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoRho")
 */
    goto __pyx_L351;
  }

  /* "MuTauTree.pyx":2066
 *             #self.complained.add("mRelPFIsoRho")
 *         else:
 *             self.mRelPFIsoRho_branch.SetAddress(<void*>&self.mRelPFIsoRho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRelPFIsoRhoFSR"
 */
  /*else*/ {
    __pyx_v_self->mRelPFIsoRho_branch->SetAddress(((void *)(&__pyx_v_self->mRelPFIsoRho_value)));
  }
  __pyx_L351:;

  /* "MuTauTree.pyx":2069
 * 
 *         #print "making mRelPFIsoRhoFSR"
 *         self.mRelPFIsoRhoFSR_branch = the_tree.GetBranch("mRelPFIsoRhoFSR")             # <<<<<<<<<<<<<<
 *         #if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR" not in self.complained:
 *         if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR":
 */
  __pyx_v_self->mRelPFIsoRhoFSR_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mRelPFIsoRhoFSR);

  /* "MuTauTree.pyx":2071
 *         self.mRelPFIsoRhoFSR_branch = the_tree.GetBranch("mRelPFIsoRhoFSR")
 *         #if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR" not in self.complained:
 *         if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoRhoFSR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoRhoFSR")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mRelPFIsoRhoFSR_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L355_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L355_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2072
 *         #if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR" not in self.complained:
 *         if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR":
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoRhoFSR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRelPFIsoRhoFSR")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mRelPF_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2071
 *         self.mRelPFIsoRhoFSR_branch = the_tree.GetBranch("mRelPFIsoRhoFSR")
 *         #if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR" not in self.complained:
 *         if not self.mRelPFIsoRhoFSR_branch and "mRelPFIsoRhoFSR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoRhoFSR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoRhoFSR")
 */
    goto __pyx_L354;
  }

  /* "MuTauTree.pyx":2075
 *             #self.complained.add("mRelPFIsoRhoFSR")
 *         else:
 *             self.mRelPFIsoRhoFSR_branch.SetAddress(<void*>&self.mRelPFIsoRhoFSR_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRho"
 */
  /*else*/ {
    __pyx_v_self->mRelPFIsoRhoFSR_branch->SetAddress(((void *)(&__pyx_v_self->mRelPFIsoRhoFSR_value)));
  }
  __pyx_L354:;

  /* "MuTauTree.pyx":2078
 * 
 *         #print "making mRho"
 *         self.mRho_branch = the_tree.GetBranch("mRho")             # <<<<<<<<<<<<<<
 *         #if not self.mRho_branch and "mRho" not in self.complained:
 *         if not self.mRho_branch and "mRho":
 */
  __pyx_v_self->mRho_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mRho);

  /* "MuTauTree.pyx":2080
 *         self.mRho_branch = the_tree.GetBranch("mRho")
 *         #if not self.mRho_branch and "mRho" not in self.complained:
 *         if not self.mRho_branch and "mRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mRho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L358_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L358_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2081
 *         #if not self.mRho_branch and "mRho" not in self.complained:
 *         if not self.mRho_branch and "mRho":
 *             warnings.warn( "MuTauTree: Expected branch mRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRho")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mRho_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mRho_d);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mRho_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2080
 *         self.mRho_branch = the_tree.GetBranch("mRho")
 *         #if not self.mRho_branch and "mRho" not in self.complained:
 *         if not self.mRho_branch and "mRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRho")
 */
    goto __pyx_L357;
  }

  /* "MuTauTree.pyx":2084
 *             #self.complained.add("mRho")
 *         else:
 *             self.mRho_branch.SetAddress(<void*>&self.mRho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mSIP2D"
 */
  /*else*/ {
    __pyx_v_self->mRho_branch->SetAddress(((void *)(&__pyx_v_self->mRho_value)));
  }
  __pyx_L357:;

  /* "MuTauTree.pyx":2087
 * 
 *         #print "making mSIP2D"
 *         self.mSIP2D_branch = the_tree.GetBranch("mSIP2D")             # <<<<<<<<<<<<<<
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":
 */
  __pyx_v_self->mSIP2D_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mSIP2D);

  /* "MuTauTree.pyx":2089
 *         self.mSIP2D_branch = the_tree.GetBranch("mSIP2D")
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP2D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mSIP2D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L361_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L361_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2090
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":
 *             warnings.warn( "MuTauTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSIP2D")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mSIP2D);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mSIP2D);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mSIP2D);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2090; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2089
 *         self.mSIP2D_branch = the_tree.GetBranch("mSIP2D")
 *         #if not self.mSIP2D_branch and "mSIP2D" not in self.complained:
 *         if not self.mSIP2D_branch and "mSIP2D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mSIP2D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP2D")
 */
    goto __pyx_L360;
  }

  /* "MuTauTree.pyx":2093
 *             #self.complained.add("mSIP2D")
 *         else:
 *             self.mSIP2D_branch.SetAddress(<void*>&self.mSIP2D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mSIP3D"
 */
  /*else*/ {
    __pyx_v_self->mSIP2D_branch->SetAddress(((void *)(&__pyx_v_self->mSIP2D_value)));
  }
  __pyx_L360:;

  /* "MuTauTree.pyx":2096
 * 
 *         #print "making mSIP3D"
 *         self.mSIP3D_branch = the_tree.GetBranch("mSIP3D")             # <<<<<<<<<<<<<<
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":
 */
  __pyx_v_self->mSIP3D_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mSIP3D);

  /* "MuTauTree.pyx":2098
 *         self.mSIP3D_branch = the_tree.GetBranch("mSIP3D")
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP3D")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mSIP3D_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L364_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L364_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2099
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":
 *             warnings.warn( "MuTauTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSIP3D")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mSIP3D);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mSIP3D);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mSIP3D);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2099; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2098
 *         self.mSIP3D_branch = the_tree.GetBranch("mSIP3D")
 *         #if not self.mSIP3D_branch and "mSIP3D" not in self.complained:
 *         if not self.mSIP3D_branch and "mSIP3D":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mSIP3D does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSIP3D")
 */
    goto __pyx_L363;
  }

  /* "MuTauTree.pyx":2102
 *             #self.complained.add("mSIP3D")
 *         else:
 *             self.mSIP3D_branch.SetAddress(<void*>&self.mSIP3D_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mTkLayersWithMeasurement"
 */
  /*else*/ {
    __pyx_v_self->mSIP3D_branch->SetAddress(((void *)(&__pyx_v_self->mSIP3D_value)));
  }
  __pyx_L363:;

  /* "MuTauTree.pyx":2105
 * 
 *         #print "making mTkLayersWithMeasurement"
 *         self.mTkLayersWithMeasurement_branch = the_tree.GetBranch("mTkLayersWithMeasurement")             # <<<<<<<<<<<<<<
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":
 */
  __pyx_v_self->mTkLayersWithMeasurement_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mTkLayersWithMeasurement);

  /* "MuTauTree.pyx":2107
 *         self.mTkLayersWithMeasurement_branch = the_tree.GetBranch("mTkLayersWithMeasurement")
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mTkLayersWithMeasurement")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mTkLayersWithMeasurement_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L367_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L367_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2108
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":
 *             warnings.warn( "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mTkLayersWithMeasurement")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mTkLay);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mTkLay);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mTkLay);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2107
 *         self.mTkLayersWithMeasurement_branch = the_tree.GetBranch("mTkLayersWithMeasurement")
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mTkLayersWithMeasurement")
 */
    goto __pyx_L366;
  }

  /* "MuTauTree.pyx":2111
 *             #self.complained.add("mTkLayersWithMeasurement")
 *         else:
 *             self.mTkLayersWithMeasurement_branch.SetAddress(<void*>&self.mTkLayersWithMeasurement_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mToMETDPhi"
 */
  /*else*/ {
    __pyx_v_self->mTkLayersWithMeasurement_branch->SetAddress(((void *)(&__pyx_v_self->mTkLayersWithMeasurement_value)));
  }
  __pyx_L366:;

  /* "MuTauTree.pyx":2114
 * 
 *         #print "making mToMETDPhi"
 *         self.mToMETDPhi_branch = the_tree.GetBranch("mToMETDPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":
 */
  __pyx_v_self->mToMETDPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mToMETDPhi);

  /* "MuTauTree.pyx":2116
 *         self.mToMETDPhi_branch = the_tree.GetBranch("mToMETDPhi")
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mToMETDPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mToMETDPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L370_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L370_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2117
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":
 *             warnings.warn( "MuTauTree: Expected branch mToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mToMETDPhi")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mToMET);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mToMET);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mToMET);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2116
 *         self.mToMETDPhi_branch = the_tree.GetBranch("mToMETDPhi")
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mToMETDPhi")
 */
    goto __pyx_L369;
  }

  /* "MuTauTree.pyx":2120
 *             #self.complained.add("mToMETDPhi")
 *         else:
 *             self.mToMETDPhi_branch.SetAddress(<void*>&self.mToMETDPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mTypeCode"
 */
  /*else*/ {
    __pyx_v_self->mToMETDPhi_branch->SetAddress(((void *)(&__pyx_v_self->mToMETDPhi_value)));
  }
  __pyx_L369:;

  /* "MuTauTree.pyx":2123
 * 
 *         #print "making mTypeCode"
 *         self.mTypeCode_branch = the_tree.GetBranch("mTypeCode")             # <<<<<<<<<<<<<<
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":
 */
  __pyx_v_self->mTypeCode_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mTypeCode);

  /* "MuTauTree.pyx":2125
 *         self.mTypeCode_branch = the_tree.GetBranch("mTypeCode")
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mTypeCode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mTypeCode")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mTypeCode_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L373_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L373_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2126
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":
 *             warnings.warn( "MuTauTree: Expected branch mTypeCode does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mTypeCode")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mTypeC);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mTypeC);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mTypeC);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2125
 *         self.mTypeCode_branch = the_tree.GetBranch("mTypeCode")
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mTypeCode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mTypeCode")
 */
    goto __pyx_L372;
  }

  /* "MuTauTree.pyx":2129
 *             #self.complained.add("mTypeCode")
 *         else:
 *             self.mTypeCode_branch.SetAddress(<void*>&self.mTypeCode_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mVZ"
 */
  /*else*/ {
    __pyx_v_self->mTypeCode_branch->SetAddress(((void *)(&__pyx_v_self->mTypeCode_value)));
  }
  __pyx_L372:;

  /* "MuTauTree.pyx":2132
 * 
 *         #print "making mVZ"
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")             # <<<<<<<<<<<<<<
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 */
  __pyx_v_self->mVZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_mVZ);

  /* "MuTauTree.pyx":2134
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->mVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L376_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L376_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2135
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 *             warnings.warn( "MuTauTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mVZ")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_mVZ_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_mVZ_do);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_mVZ_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2135; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2134
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mVZ")
 */
    goto __pyx_L375;
  }

  /* "MuTauTree.pyx":2138
 *             #self.complained.add("mVZ")
 *         else:
 *             self.mVZ_branch.SetAddress(<void*>&self.mVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_CosThetaStar"
 */
  /*else*/ {
    __pyx_v_self->mVZ_branch->SetAddress(((void *)(&__pyx_v_self->mVZ_value)));
  }
  __pyx_L375:;

  /* "MuTauTree.pyx":2141
 * 
 *         #print "making m_t_CosThetaStar"
 *         self.m_t_CosThetaStar_branch = the_tree.GetBranch("m_t_CosThetaStar")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":
 */
  __pyx_v_self->m_t_CosThetaStar_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_CosThetaStar);

  /* "MuTauTree.pyx":2143
 *         self.m_t_CosThetaStar_branch = the_tree.GetBranch("m_t_CosThetaStar")
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_CosThetaStar does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_CosThetaStar")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_CosThetaStar_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L379_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L379_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2144
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":
 *             warnings.warn( "MuTauTree: Expected branch m_t_CosThetaStar does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_CosThetaStar")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Co);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Co);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_Co);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2143
 *         self.m_t_CosThetaStar_branch = the_tree.GetBranch("m_t_CosThetaStar")
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_CosThetaStar does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_CosThetaStar")
 */
    goto __pyx_L378;
  }

  /* "MuTauTree.pyx":2147
 *             #self.complained.add("m_t_CosThetaStar")
 *         else:
 *             self.m_t_CosThetaStar_branch.SetAddress(<void*>&self.m_t_CosThetaStar_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_DPhi"
 */
  /*else*/ {
    __pyx_v_self->m_t_CosThetaStar_branch->SetAddress(((void *)(&__pyx_v_self->m_t_CosThetaStar_value)));
  }
  __pyx_L378:;

  /* "MuTauTree.pyx":2150
 * 
 *         #print "making m_t_DPhi"
 *         self.m_t_DPhi_branch = the_tree.GetBranch("m_t_DPhi")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":
 */
  __pyx_v_self->m_t_DPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_DPhi);

  /* "MuTauTree.pyx":2152
 *         self.m_t_DPhi_branch = the_tree.GetBranch("m_t_DPhi")
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_DPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_DPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_DPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L382_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L382_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2153
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":
 *             warnings.warn( "MuTauTree: Expected branch m_t_DPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_DPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_DP);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_DP);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_DP);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2152
 *         self.m_t_DPhi_branch = the_tree.GetBranch("m_t_DPhi")
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_DPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_DPhi")
 */
    goto __pyx_L381;
  }

  /* "MuTauTree.pyx":2156
 *             #self.complained.add("m_t_DPhi")
 *         else:
 *             self.m_t_DPhi_branch.SetAddress(<void*>&self.m_t_DPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_DR"
 */
  /*else*/ {
    __pyx_v_self->m_t_DPhi_branch->SetAddress(((void *)(&__pyx_v_self->m_t_DPhi_value)));
  }
  __pyx_L381:;

  /* "MuTauTree.pyx":2159
 * 
 *         #print "making m_t_DR"
 *         self.m_t_DR_branch = the_tree.GetBranch("m_t_DR")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":
 */
  __pyx_v_self->m_t_DR_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_DR);

  /* "MuTauTree.pyx":2161
 *         self.m_t_DR_branch = the_tree.GetBranch("m_t_DR")
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_DR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_DR")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_DR_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L385_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L385_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2162
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":
 *             warnings.warn( "MuTauTree: Expected branch m_t_DR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_DR")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_DR);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_DR);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_DR);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2161
 *         self.m_t_DR_branch = the_tree.GetBranch("m_t_DR")
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_DR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_DR")
 */
    goto __pyx_L384;
  }

  /* "MuTauTree.pyx":2165
 *             #self.complained.add("m_t_DR")
 *         else:
 *             self.m_t_DR_branch.SetAddress(<void*>&self.m_t_DR_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Eta"
 */
  /*else*/ {
    __pyx_v_self->m_t_DR_branch->SetAddress(((void *)(&__pyx_v_self->m_t_DR_value)));
  }
  __pyx_L384:;

  /* "MuTauTree.pyx":2168
 * 
 *         #print "making m_t_Eta"
 *         self.m_t_Eta_branch = the_tree.GetBranch("m_t_Eta")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Eta_branch and "m_t_Eta" not in self.complained:
 *         if not self.m_t_Eta_branch and "m_t_Eta":
 */
  __pyx_v_self->m_t_Eta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_Eta);

  /* "MuTauTree.pyx":2170
 *         self.m_t_Eta_branch = the_tree.GetBranch("m_t_Eta")
 *         #if not self.m_t_Eta_branch and "m_t_Eta" not in self.complained:
 *         if not self.m_t_Eta_branch and "m_t_Eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_Eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L388_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L388_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2171
 *         #if not self.m_t_Eta_branch and "m_t_Eta" not in self.complained:
 *         if not self.m_t_Eta_branch and "m_t_Eta":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Eta")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Et);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Et);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_Et);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2170
 *         self.m_t_Eta_branch = the_tree.GetBranch("m_t_Eta")
 *         #if not self.m_t_Eta_branch and "m_t_Eta" not in self.complained:
 *         if not self.m_t_Eta_branch and "m_t_Eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Eta")
 */
    goto __pyx_L387;
  }

  /* "MuTauTree.pyx":2174
 *             #self.complained.add("m_t_Eta")
 *         else:
 *             self.m_t_Eta_branch.SetAddress(<void*>&self.m_t_Eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Mass"
 */
  /*else*/ {
    __pyx_v_self->m_t_Eta_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Eta_value)));
  }
  __pyx_L387:;

  /* "MuTauTree.pyx":2177
 * 
 *         #print "making m_t_Mass"
 *         self.m_t_Mass_branch = the_tree.GetBranch("m_t_Mass")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":
 */
  __pyx_v_self->m_t_Mass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_Mass);

  /* "MuTauTree.pyx":2179
 *         self.m_t_Mass_branch = the_tree.GetBranch("m_t_Mass")
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Mass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_Mass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L391_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L391_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2180
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Mass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ma);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ma);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_Ma);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2179
 *         self.m_t_Mass_branch = the_tree.GetBranch("m_t_Mass")
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Mass")
 */
    goto __pyx_L390;
  }

  /* "MuTauTree.pyx":2183
 *             #self.complained.add("m_t_Mass")
 *         else:
 *             self.m_t_Mass_branch.SetAddress(<void*>&self.m_t_Mass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Mt"
 */
  /*else*/ {
    __pyx_v_self->m_t_Mass_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Mass_value)));
  }
  __pyx_L390:;

  /* "MuTauTree.pyx":2186
 * 
 *         #print "making m_t_Mt"
 *         self.m_t_Mt_branch = the_tree.GetBranch("m_t_Mt")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Mt_branch and "m_t_Mt" not in self.complained:
 *         if not self.m_t_Mt_branch and "m_t_Mt":
 */
  __pyx_v_self->m_t_Mt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_Mt);

  /* "MuTauTree.pyx":2188
 *         self.m_t_Mt_branch = the_tree.GetBranch("m_t_Mt")
 *         #if not self.m_t_Mt_branch and "m_t_Mt" not in self.complained:
 *         if not self.m_t_Mt_branch and "m_t_Mt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Mt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_Mt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L394_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L394_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2189
 *         #if not self.m_t_Mt_branch and "m_t_Mt" not in self.complained:
 *         if not self.m_t_Mt_branch and "m_t_Mt":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Mt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Mt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Mt);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_Mt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2188
 *         self.m_t_Mt_branch = the_tree.GetBranch("m_t_Mt")
 *         #if not self.m_t_Mt_branch and "m_t_Mt" not in self.complained:
 *         if not self.m_t_Mt_branch and "m_t_Mt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Mt")
 */
    goto __pyx_L393;
  }

  /* "MuTauTree.pyx":2192
 *             #self.complained.add("m_t_Mt")
 *         else:
 *             self.m_t_Mt_branch.SetAddress(<void*>&self.m_t_Mt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_PZeta"
 */
  /*else*/ {
    __pyx_v_self->m_t_Mt_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Mt_value)));
  }
  __pyx_L393:;

  /* "MuTauTree.pyx":2195
 * 
 *         #print "making m_t_PZeta"
 *         self.m_t_PZeta_branch = the_tree.GetBranch("m_t_PZeta")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":
 */
  __pyx_v_self->m_t_PZeta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_PZeta);

  /* "MuTauTree.pyx":2197
 *         self.m_t_PZeta_branch = the_tree.GetBranch("m_t_PZeta")
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_PZeta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_PZeta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L397_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L397_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2198
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_PZeta")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2197
 *         self.m_t_PZeta_branch = the_tree.GetBranch("m_t_PZeta")
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_PZeta")
 */
    goto __pyx_L396;
  }

  /* "MuTauTree.pyx":2201
 *             #self.complained.add("m_t_PZeta")
 *         else:
 *             self.m_t_PZeta_branch.SetAddress(<void*>&self.m_t_PZeta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_PZetaVis"
 */
  /*else*/ {
    __pyx_v_self->m_t_PZeta_branch->SetAddress(((void *)(&__pyx_v_self->m_t_PZeta_value)));
  }
  __pyx_L396:;

  /* "MuTauTree.pyx":2204
 * 
 *         #print "making m_t_PZetaVis"
 *         self.m_t_PZetaVis_branch = the_tree.GetBranch("m_t_PZetaVis")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":
 */
  __pyx_v_self->m_t_PZetaVis_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_PZetaVis);

  /* "MuTauTree.pyx":2206
 *         self.m_t_PZetaVis_branch = the_tree.GetBranch("m_t_PZetaVis")
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_PZetaVis")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_PZetaVis_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L400_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L400_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2207
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_PZetaVis")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2206
 *         self.m_t_PZetaVis_branch = the_tree.GetBranch("m_t_PZetaVis")
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_PZetaVis")
 */
    goto __pyx_L399;
  }

  /* "MuTauTree.pyx":2210
 *             #self.complained.add("m_t_PZetaVis")
 *         else:
 *             self.m_t_PZetaVis_branch.SetAddress(<void*>&self.m_t_PZetaVis_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Phi"
 */
  /*else*/ {
    __pyx_v_self->m_t_PZetaVis_branch->SetAddress(((void *)(&__pyx_v_self->m_t_PZetaVis_value)));
  }
  __pyx_L399:;

  /* "MuTauTree.pyx":2213
 * 
 *         #print "making m_t_Phi"
 *         self.m_t_Phi_branch = the_tree.GetBranch("m_t_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Phi_branch and "m_t_Phi" not in self.complained:
 *         if not self.m_t_Phi_branch and "m_t_Phi":
 */
  __pyx_v_self->m_t_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_Phi);

  /* "MuTauTree.pyx":2215
 *         self.m_t_Phi_branch = the_tree.GetBranch("m_t_Phi")
 *         #if not self.m_t_Phi_branch and "m_t_Phi" not in self.complained:
 *         if not self.m_t_Phi_branch and "m_t_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L403_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L403_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2216
 *         #if not self.m_t_Phi_branch and "m_t_Phi" not in self.complained:
 *         if not self.m_t_Phi_branch and "m_t_Phi":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Phi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ph);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ph);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_Ph);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2215
 *         self.m_t_Phi_branch = the_tree.GetBranch("m_t_Phi")
 *         #if not self.m_t_Phi_branch and "m_t_Phi" not in self.complained:
 *         if not self.m_t_Phi_branch and "m_t_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Phi")
 */
    goto __pyx_L402;
  }

  /* "MuTauTree.pyx":2219
 *             #self.complained.add("m_t_Phi")
 *         else:
 *             self.m_t_Phi_branch.SetAddress(<void*>&self.m_t_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Pt"
 */
  /*else*/ {
    __pyx_v_self->m_t_Phi_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Phi_value)));
  }
  __pyx_L402:;

  /* "MuTauTree.pyx":2222
 * 
 *         #print "making m_t_Pt"
 *         self.m_t_Pt_branch = the_tree.GetBranch("m_t_Pt")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":
 */
  __pyx_v_self->m_t_Pt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_Pt);

  /* "MuTauTree.pyx":2224
 *         self.m_t_Pt_branch = the_tree.GetBranch("m_t_Pt")
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_Pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L406_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L406_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2225
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Pt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Pt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_Pt);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_Pt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2224
 *         self.m_t_Pt_branch = the_tree.GetBranch("m_t_Pt")
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Pt")
 */
    goto __pyx_L405;
  }

  /* "MuTauTree.pyx":2228
 *             #self.complained.add("m_t_Pt")
 *         else:
 *             self.m_t_Pt_branch.SetAddress(<void*>&self.m_t_Pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_SS"
 */
  /*else*/ {
    __pyx_v_self->m_t_Pt_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Pt_value)));
  }
  __pyx_L405:;

  /* "MuTauTree.pyx":2231
 * 
 *         #print "making m_t_SS"
 *         self.m_t_SS_branch = the_tree.GetBranch("m_t_SS")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":
 */
  __pyx_v_self->m_t_SS_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_SS);

  /* "MuTauTree.pyx":2233
 *         self.m_t_SS_branch = the_tree.GetBranch("m_t_SS")
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_SS does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_SS")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_SS_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L409_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L409_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2234
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":
 *             warnings.warn( "MuTauTree: Expected branch m_t_SS does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_SS")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_SS);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_SS);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_SS);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2233
 *         self.m_t_SS_branch = the_tree.GetBranch("m_t_SS")
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_SS does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_SS")
 */
    goto __pyx_L408;
  }

  /* "MuTauTree.pyx":2237
 *             #self.complained.add("m_t_SS")
 *         else:
 *             self.m_t_SS_branch.SetAddress(<void*>&self.m_t_SS_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_ToMETDPhi_Ty1"
 */
  /*else*/ {
    __pyx_v_self->m_t_SS_branch->SetAddress(((void *)(&__pyx_v_self->m_t_SS_value)));
  }
  __pyx_L408:;

  /* "MuTauTree.pyx":2240
 * 
 *         #print "making m_t_ToMETDPhi_Ty1"
 *         self.m_t_ToMETDPhi_Ty1_branch = the_tree.GetBranch("m_t_ToMETDPhi_Ty1")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":
 */
  __pyx_v_self->m_t_ToMETDPhi_Ty1_branch = __pyx_v_the_tree->GetBranch(__pyx_k_m_t_ToMETDPhi_Ty1);

  /* "MuTauTree.pyx":2242
 *         self.m_t_ToMETDPhi_Ty1_branch = the_tree.GetBranch("m_t_ToMETDPhi_Ty1")
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->m_t_ToMETDPhi_Ty1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L412_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L412_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2243
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":
 *             warnings.warn( "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_To);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_m_t_To);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_m_t_To);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2242
 *         self.m_t_ToMETDPhi_Ty1_branch = the_tree.GetBranch("m_t_ToMETDPhi_Ty1")
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 */
    goto __pyx_L411;
  }

  /* "MuTauTree.pyx":2246
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 *         else:
 *             self.m_t_ToMETDPhi_Ty1_branch.SetAddress(<void*>&self.m_t_ToMETDPhi_Ty1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muGlbIsoVetoPt10"
 */
  /*else*/ {
    __pyx_v_self->m_t_ToMETDPhi_Ty1_branch->SetAddress(((void *)(&__pyx_v_self->m_t_ToMETDPhi_Ty1_value)));
  }
  __pyx_L411:;

  /* "MuTauTree.pyx":2249
 * 
 *         #print "making muGlbIsoVetoPt10"
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")             # <<<<<<<<<<<<<<
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 */
  __pyx_v_self->muGlbIsoVetoPt10_branch = __pyx_v_the_tree->GetBranch(__pyx_k_muGlbIsoVetoPt10);

  /* "MuTauTree.pyx":2251
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muGlbIsoVetoPt10")
 */
  __pyx_t_2 = ((!(__pyx_v_self->muGlbIsoVetoPt10_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L415_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L415_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2252
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 *             warnings.warn( "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_muGlbI);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_muGlbI);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_muGlbI);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2251
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muGlbIsoVetoPt10")
 */
    goto __pyx_L414;
  }

  /* "MuTauTree.pyx":2255
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 *             self.muGlbIsoVetoPt10_branch.SetAddress(<void*>&self.muGlbIsoVetoPt10_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoPt15IsoIdVtx"
 */
  /*else*/ {
    __pyx_v_self->muGlbIsoVetoPt10_branch->SetAddress(((void *)(&__pyx_v_self->muGlbIsoVetoPt10_value)));
  }
  __pyx_L414:;

  /* "MuTauTree.pyx":2258
 * 
 *         #print "making muVetoPt15IsoIdVtx"
 *         self.muVetoPt15IsoIdVtx_branch = the_tree.GetBranch("muVetoPt15IsoIdVtx")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":
 */
  __pyx_v_self->muVetoPt15IsoIdVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_muVetoPt15IsoIdVtx);

  /* "MuTauTree.pyx":2260
 *         self.muVetoPt15IsoIdVtx_branch = the_tree.GetBranch("muVetoPt15IsoIdVtx")
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->muVetoPt15IsoIdVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L418_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L418_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2261
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_muVeto);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_muVeto);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_muVeto);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2260
 *         self.muVetoPt15IsoIdVtx_branch = the_tree.GetBranch("muVetoPt15IsoIdVtx")
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 */
    goto __pyx_L417;
  }

  /* "MuTauTree.pyx":2264
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 *         else:
 *             self.muVetoPt15IsoIdVtx_branch.SetAddress(<void*>&self.muVetoPt15IsoIdVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoPt5"
 */
  /*else*/ {
    __pyx_v_self->muVetoPt15IsoIdVtx_branch->SetAddress(((void *)(&__pyx_v_self->muVetoPt15IsoIdVtx_value)));
  }
  __pyx_L417:;

  /* "MuTauTree.pyx":2267
 * 
 *         #print "making muVetoPt5"
 *         self.muVetoPt5_branch = the_tree.GetBranch("muVetoPt5")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":
 */
  __pyx_v_self->muVetoPt5_branch = __pyx_v_the_tree->GetBranch(__pyx_k_muVetoPt5);

  /* "MuTauTree.pyx":2269
 *         self.muVetoPt5_branch = the_tree.GetBranch("muVetoPt5")
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->muVetoPt5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L421_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L421_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2270
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoPt5")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_muVeto_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_muVeto_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_muVeto_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2269
 *         self.muVetoPt5_branch = the_tree.GetBranch("muVetoPt5")
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt5")
 */
    goto __pyx_L420;
  }

  /* "MuTauTree.pyx":2273
 *             #self.complained.add("muVetoPt5")
 *         else:
 *             self.muVetoPt5_branch.SetAddress(<void*>&self.muVetoPt5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoPt5IsoIdVtx"
 */
  /*else*/ {
    __pyx_v_self->muVetoPt5_branch->SetAddress(((void *)(&__pyx_v_self->muVetoPt5_value)));
  }
  __pyx_L420:;

  /* "MuTauTree.pyx":2276
 * 
 *         #print "making muVetoPt5IsoIdVtx"
 *         self.muVetoPt5IsoIdVtx_branch = the_tree.GetBranch("muVetoPt5IsoIdVtx")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":
 */
  __pyx_v_self->muVetoPt5IsoIdVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_muVetoPt5IsoIdVtx);

  /* "MuTauTree.pyx":2278
 *         self.muVetoPt5IsoIdVtx_branch = the_tree.GetBranch("muVetoPt5IsoIdVtx")
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->muVetoPt5IsoIdVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L424_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L424_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2279
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_muVeto_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_muVeto_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_muVeto_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2278
 *         self.muVetoPt5IsoIdVtx_branch = the_tree.GetBranch("muVetoPt5IsoIdVtx")
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 */
    goto __pyx_L423;
  }

  /* "MuTauTree.pyx":2282
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 *         else:
 *             self.muVetoPt5IsoIdVtx_branch.SetAddress(<void*>&self.muVetoPt5IsoIdVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making nTruePU"
 */
  /*else*/ {
    __pyx_v_self->muVetoPt5IsoIdVtx_branch->SetAddress(((void *)(&__pyx_v_self->muVetoPt5IsoIdVtx_value)));
  }
  __pyx_L423:;

  /* "MuTauTree.pyx":2285
 * 
 *         #print "making nTruePU"
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")             # <<<<<<<<<<<<<<
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 */
  __pyx_v_self->nTruePU_branch = __pyx_v_the_tree->GetBranch(__pyx_k_nTruePU);

  /* "MuTauTree.pyx":2287
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nTruePU")
 */
  __pyx_t_2 = ((!(__pyx_v_self->nTruePU_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L427_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L427_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2288
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 *             warnings.warn( "MuTauTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nTruePU")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_nTrueP);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_nTrueP);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_nTrueP);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2287
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nTruePU")
 */
    goto __pyx_L426;
  }

  /* "MuTauTree.pyx":2291
 *             #self.complained.add("nTruePU")
 *         else:
 *             self.nTruePU_branch.SetAddress(<void*>&self.nTruePU_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making nvtx"
 */
  /*else*/ {
    __pyx_v_self->nTruePU_branch->SetAddress(((void *)(&__pyx_v_self->nTruePU_value)));
  }
  __pyx_L426:;

  /* "MuTauTree.pyx":2294
 * 
 *         #print "making nvtx"
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")             # <<<<<<<<<<<<<<
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 */
  __pyx_v_self->nvtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_nvtx);

  /* "MuTauTree.pyx":2296
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nvtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->nvtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L430_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L430_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2297
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 *             warnings.warn( "MuTauTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nvtx")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_nvtx_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_nvtx_d);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_nvtx_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2296
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nvtx")
 */
    goto __pyx_L429;
  }

  /* "MuTauTree.pyx":2300
 *             #self.complained.add("nvtx")
 *         else:
 *             self.nvtx_branch.SetAddress(<void*>&self.nvtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMetEt"
 */
  /*else*/ {
    __pyx_v_self->nvtx_branch->SetAddress(((void *)(&__pyx_v_self->nvtx_value)));
  }
  __pyx_L429:;

  /* "MuTauTree.pyx":2303
 * 
 *         #print "making pfMetEt"
 *         self.pfMetEt_branch = the_tree.GetBranch("pfMetEt")             # <<<<<<<<<<<<<<
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":
 */
  __pyx_v_self->pfMetEt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMetEt);

  /* "MuTauTree.pyx":2305
 *         self.pfMetEt_branch = the_tree.GetBranch("pfMetEt")
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMetEt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMetEt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L433_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L433_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2306
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":
 *             warnings.warn( "MuTauTree: Expected branch pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMetEt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMetE);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMetE);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMetE);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2305
 *         self.pfMetEt_branch = the_tree.GetBranch("pfMetEt")
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMetEt")
 */
    goto __pyx_L432;
  }

  /* "MuTauTree.pyx":2309
 *             #self.complained.add("pfMetEt")
 *         else:
 *             self.pfMetEt_branch.SetAddress(<void*>&self.pfMetEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMetPhi"
 */
  /*else*/ {
    __pyx_v_self->pfMetEt_branch->SetAddress(((void *)(&__pyx_v_self->pfMetEt_value)));
  }
  __pyx_L432:;

  /* "MuTauTree.pyx":2312
 * 
 *         #print "making pfMetPhi"
 *         self.pfMetPhi_branch = the_tree.GetBranch("pfMetPhi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":
 */
  __pyx_v_self->pfMetPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMetPhi);

  /* "MuTauTree.pyx":2314
 *         self.pfMetPhi_branch = the_tree.GetBranch("pfMetPhi")
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMetPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMetPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L436_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L436_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2315
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":
 *             warnings.warn( "MuTauTree: Expected branch pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMetPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMetP);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMetP);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMetP);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2314
 *         self.pfMetPhi_branch = the_tree.GetBranch("pfMetPhi")
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMetPhi")
 */
    goto __pyx_L435;
  }

  /* "MuTauTree.pyx":2318
 *             #self.complained.add("pfMetPhi")
 *         else:
 *             self.pfMetPhi_branch.SetAddress(<void*>&self.pfMetPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_jes_Et"
 */
  /*else*/ {
    __pyx_v_self->pfMetPhi_branch->SetAddress(((void *)(&__pyx_v_self->pfMetPhi_value)));
  }
  __pyx_L435:;

  /* "MuTauTree.pyx":2321
 * 
 *         #print "making pfMet_jes_Et"
 *         self.pfMet_jes_Et_branch = the_tree.GetBranch("pfMet_jes_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":
 */
  __pyx_v_self->pfMet_jes_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_jes_Et);

  /* "MuTauTree.pyx":2323
 *         self.pfMet_jes_Et_branch = the_tree.GetBranch("pfMet_jes_Et")
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_jes_Et")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_jes_Et_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L439_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L439_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2324
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_jes_Et")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2323
 *         self.pfMet_jes_Et_branch = the_tree.GetBranch("pfMet_jes_Et")
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_jes_Et")
 */
    goto __pyx_L438;
  }

  /* "MuTauTree.pyx":2327
 *             #self.complained.add("pfMet_jes_Et")
 *         else:
 *             self.pfMet_jes_Et_branch.SetAddress(<void*>&self.pfMet_jes_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_jes_Phi"
 */
  /*else*/ {
    __pyx_v_self->pfMet_jes_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_jes_Et_value)));
  }
  __pyx_L438:;

  /* "MuTauTree.pyx":2330
 * 
 *         #print "making pfMet_jes_Phi"
 *         self.pfMet_jes_Phi_branch = the_tree.GetBranch("pfMet_jes_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":
 */
  __pyx_v_self->pfMet_jes_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_jes_Phi);

  /* "MuTauTree.pyx":2332
 *         self.pfMet_jes_Phi_branch = the_tree.GetBranch("pfMet_jes_Phi")
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_jes_Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_jes_Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L442_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L442_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2333
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_jes_Phi")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2333; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2332
 *         self.pfMet_jes_Phi_branch = the_tree.GetBranch("pfMet_jes_Phi")
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_jes_Phi")
 */
    goto __pyx_L441;
  }

  /* "MuTauTree.pyx":2336
 *             #self.complained.add("pfMet_jes_Phi")
 *         else:
 *             self.pfMet_jes_Phi_branch.SetAddress(<void*>&self.pfMet_jes_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_mes_Et"
 */
  /*else*/ {
    __pyx_v_self->pfMet_jes_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_jes_Phi_value)));
  }
  __pyx_L441:;

  /* "MuTauTree.pyx":2339
 * 
 *         #print "making pfMet_mes_Et"
 *         self.pfMet_mes_Et_branch = the_tree.GetBranch("pfMet_mes_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":
 */
  __pyx_v_self->pfMet_mes_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_mes_Et);

  /* "MuTauTree.pyx":2341
 *         self.pfMet_mes_Et_branch = the_tree.GetBranch("pfMet_mes_Et")
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_mes_Et")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_mes_Et_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L445_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L445_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2342
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_mes_Et")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2341
 *         self.pfMet_mes_Et_branch = the_tree.GetBranch("pfMet_mes_Et")
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_mes_Et")
 */
    goto __pyx_L444;
  }

  /* "MuTauTree.pyx":2345
 *             #self.complained.add("pfMet_mes_Et")
 *         else:
 *             self.pfMet_mes_Et_branch.SetAddress(<void*>&self.pfMet_mes_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_mes_Phi"
 */
  /*else*/ {
    __pyx_v_self->pfMet_mes_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_mes_Et_value)));
  }
  __pyx_L444:;

  /* "MuTauTree.pyx":2348
 * 
 *         #print "making pfMet_mes_Phi"
 *         self.pfMet_mes_Phi_branch = the_tree.GetBranch("pfMet_mes_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":
 */
  __pyx_v_self->pfMet_mes_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_mes_Phi);

  /* "MuTauTree.pyx":2350
 *         self.pfMet_mes_Phi_branch = the_tree.GetBranch("pfMet_mes_Phi")
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_mes_Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_mes_Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L448_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L448_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2351
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_mes_Phi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2350
 *         self.pfMet_mes_Phi_branch = the_tree.GetBranch("pfMet_mes_Phi")
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_mes_Phi")
 */
    goto __pyx_L447;
  }

  /* "MuTauTree.pyx":2354
 *             #self.complained.add("pfMet_mes_Phi")
 *         else:
 *             self.pfMet_mes_Phi_branch.SetAddress(<void*>&self.pfMet_mes_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_tes_Et"
 */
  /*else*/ {
    __pyx_v_self->pfMet_mes_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_mes_Phi_value)));
  }
  __pyx_L447:;

  /* "MuTauTree.pyx":2357
 * 
 *         #print "making pfMet_tes_Et"
 *         self.pfMet_tes_Et_branch = the_tree.GetBranch("pfMet_tes_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":
 */
  __pyx_v_self->pfMet_tes_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_tes_Et);

  /* "MuTauTree.pyx":2359
 *         self.pfMet_tes_Et_branch = the_tree.GetBranch("pfMet_tes_Et")
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_tes_Et")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_tes_Et_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L451_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L451_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2360
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_tes_Et")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2359
 *         self.pfMet_tes_Et_branch = the_tree.GetBranch("pfMet_tes_Et")
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_tes_Et")
 */
    goto __pyx_L450;
  }

  /* "MuTauTree.pyx":2363
 *             #self.complained.add("pfMet_tes_Et")
 *         else:
 *             self.pfMet_tes_Et_branch.SetAddress(<void*>&self.pfMet_tes_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_tes_Phi"
 */
  /*else*/ {
    __pyx_v_self->pfMet_tes_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_tes_Et_value)));
  }
  __pyx_L450:;

  /* "MuTauTree.pyx":2366
 * 
 *         #print "making pfMet_tes_Phi"
 *         self.pfMet_tes_Phi_branch = the_tree.GetBranch("pfMet_tes_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":
 */
  __pyx_v_self->pfMet_tes_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_tes_Phi);

  /* "MuTauTree.pyx":2368
 *         self.pfMet_tes_Phi_branch = the_tree.GetBranch("pfMet_tes_Phi")
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_tes_Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_tes_Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L454_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L454_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2369
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_tes_Phi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_6);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2368
 *         self.pfMet_tes_Phi_branch = the_tree.GetBranch("pfMet_tes_Phi")
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_tes_Phi")
 */
    goto __pyx_L453;
  }

  /* "MuTauTree.pyx":2372
 *             #self.complained.add("pfMet_tes_Phi")
 *         else:
 *             self.pfMet_tes_Phi_branch.SetAddress(<void*>&self.pfMet_tes_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_ues_Et"
 */
  /*else*/ {
    __pyx_v_self->pfMet_tes_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_tes_Phi_value)));
  }
  __pyx_L453:;

  /* "MuTauTree.pyx":2375
 * 
 *         #print "making pfMet_ues_Et"
 *         self.pfMet_ues_Et_branch = the_tree.GetBranch("pfMet_ues_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":
 */
  __pyx_v_self->pfMet_ues_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_ues_Et);

  /* "MuTauTree.pyx":2377
 *         self.pfMet_ues_Et_branch = the_tree.GetBranch("pfMet_ues_Et")
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_ues_Et")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_ues_Et_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L457_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L457_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2378
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_ues_Et")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_7);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_7);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_7);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2378; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2377
 *         self.pfMet_ues_Et_branch = the_tree.GetBranch("pfMet_ues_Et")
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_ues_Et")
 */
    goto __pyx_L456;
  }

  /* "MuTauTree.pyx":2381
 *             #self.complained.add("pfMet_ues_Et")
 *         else:
 *             self.pfMet_ues_Et_branch.SetAddress(<void*>&self.pfMet_ues_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_ues_Phi"
 */
  /*else*/ {
    __pyx_v_self->pfMet_ues_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_ues_Et_value)));
  }
  __pyx_L456:;

  /* "MuTauTree.pyx":2384
 * 
 *         #print "making pfMet_ues_Phi"
 *         self.pfMet_ues_Phi_branch = the_tree.GetBranch("pfMet_ues_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":
 */
  __pyx_v_self->pfMet_ues_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pfMet_ues_Phi);

  /* "MuTauTree.pyx":2386
 *         self.pfMet_ues_Phi_branch = the_tree.GetBranch("pfMet_ues_Phi")
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_ues_Phi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pfMet_ues_Phi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L460_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L460_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2387
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_ues_Phi")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_8);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pfMet_8);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pfMet_8);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2386
 *         self.pfMet_ues_Phi_branch = the_tree.GetBranch("pfMet_ues_Phi")
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_ues_Phi")
 */
    goto __pyx_L459;
  }

  /* "MuTauTree.pyx":2390
 *             #self.complained.add("pfMet_ues_Phi")
 *         else:
 *             self.pfMet_ues_Phi_branch.SetAddress(<void*>&self.pfMet_ues_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making processID"
 */
  /*else*/ {
    __pyx_v_self->pfMet_ues_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_ues_Phi_value)));
  }
  __pyx_L459:;

  /* "MuTauTree.pyx":2393
 * 
 *         #print "making processID"
 *         self.processID_branch = the_tree.GetBranch("processID")             # <<<<<<<<<<<<<<
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 */
  __pyx_v_self->processID_branch = __pyx_v_the_tree->GetBranch(__pyx_k_processID);

  /* "MuTauTree.pyx":2395
 *         self.processID_branch = the_tree.GetBranch("processID")
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("processID")
 */
  __pyx_t_2 = ((!(__pyx_v_self->processID_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L463_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L463_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2396
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 *             warnings.warn( "MuTauTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("processID")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_proces);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_proces);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_proces);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2395
 *         self.processID_branch = the_tree.GetBranch("processID")
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("processID")
 */
    goto __pyx_L462;
  }

  /* "MuTauTree.pyx":2399
 *             #self.complained.add("processID")
 *         else:
 *             self.processID_branch.SetAddress(<void*>&self.processID_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvChi2"
 */
  /*else*/ {
    __pyx_v_self->processID_branch->SetAddress(((void *)(&__pyx_v_self->processID_value)));
  }
  __pyx_L462:;

  /* "MuTauTree.pyx":2402
 * 
 *         #print "making pvChi2"
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")             # <<<<<<<<<<<<<<
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 */
  __pyx_v_self->pvChi2_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvChi2);

  /* "MuTauTree.pyx":2404
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvChi2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvChi2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L466_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L466_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2405
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 *             warnings.warn( "MuTauTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvChi2")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvChi2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvChi2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvChi2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2404
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvChi2")
 */
    goto __pyx_L465;
  }

  /* "MuTauTree.pyx":2408
 *             #self.complained.add("pvChi2")
 *         else:
 *             self.pvChi2_branch.SetAddress(<void*>&self.pvChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDX"
 */
  /*else*/ {
    __pyx_v_self->pvChi2_branch->SetAddress(((void *)(&__pyx_v_self->pvChi2_value)));
  }
  __pyx_L465:;

  /* "MuTauTree.pyx":2411
 * 
 *         #print "making pvDX"
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")             # <<<<<<<<<<<<<<
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 */
  __pyx_v_self->pvDX_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvDX);

  /* "MuTauTree.pyx":2413
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDX")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvDX_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L469_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L469_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2414
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 *             warnings.warn( "MuTauTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDX")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvDX_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvDX_d);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvDX_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2414; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2413
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDX")
 */
    goto __pyx_L468;
  }

  /* "MuTauTree.pyx":2417
 *             #self.complained.add("pvDX")
 *         else:
 *             self.pvDX_branch.SetAddress(<void*>&self.pvDX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDY"
 */
  /*else*/ {
    __pyx_v_self->pvDX_branch->SetAddress(((void *)(&__pyx_v_self->pvDX_value)));
  }
  __pyx_L468:;

  /* "MuTauTree.pyx":2420
 * 
 *         #print "making pvDY"
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")             # <<<<<<<<<<<<<<
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 */
  __pyx_v_self->pvDY_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvDY);

  /* "MuTauTree.pyx":2422
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvDY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L472_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L472_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2423
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 *             warnings.warn( "MuTauTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDY")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvDY_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvDY_d);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvDY_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2422
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDY")
 */
    goto __pyx_L471;
  }

  /* "MuTauTree.pyx":2426
 *             #self.complained.add("pvDY")
 *         else:
 *             self.pvDY_branch.SetAddress(<void*>&self.pvDY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDZ"
 */
  /*else*/ {
    __pyx_v_self->pvDY_branch->SetAddress(((void *)(&__pyx_v_self->pvDY_value)));
  }
  __pyx_L471:;

  /* "MuTauTree.pyx":2429
 * 
 *         #print "making pvDZ"
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")             # <<<<<<<<<<<<<<
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 */
  __pyx_v_self->pvDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvDZ);

  /* "MuTauTree.pyx":2431
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvDZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L475_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L475_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2432
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 *             warnings.warn( "MuTauTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDZ")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvDZ_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvDZ_d);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvDZ_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2431
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDZ")
 */
    goto __pyx_L474;
  }

  /* "MuTauTree.pyx":2435
 *             #self.complained.add("pvDZ")
 *         else:
 *             self.pvDZ_branch.SetAddress(<void*>&self.pvDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvIsFake"
 */
  /*else*/ {
    __pyx_v_self->pvDZ_branch->SetAddress(((void *)(&__pyx_v_self->pvDZ_value)));
  }
  __pyx_L474:;

  /* "MuTauTree.pyx":2438
 * 
 *         #print "making pvIsFake"
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")             # <<<<<<<<<<<<<<
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 */
  __pyx_v_self->pvIsFake_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvIsFake);

  /* "MuTauTree.pyx":2440
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsFake")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvIsFake_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L478_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L478_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2441
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 *             warnings.warn( "MuTauTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsFake")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvIsFa);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvIsFa);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvIsFa);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2440
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsFake")
 */
    goto __pyx_L477;
  }

  /* "MuTauTree.pyx":2444
 *             #self.complained.add("pvIsFake")
 *         else:
 *             self.pvIsFake_branch.SetAddress(<void*>&self.pvIsFake_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvIsValid"
 */
  /*else*/ {
    __pyx_v_self->pvIsFake_branch->SetAddress(((void *)(&__pyx_v_self->pvIsFake_value)));
  }
  __pyx_L477:;

  /* "MuTauTree.pyx":2447
 * 
 *         #print "making pvIsValid"
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")             # <<<<<<<<<<<<<<
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 */
  __pyx_v_self->pvIsValid_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvIsValid);

  /* "MuTauTree.pyx":2449
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsValid")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvIsValid_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L481_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L481_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2450
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 *             warnings.warn( "MuTauTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsValid")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvIsVa);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvIsVa);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvIsVa);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2449
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsValid")
 */
    goto __pyx_L480;
  }

  /* "MuTauTree.pyx":2453
 *             #self.complained.add("pvIsValid")
 *         else:
 *             self.pvIsValid_branch.SetAddress(<void*>&self.pvIsValid_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvNormChi2"
 */
  /*else*/ {
    __pyx_v_self->pvIsValid_branch->SetAddress(((void *)(&__pyx_v_self->pvIsValid_value)));
  }
  __pyx_L480:;

  /* "MuTauTree.pyx":2456
 * 
 *         #print "making pvNormChi2"
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")             # <<<<<<<<<<<<<<
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 */
  __pyx_v_self->pvNormChi2_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvNormChi2);

  /* "MuTauTree.pyx":2458
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvNormChi2")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvNormChi2_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L484_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L484_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2459
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 *             warnings.warn( "MuTauTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvNormChi2")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvNorm);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvNorm);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvNorm);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2458
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvNormChi2")
 */
    goto __pyx_L483;
  }

  /* "MuTauTree.pyx":2462
 *             #self.complained.add("pvNormChi2")
 *         else:
 *             self.pvNormChi2_branch.SetAddress(<void*>&self.pvNormChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvRho"
 */
  /*else*/ {
    __pyx_v_self->pvNormChi2_branch->SetAddress(((void *)(&__pyx_v_self->pvNormChi2_value)));
  }
  __pyx_L483:;

  /* "MuTauTree.pyx":2465
 * 
 *         #print "making pvRho"
 *         self.pvRho_branch = the_tree.GetBranch("pvRho")             # <<<<<<<<<<<<<<
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":
 */
  __pyx_v_self->pvRho_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvRho);

  /* "MuTauTree.pyx":2467
 *         self.pvRho_branch = the_tree.GetBranch("pvRho")
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvRho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvRho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L487_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L487_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2468
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":
 *             warnings.warn( "MuTauTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvRho")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvRho);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvRho);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvRho);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2467
 *         self.pvRho_branch = the_tree.GetBranch("pvRho")
 *         #if not self.pvRho_branch and "pvRho" not in self.complained:
 *         if not self.pvRho_branch and "pvRho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvRho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvRho")
 */
    goto __pyx_L486;
  }

  /* "MuTauTree.pyx":2471
 *             #self.complained.add("pvRho")
 *         else:
 *             self.pvRho_branch.SetAddress(<void*>&self.pvRho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvX"
 */
  /*else*/ {
    __pyx_v_self->pvRho_branch->SetAddress(((void *)(&__pyx_v_self->pvRho_value)));
  }
  __pyx_L486:;

  /* "MuTauTree.pyx":2474
 * 
 *         #print "making pvX"
 *         self.pvX_branch = the_tree.GetBranch("pvX")             # <<<<<<<<<<<<<<
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 */
  __pyx_v_self->pvX_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvX);

  /* "MuTauTree.pyx":2476
 *         self.pvX_branch = the_tree.GetBranch("pvX")
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvX")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvX_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L490_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L490_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2477
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 *             warnings.warn( "MuTauTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvX")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvX_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvX_do);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvX_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2476
 *         self.pvX_branch = the_tree.GetBranch("pvX")
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvX")
 */
    goto __pyx_L489;
  }

  /* "MuTauTree.pyx":2480
 *             #self.complained.add("pvX")
 *         else:
 *             self.pvX_branch.SetAddress(<void*>&self.pvX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvY"
 */
  /*else*/ {
    __pyx_v_self->pvX_branch->SetAddress(((void *)(&__pyx_v_self->pvX_value)));
  }
  __pyx_L489:;

  /* "MuTauTree.pyx":2483
 * 
 *         #print "making pvY"
 *         self.pvY_branch = the_tree.GetBranch("pvY")             # <<<<<<<<<<<<<<
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 */
  __pyx_v_self->pvY_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvY);

  /* "MuTauTree.pyx":2485
 *         self.pvY_branch = the_tree.GetBranch("pvY")
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L493_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L493_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2486
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 *             warnings.warn( "MuTauTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvY")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvY_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvY_do);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvY_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2485
 *         self.pvY_branch = the_tree.GetBranch("pvY")
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvY")
 */
    goto __pyx_L492;
  }

  /* "MuTauTree.pyx":2489
 *             #self.complained.add("pvY")
 *         else:
 *             self.pvY_branch.SetAddress(<void*>&self.pvY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvZ"
 */
  /*else*/ {
    __pyx_v_self->pvY_branch->SetAddress(((void *)(&__pyx_v_self->pvY_value)));
  }
  __pyx_L492:;

  /* "MuTauTree.pyx":2492
 * 
 *         #print "making pvZ"
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")             # <<<<<<<<<<<<<<
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 */
  __pyx_v_self->pvZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvZ);

  /* "MuTauTree.pyx":2494
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L496_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L496_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2495
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 *             warnings.warn( "MuTauTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvZ")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvZ_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvZ_do);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvZ_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2494
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvZ")
 */
    goto __pyx_L495;
  }

  /* "MuTauTree.pyx":2498
 *             #self.complained.add("pvZ")
 *         else:
 *             self.pvZ_branch.SetAddress(<void*>&self.pvZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvndof"
 */
  /*else*/ {
    __pyx_v_self->pvZ_branch->SetAddress(((void *)(&__pyx_v_self->pvZ_value)));
  }
  __pyx_L495:;

  /* "MuTauTree.pyx":2501
 * 
 *         #print "making pvndof"
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")             # <<<<<<<<<<<<<<
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 */
  __pyx_v_self->pvndof_branch = __pyx_v_the_tree->GetBranch(__pyx_k_pvndof);

  /* "MuTauTree.pyx":2503
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvndof")
 */
  __pyx_t_2 = ((!(__pyx_v_self->pvndof_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L499_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L499_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2504
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 *             warnings.warn( "MuTauTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvndof")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_pvndof);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_pvndof);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_pvndof);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2503
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvndof")
 */
    goto __pyx_L498;
  }

  /* "MuTauTree.pyx":2507
 *             #self.complained.add("pvndof")
 *         else:
 *             self.pvndof_branch.SetAddress(<void*>&self.pvndof_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making recoilDaught"
 */
  /*else*/ {
    __pyx_v_self->pvndof_branch->SetAddress(((void *)(&__pyx_v_self->pvndof_value)));
  }
  __pyx_L498:;

  /* "MuTauTree.pyx":2510
 * 
 *         #print "making recoilDaught"
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")             # <<<<<<<<<<<<<<
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 */
  __pyx_v_self->recoilDaught_branch = __pyx_v_the_tree->GetBranch(__pyx_k_recoilDaught);

  /* "MuTauTree.pyx":2512
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilDaught")
 */
  __pyx_t_2 = ((!(__pyx_v_self->recoilDaught_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L502_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L502_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2513
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 *             warnings.warn( "MuTauTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilDaught")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_recoil);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_recoil);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_recoil);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2512
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilDaught")
 */
    goto __pyx_L501;
  }

  /* "MuTauTree.pyx":2516
 *             #self.complained.add("recoilDaught")
 *         else:
 *             self.recoilDaught_branch.SetAddress(<void*>&self.recoilDaught_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making recoilWithMet"
 */
  /*else*/ {
    __pyx_v_self->recoilDaught_branch->SetAddress(((void *)(&__pyx_v_self->recoilDaught_value)));
  }
  __pyx_L501:;

  /* "MuTauTree.pyx":2519
 * 
 *         #print "making recoilWithMet"
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")             # <<<<<<<<<<<<<<
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 */
  __pyx_v_self->recoilWithMet_branch = __pyx_v_the_tree->GetBranch(__pyx_k_recoilWithMet);

  /* "MuTauTree.pyx":2521
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilWithMet")
 */
  __pyx_t_2 = ((!(__pyx_v_self->recoilWithMet_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L505_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L505_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2522
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 *             warnings.warn( "MuTauTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilWithMet")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_recoil_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_recoil_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_recoil_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2521
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilWithMet")
 */
    goto __pyx_L504;
  }

  /* "MuTauTree.pyx":2525
 *             #self.complained.add("recoilWithMet")
 *         else:
 *             self.recoilWithMet_branch.SetAddress(<void*>&self.recoilWithMet_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making rho"
 */
  /*else*/ {
    __pyx_v_self->recoilWithMet_branch->SetAddress(((void *)(&__pyx_v_self->recoilWithMet_value)));
  }
  __pyx_L504:;

  /* "MuTauTree.pyx":2528
 * 
 *         #print "making rho"
 *         self.rho_branch = the_tree.GetBranch("rho")             # <<<<<<<<<<<<<<
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 */
  __pyx_v_self->rho_branch = __pyx_v_the_tree->GetBranch(__pyx_k_rho);

  /* "MuTauTree.pyx":2530
 *         self.rho_branch = the_tree.GetBranch("rho")
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("rho")
 */
  __pyx_t_2 = ((!(__pyx_v_self->rho_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L508_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L508_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2531
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 *             warnings.warn( "MuTauTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("rho")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_rho_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_rho_do);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_rho_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2530
 *         self.rho_branch = the_tree.GetBranch("rho")
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("rho")
 */
    goto __pyx_L507;
  }

  /* "MuTauTree.pyx":2534
 *             #self.complained.add("rho")
 *         else:
 *             self.rho_branch.SetAddress(<void*>&self.rho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making run"
 */
  /*else*/ {
    __pyx_v_self->rho_branch->SetAddress(((void *)(&__pyx_v_self->rho_value)));
  }
  __pyx_L507:;

  /* "MuTauTree.pyx":2537
 * 
 *         #print "making run"
 *         self.run_branch = the_tree.GetBranch("run")             # <<<<<<<<<<<<<<
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 */
  __pyx_v_self->run_branch = __pyx_v_the_tree->GetBranch(__pyx_k_run);

  /* "MuTauTree.pyx":2539
 *         self.run_branch = the_tree.GetBranch("run")
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("run")
 */
  __pyx_t_2 = ((!(__pyx_v_self->run_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L511_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L511_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2540
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 *             warnings.warn( "MuTauTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("run")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_run_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_run_do);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_run_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2539
 *         self.run_branch = the_tree.GetBranch("run")
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("run")
 */
    goto __pyx_L510;
  }

  /* "MuTauTree.pyx":2543
 *             #self.complained.add("run")
 *         else:
 *             self.run_branch.SetAddress(<void*>&self.run_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEGroup"
 */
  /*else*/ {
    __pyx_v_self->run_branch->SetAddress(((void *)(&__pyx_v_self->run_value)));
  }
  __pyx_L510:;

  /* "MuTauTree.pyx":2546
 * 
 *         #print "making singleEGroup"
 *         self.singleEGroup_branch = the_tree.GetBranch("singleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":
 */
  __pyx_v_self->singleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleEGroup);

  /* "MuTauTree.pyx":2548
 *         self.singleEGroup_branch = the_tree.GetBranch("singleEGroup")
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleEGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L514_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L514_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2549
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2548
 *         self.singleEGroup_branch = the_tree.GetBranch("singleEGroup")
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEGroup")
 */
    goto __pyx_L513;
  }

  /* "MuTauTree.pyx":2552
 *             #self.complained.add("singleEGroup")
 *         else:
 *             self.singleEGroup_branch.SetAddress(<void*>&self.singleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPass"
 */
  /*else*/ {
    __pyx_v_self->singleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleEGroup_value)));
  }
  __pyx_L513:;

  /* "MuTauTree.pyx":2555
 * 
 *         #print "making singleEPass"
 *         self.singleEPass_branch = the_tree.GetBranch("singleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":
 */
  __pyx_v_self->singleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleEPass);

  /* "MuTauTree.pyx":2557
 *         self.singleEPass_branch = the_tree.GetBranch("singleEPass")
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleEPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L517_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L517_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2558
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":
 *             warnings.warn( "MuTauTree: Expected branch singleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2557
 *         self.singleEPass_branch = the_tree.GetBranch("singleEPass")
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPass")
 */
    goto __pyx_L516;
  }

  /* "MuTauTree.pyx":2561
 *             #self.complained.add("singleEPass")
 *         else:
 *             self.singleEPass_branch.SetAddress(<void*>&self.singleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPrescale"
 */
  /*else*/ {
    __pyx_v_self->singleEPass_branch->SetAddress(((void *)(&__pyx_v_self->singleEPass_value)));
  }
  __pyx_L516:;

  /* "MuTauTree.pyx":2564
 * 
 *         #print "making singleEPrescale"
 *         self.singleEPrescale_branch = the_tree.GetBranch("singleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":
 */
  __pyx_v_self->singleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleEPrescale);

  /* "MuTauTree.pyx":2566
 *         self.singleEPrescale_branch = the_tree.GetBranch("singleEPrescale")
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleEPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L520_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L520_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2567
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2566
 *         self.singleEPrescale_branch = the_tree.GetBranch("singleEPrescale")
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPrescale")
 */
    goto __pyx_L519;
  }

  /* "MuTauTree.pyx":2570
 *             #self.complained.add("singleEPrescale")
 *         else:
 *             self.singleEPrescale_branch.SetAddress(<void*>&self.singleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleESingleMuGroup"
 */
  /*else*/ {
    __pyx_v_self->singleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleEPrescale_value)));
  }
  __pyx_L519:;

  /* "MuTauTree.pyx":2573
 * 
 *         #print "making singleESingleMuGroup"
 *         self.singleESingleMuGroup_branch = the_tree.GetBranch("singleESingleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleESingleMuGroup_branch and "singleESingleMuGroup" not in self.complained:
 *         if not self.singleESingleMuGroup_branch and "singleESingleMuGroup":
 */
  __pyx_v_self->singleESingleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleESingleMuGroup);

  /* "MuTauTree.pyx":2575
 *         self.singleESingleMuGroup_branch = the_tree.GetBranch("singleESingleMuGroup")
 *         #if not self.singleESingleMuGroup_branch and "singleESingleMuGroup" not in self.complained:
 *         if not self.singleESingleMuGroup_branch and "singleESingleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleESingleMuGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleESingleMuGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L523_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L523_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2576
 *         #if not self.singleESingleMuGroup_branch and "singleESingleMuGroup" not in self.complained:
 *         if not self.singleESingleMuGroup_branch and "singleESingleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleESingleMuGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2575
 *         self.singleESingleMuGroup_branch = the_tree.GetBranch("singleESingleMuGroup")
 *         #if not self.singleESingleMuGroup_branch and "singleESingleMuGroup" not in self.complained:
 *         if not self.singleESingleMuGroup_branch and "singleESingleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleESingleMuGroup")
 */
    goto __pyx_L522;
  }

  /* "MuTauTree.pyx":2579
 *             #self.complained.add("singleESingleMuGroup")
 *         else:
 *             self.singleESingleMuGroup_branch.SetAddress(<void*>&self.singleESingleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleESingleMuPass"
 */
  /*else*/ {
    __pyx_v_self->singleESingleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleESingleMuGroup_value)));
  }
  __pyx_L522:;

  /* "MuTauTree.pyx":2582
 * 
 *         #print "making singleESingleMuPass"
 *         self.singleESingleMuPass_branch = the_tree.GetBranch("singleESingleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleESingleMuPass_branch and "singleESingleMuPass" not in self.complained:
 *         if not self.singleESingleMuPass_branch and "singleESingleMuPass":
 */
  __pyx_v_self->singleESingleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleESingleMuPass);

  /* "MuTauTree.pyx":2584
 *         self.singleESingleMuPass_branch = the_tree.GetBranch("singleESingleMuPass")
 *         #if not self.singleESingleMuPass_branch and "singleESingleMuPass" not in self.complained:
 *         if not self.singleESingleMuPass_branch and "singleESingleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleESingleMuPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleESingleMuPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L526_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L526_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2585
 *         #if not self.singleESingleMuPass_branch and "singleESingleMuPass" not in self.complained:
 *         if not self.singleESingleMuPass_branch and "singleESingleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleESingleMuPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2584
 *         self.singleESingleMuPass_branch = the_tree.GetBranch("singleESingleMuPass")
 *         #if not self.singleESingleMuPass_branch and "singleESingleMuPass" not in self.complained:
 *         if not self.singleESingleMuPass_branch and "singleESingleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleESingleMuPass")
 */
    goto __pyx_L525;
  }

  /* "MuTauTree.pyx":2588
 *             #self.complained.add("singleESingleMuPass")
 *         else:
 *             self.singleESingleMuPass_branch.SetAddress(<void*>&self.singleESingleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleESingleMuPrescale"
 */
  /*else*/ {
    __pyx_v_self->singleESingleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->singleESingleMuPass_value)));
  }
  __pyx_L525:;

  /* "MuTauTree.pyx":2591
 * 
 *         #print "making singleESingleMuPrescale"
 *         self.singleESingleMuPrescale_branch = the_tree.GetBranch("singleESingleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale" not in self.complained:
 *         if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale":
 */
  __pyx_v_self->singleESingleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleESingleMuPrescale);

  /* "MuTauTree.pyx":2593
 *         self.singleESingleMuPrescale_branch = the_tree.GetBranch("singleESingleMuPrescale")
 *         #if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale" not in self.complained:
 *         if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleESingleMuPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleESingleMuPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L529_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L529_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2594
 *         #if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale" not in self.complained:
 *         if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleESingleMuPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2593
 *         self.singleESingleMuPrescale_branch = the_tree.GetBranch("singleESingleMuPrescale")
 *         #if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale" not in self.complained:
 *         if not self.singleESingleMuPrescale_branch and "singleESingleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleESingleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleESingleMuPrescale")
 */
    goto __pyx_L528;
  }

  /* "MuTauTree.pyx":2597
 *             #self.complained.add("singleESingleMuPrescale")
 *         else:
 *             self.singleESingleMuPrescale_branch.SetAddress(<void*>&self.singleESingleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE_leg1Group"
 */
  /*else*/ {
    __pyx_v_self->singleESingleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleESingleMuPrescale_value)));
  }
  __pyx_L528:;

  /* "MuTauTree.pyx":2600
 * 
 *         #print "making singleE_leg1Group"
 *         self.singleE_leg1Group_branch = the_tree.GetBranch("singleE_leg1Group")             # <<<<<<<<<<<<<<
 *         #if not self.singleE_leg1Group_branch and "singleE_leg1Group" not in self.complained:
 *         if not self.singleE_leg1Group_branch and "singleE_leg1Group":
 */
  __pyx_v_self->singleE_leg1Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleE_leg1Group);

  /* "MuTauTree.pyx":2602
 *         self.singleE_leg1Group_branch = the_tree.GetBranch("singleE_leg1Group")
 *         #if not self.singleE_leg1Group_branch and "singleE_leg1Group" not in self.complained:
 *         if not self.singleE_leg1Group_branch and "singleE_leg1Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg1Group")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE_leg1Group_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L532_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L532_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2603
 *         #if not self.singleE_leg1Group_branch and "singleE_leg1Group" not in self.complained:
 *         if not self.singleE_leg1Group_branch and "singleE_leg1Group":
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE_leg1Group")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_7);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_7);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_7);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2602
 *         self.singleE_leg1Group_branch = the_tree.GetBranch("singleE_leg1Group")
 *         #if not self.singleE_leg1Group_branch and "singleE_leg1Group" not in self.complained:
 *         if not self.singleE_leg1Group_branch and "singleE_leg1Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg1Group")
 */
    goto __pyx_L531;
  }

  /* "MuTauTree.pyx":2606
 *             #self.complained.add("singleE_leg1Group")
 *         else:
 *             self.singleE_leg1Group_branch.SetAddress(<void*>&self.singleE_leg1Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE_leg1Pass"
 */
  /*else*/ {
    __pyx_v_self->singleE_leg1Group_branch->SetAddress(((void *)(&__pyx_v_self->singleE_leg1Group_value)));
  }
  __pyx_L531:;

  /* "MuTauTree.pyx":2609
 * 
 *         #print "making singleE_leg1Pass"
 *         self.singleE_leg1Pass_branch = the_tree.GetBranch("singleE_leg1Pass")             # <<<<<<<<<<<<<<
 *         #if not self.singleE_leg1Pass_branch and "singleE_leg1Pass" not in self.complained:
 *         if not self.singleE_leg1Pass_branch and "singleE_leg1Pass":
 */
  __pyx_v_self->singleE_leg1Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleE_leg1Pass);

  /* "MuTauTree.pyx":2611
 *         self.singleE_leg1Pass_branch = the_tree.GetBranch("singleE_leg1Pass")
 *         #if not self.singleE_leg1Pass_branch and "singleE_leg1Pass" not in self.complained:
 *         if not self.singleE_leg1Pass_branch and "singleE_leg1Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg1Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE_leg1Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L535_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L535_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2612
 *         #if not self.singleE_leg1Pass_branch and "singleE_leg1Pass" not in self.complained:
 *         if not self.singleE_leg1Pass_branch and "singleE_leg1Pass":
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE_leg1Pass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_8);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_8);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_8);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2611
 *         self.singleE_leg1Pass_branch = the_tree.GetBranch("singleE_leg1Pass")
 *         #if not self.singleE_leg1Pass_branch and "singleE_leg1Pass" not in self.complained:
 *         if not self.singleE_leg1Pass_branch and "singleE_leg1Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg1Pass")
 */
    goto __pyx_L534;
  }

  /* "MuTauTree.pyx":2615
 *             #self.complained.add("singleE_leg1Pass")
 *         else:
 *             self.singleE_leg1Pass_branch.SetAddress(<void*>&self.singleE_leg1Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE_leg1Prescale"
 */
  /*else*/ {
    __pyx_v_self->singleE_leg1Pass_branch->SetAddress(((void *)(&__pyx_v_self->singleE_leg1Pass_value)));
  }
  __pyx_L534:;

  /* "MuTauTree.pyx":2618
 * 
 *         #print "making singleE_leg1Prescale"
 *         self.singleE_leg1Prescale_branch = the_tree.GetBranch("singleE_leg1Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale" not in self.complained:
 *         if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale":
 */
  __pyx_v_self->singleE_leg1Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleE_leg1Prescale);

  /* "MuTauTree.pyx":2620
 *         self.singleE_leg1Prescale_branch = the_tree.GetBranch("singleE_leg1Prescale")
 *         #if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale" not in self.complained:
 *         if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg1Prescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE_leg1Prescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L538_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L538_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2621
 *         #if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale" not in self.complained:
 *         if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale":
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE_leg1Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_9);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_9);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_9);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2620
 *         self.singleE_leg1Prescale_branch = the_tree.GetBranch("singleE_leg1Prescale")
 *         #if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale" not in self.complained:
 *         if not self.singleE_leg1Prescale_branch and "singleE_leg1Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg1Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg1Prescale")
 */
    goto __pyx_L537;
  }

  /* "MuTauTree.pyx":2624
 *             #self.complained.add("singleE_leg1Prescale")
 *         else:
 *             self.singleE_leg1Prescale_branch.SetAddress(<void*>&self.singleE_leg1Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE_leg2Group"
 */
  /*else*/ {
    __pyx_v_self->singleE_leg1Prescale_branch->SetAddress(((void *)(&__pyx_v_self->singleE_leg1Prescale_value)));
  }
  __pyx_L537:;

  /* "MuTauTree.pyx":2627
 * 
 *         #print "making singleE_leg2Group"
 *         self.singleE_leg2Group_branch = the_tree.GetBranch("singleE_leg2Group")             # <<<<<<<<<<<<<<
 *         #if not self.singleE_leg2Group_branch and "singleE_leg2Group" not in self.complained:
 *         if not self.singleE_leg2Group_branch and "singleE_leg2Group":
 */
  __pyx_v_self->singleE_leg2Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleE_leg2Group);

  /* "MuTauTree.pyx":2629
 *         self.singleE_leg2Group_branch = the_tree.GetBranch("singleE_leg2Group")
 *         #if not self.singleE_leg2Group_branch and "singleE_leg2Group" not in self.complained:
 *         if not self.singleE_leg2Group_branch and "singleE_leg2Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg2Group")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE_leg2Group_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L541_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L541_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2630
 *         #if not self.singleE_leg2Group_branch and "singleE_leg2Group" not in self.complained:
 *         if not self.singleE_leg2Group_branch and "singleE_leg2Group":
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE_leg2Group")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_10);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_10);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_10);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2629
 *         self.singleE_leg2Group_branch = the_tree.GetBranch("singleE_leg2Group")
 *         #if not self.singleE_leg2Group_branch and "singleE_leg2Group" not in self.complained:
 *         if not self.singleE_leg2Group_branch and "singleE_leg2Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg2Group")
 */
    goto __pyx_L540;
  }

  /* "MuTauTree.pyx":2633
 *             #self.complained.add("singleE_leg2Group")
 *         else:
 *             self.singleE_leg2Group_branch.SetAddress(<void*>&self.singleE_leg2Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE_leg2Pass"
 */
  /*else*/ {
    __pyx_v_self->singleE_leg2Group_branch->SetAddress(((void *)(&__pyx_v_self->singleE_leg2Group_value)));
  }
  __pyx_L540:;

  /* "MuTauTree.pyx":2636
 * 
 *         #print "making singleE_leg2Pass"
 *         self.singleE_leg2Pass_branch = the_tree.GetBranch("singleE_leg2Pass")             # <<<<<<<<<<<<<<
 *         #if not self.singleE_leg2Pass_branch and "singleE_leg2Pass" not in self.complained:
 *         if not self.singleE_leg2Pass_branch and "singleE_leg2Pass":
 */
  __pyx_v_self->singleE_leg2Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleE_leg2Pass);

  /* "MuTauTree.pyx":2638
 *         self.singleE_leg2Pass_branch = the_tree.GetBranch("singleE_leg2Pass")
 *         #if not self.singleE_leg2Pass_branch and "singleE_leg2Pass" not in self.complained:
 *         if not self.singleE_leg2Pass_branch and "singleE_leg2Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg2Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE_leg2Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L544_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L544_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2639
 *         #if not self.singleE_leg2Pass_branch and "singleE_leg2Pass" not in self.complained:
 *         if not self.singleE_leg2Pass_branch and "singleE_leg2Pass":
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE_leg2Pass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_11);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_11);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_11);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2638
 *         self.singleE_leg2Pass_branch = the_tree.GetBranch("singleE_leg2Pass")
 *         #if not self.singleE_leg2Pass_branch and "singleE_leg2Pass" not in self.complained:
 *         if not self.singleE_leg2Pass_branch and "singleE_leg2Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg2Pass")
 */
    goto __pyx_L543;
  }

  /* "MuTauTree.pyx":2642
 *             #self.complained.add("singleE_leg2Pass")
 *         else:
 *             self.singleE_leg2Pass_branch.SetAddress(<void*>&self.singleE_leg2Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleE_leg2Prescale"
 */
  /*else*/ {
    __pyx_v_self->singleE_leg2Pass_branch->SetAddress(((void *)(&__pyx_v_self->singleE_leg2Pass_value)));
  }
  __pyx_L543:;

  /* "MuTauTree.pyx":2645
 * 
 *         #print "making singleE_leg2Prescale"
 *         self.singleE_leg2Prescale_branch = the_tree.GetBranch("singleE_leg2Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale" not in self.complained:
 *         if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale":
 */
  __pyx_v_self->singleE_leg2Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleE_leg2Prescale);

  /* "MuTauTree.pyx":2647
 *         self.singleE_leg2Prescale_branch = the_tree.GetBranch("singleE_leg2Prescale")
 *         #if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale" not in self.complained:
 *         if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg2Prescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleE_leg2Prescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L547_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L547_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2648
 *         #if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale" not in self.complained:
 *         if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale":
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleE_leg2Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_12);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_12);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_12);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2647
 *         self.singleE_leg2Prescale_branch = the_tree.GetBranch("singleE_leg2Prescale")
 *         #if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale" not in self.complained:
 *         if not self.singleE_leg2Prescale_branch and "singleE_leg2Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleE_leg2Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleE_leg2Prescale")
 */
    goto __pyx_L546;
  }

  /* "MuTauTree.pyx":2651
 *             #self.complained.add("singleE_leg2Prescale")
 *         else:
 *             self.singleE_leg2Prescale_branch.SetAddress(<void*>&self.singleE_leg2Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuGroup"
 */
  /*else*/ {
    __pyx_v_self->singleE_leg2Prescale_branch->SetAddress(((void *)(&__pyx_v_self->singleE_leg2Prescale_value)));
  }
  __pyx_L546:;

  /* "MuTauTree.pyx":2654
 * 
 *         #print "making singleMuGroup"
 *         self.singleMuGroup_branch = the_tree.GetBranch("singleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":
 */
  __pyx_v_self->singleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMuGroup);

  /* "MuTauTree.pyx":2656
 *         self.singleMuGroup_branch = the_tree.GetBranch("singleMuGroup")
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMuGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L550_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L550_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2657
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_13);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_13);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_13);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2656
 *         self.singleMuGroup_branch = the_tree.GetBranch("singleMuGroup")
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuGroup")
 */
    goto __pyx_L549;
  }

  /* "MuTauTree.pyx":2660
 *             #self.complained.add("singleMuGroup")
 *         else:
 *             self.singleMuGroup_branch.SetAddress(<void*>&self.singleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuPass"
 */
  /*else*/ {
    __pyx_v_self->singleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleMuGroup_value)));
  }
  __pyx_L549:;

  /* "MuTauTree.pyx":2663
 * 
 *         #print "making singleMuPass"
 *         self.singleMuPass_branch = the_tree.GetBranch("singleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":
 */
  __pyx_v_self->singleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMuPass);

  /* "MuTauTree.pyx":2665
 *         self.singleMuPass_branch = the_tree.GetBranch("singleMuPass")
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMuPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L553_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L553_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2666
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch singleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_14);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_14);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_14);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2665
 *         self.singleMuPass_branch = the_tree.GetBranch("singleMuPass")
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuPass")
 */
    goto __pyx_L552;
  }

  /* "MuTauTree.pyx":2669
 *             #self.complained.add("singleMuPass")
 *         else:
 *             self.singleMuPass_branch.SetAddress(<void*>&self.singleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuPrescale"
 */
  /*else*/ {
    __pyx_v_self->singleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->singleMuPass_value)));
  }
  __pyx_L552:;

  /* "MuTauTree.pyx":2672
 * 
 *         #print "making singleMuPrescale"
 *         self.singleMuPrescale_branch = the_tree.GetBranch("singleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":
 */
  __pyx_v_self->singleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMuPrescale);

  /* "MuTauTree.pyx":2674
 *         self.singleMuPrescale_branch = the_tree.GetBranch("singleMuPrescale")
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMuPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L556_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L556_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2675
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_15);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_15);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_15);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2674
 *         self.singleMuPrescale_branch = the_tree.GetBranch("singleMuPrescale")
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuPrescale")
 */
    goto __pyx_L555;
  }

  /* "MuTauTree.pyx":2678
 *             #self.complained.add("singleMuPrescale")
 *         else:
 *             self.singleMuPrescale_branch.SetAddress(<void*>&self.singleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuSingleEGroup"
 */
  /*else*/ {
    __pyx_v_self->singleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMuPrescale_value)));
  }
  __pyx_L555:;

  /* "MuTauTree.pyx":2681
 * 
 *         #print "making singleMuSingleEGroup"
 *         self.singleMuSingleEGroup_branch = the_tree.GetBranch("singleMuSingleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup" not in self.complained:
 *         if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup":
 */
  __pyx_v_self->singleMuSingleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMuSingleEGroup);

  /* "MuTauTree.pyx":2683
 *         self.singleMuSingleEGroup_branch = the_tree.GetBranch("singleMuSingleEGroup")
 *         #if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup" not in self.complained:
 *         if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuSingleEGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMuSingleEGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L559_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L559_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2684
 *         #if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup" not in self.complained:
 *         if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuSingleEGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_16);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_16);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_16);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2683
 *         self.singleMuSingleEGroup_branch = the_tree.GetBranch("singleMuSingleEGroup")
 *         #if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup" not in self.complained:
 *         if not self.singleMuSingleEGroup_branch and "singleMuSingleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuSingleEGroup")
 */
    goto __pyx_L558;
  }

  /* "MuTauTree.pyx":2687
 *             #self.complained.add("singleMuSingleEGroup")
 *         else:
 *             self.singleMuSingleEGroup_branch.SetAddress(<void*>&self.singleMuSingleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuSingleEPass"
 */
  /*else*/ {
    __pyx_v_self->singleMuSingleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleMuSingleEGroup_value)));
  }
  __pyx_L558:;

  /* "MuTauTree.pyx":2690
 * 
 *         #print "making singleMuSingleEPass"
 *         self.singleMuSingleEPass_branch = the_tree.GetBranch("singleMuSingleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuSingleEPass_branch and "singleMuSingleEPass" not in self.complained:
 *         if not self.singleMuSingleEPass_branch and "singleMuSingleEPass":
 */
  __pyx_v_self->singleMuSingleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMuSingleEPass);

  /* "MuTauTree.pyx":2692
 *         self.singleMuSingleEPass_branch = the_tree.GetBranch("singleMuSingleEPass")
 *         #if not self.singleMuSingleEPass_branch and "singleMuSingleEPass" not in self.complained:
 *         if not self.singleMuSingleEPass_branch and "singleMuSingleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuSingleEPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMuSingleEPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L562_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L562_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2693
 *         #if not self.singleMuSingleEPass_branch and "singleMuSingleEPass" not in self.complained:
 *         if not self.singleMuSingleEPass_branch and "singleMuSingleEPass":
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuSingleEPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_17);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_17);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_17);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2692
 *         self.singleMuSingleEPass_branch = the_tree.GetBranch("singleMuSingleEPass")
 *         #if not self.singleMuSingleEPass_branch and "singleMuSingleEPass" not in self.complained:
 *         if not self.singleMuSingleEPass_branch and "singleMuSingleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuSingleEPass")
 */
    goto __pyx_L561;
  }

  /* "MuTauTree.pyx":2696
 *             #self.complained.add("singleMuSingleEPass")
 *         else:
 *             self.singleMuSingleEPass_branch.SetAddress(<void*>&self.singleMuSingleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuSingleEPrescale"
 */
  /*else*/ {
    __pyx_v_self->singleMuSingleEPass_branch->SetAddress(((void *)(&__pyx_v_self->singleMuSingleEPass_value)));
  }
  __pyx_L561:;

  /* "MuTauTree.pyx":2699
 * 
 *         #print "making singleMuSingleEPrescale"
 *         self.singleMuSingleEPrescale_branch = the_tree.GetBranch("singleMuSingleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale" not in self.complained:
 *         if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale":
 */
  __pyx_v_self->singleMuSingleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMuSingleEPrescale);

  /* "MuTauTree.pyx":2701
 *         self.singleMuSingleEPrescale_branch = the_tree.GetBranch("singleMuSingleEPrescale")
 *         #if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale" not in self.complained:
 *         if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuSingleEPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMuSingleEPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L565_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L565_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2702
 *         #if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale" not in self.complained:
 *         if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuSingleEPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_18);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_18);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_18);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2701
 *         self.singleMuSingleEPrescale_branch = the_tree.GetBranch("singleMuSingleEPrescale")
 *         #if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale" not in self.complained:
 *         if not self.singleMuSingleEPrescale_branch and "singleMuSingleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuSingleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuSingleEPrescale")
 */
    goto __pyx_L564;
  }

  /* "MuTauTree.pyx":2705
 *             #self.complained.add("singleMuSingleEPrescale")
 *         else:
 *             self.singleMuSingleEPrescale_branch.SetAddress(<void*>&self.singleMuSingleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg1Group"
 */
  /*else*/ {
    __pyx_v_self->singleMuSingleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMuSingleEPrescale_value)));
  }
  __pyx_L564:;

  /* "MuTauTree.pyx":2708
 * 
 *         #print "making singleMu_leg1Group"
 *         self.singleMu_leg1Group_branch = the_tree.GetBranch("singleMu_leg1Group")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg1Group_branch and "singleMu_leg1Group" not in self.complained:
 *         if not self.singleMu_leg1Group_branch and "singleMu_leg1Group":
 */
  __pyx_v_self->singleMu_leg1Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg1Group);

  /* "MuTauTree.pyx":2710
 *         self.singleMu_leg1Group_branch = the_tree.GetBranch("singleMu_leg1Group")
 *         #if not self.singleMu_leg1Group_branch and "singleMu_leg1Group" not in self.complained:
 *         if not self.singleMu_leg1Group_branch and "singleMu_leg1Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1Group")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg1Group_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L568_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L568_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2711
 *         #if not self.singleMu_leg1Group_branch and "singleMu_leg1Group" not in self.complained:
 *         if not self.singleMu_leg1Group_branch and "singleMu_leg1Group":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg1Group")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_19);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_19);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_19);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2710
 *         self.singleMu_leg1Group_branch = the_tree.GetBranch("singleMu_leg1Group")
 *         #if not self.singleMu_leg1Group_branch and "singleMu_leg1Group" not in self.complained:
 *         if not self.singleMu_leg1Group_branch and "singleMu_leg1Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1Group")
 */
    goto __pyx_L567;
  }

  /* "MuTauTree.pyx":2714
 *             #self.complained.add("singleMu_leg1Group")
 *         else:
 *             self.singleMu_leg1Group_branch.SetAddress(<void*>&self.singleMu_leg1Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg1Pass"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg1Group_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg1Group_value)));
  }
  __pyx_L567:;

  /* "MuTauTree.pyx":2717
 * 
 *         #print "making singleMu_leg1Pass"
 *         self.singleMu_leg1Pass_branch = the_tree.GetBranch("singleMu_leg1Pass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass" not in self.complained:
 *         if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass":
 */
  __pyx_v_self->singleMu_leg1Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg1Pass);

  /* "MuTauTree.pyx":2719
 *         self.singleMu_leg1Pass_branch = the_tree.GetBranch("singleMu_leg1Pass")
 *         #if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass" not in self.complained:
 *         if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg1Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L571_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L571_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2720
 *         #if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass" not in self.complained:
 *         if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg1Pass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_20);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_20);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_20);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2719
 *         self.singleMu_leg1Pass_branch = the_tree.GetBranch("singleMu_leg1Pass")
 *         #if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass" not in self.complained:
 *         if not self.singleMu_leg1Pass_branch and "singleMu_leg1Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1Pass")
 */
    goto __pyx_L570;
  }

  /* "MuTauTree.pyx":2723
 *             #self.complained.add("singleMu_leg1Pass")
 *         else:
 *             self.singleMu_leg1Pass_branch.SetAddress(<void*>&self.singleMu_leg1Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg1Prescale"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg1Pass_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg1Pass_value)));
  }
  __pyx_L570:;

  /* "MuTauTree.pyx":2726
 * 
 *         #print "making singleMu_leg1Prescale"
 *         self.singleMu_leg1Prescale_branch = the_tree.GetBranch("singleMu_leg1Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale" not in self.complained:
 *         if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale":
 */
  __pyx_v_self->singleMu_leg1Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg1Prescale);

  /* "MuTauTree.pyx":2728
 *         self.singleMu_leg1Prescale_branch = the_tree.GetBranch("singleMu_leg1Prescale")
 *         #if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale" not in self.complained:
 *         if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1Prescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg1Prescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L574_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L574_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2729
 *         #if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale" not in self.complained:
 *         if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg1Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_21);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_21);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_21);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2728
 *         self.singleMu_leg1Prescale_branch = the_tree.GetBranch("singleMu_leg1Prescale")
 *         #if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale" not in self.complained:
 *         if not self.singleMu_leg1Prescale_branch and "singleMu_leg1Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1Prescale")
 */
    goto __pyx_L573;
  }

  /* "MuTauTree.pyx":2732
 *             #self.complained.add("singleMu_leg1Prescale")
 *         else:
 *             self.singleMu_leg1Prescale_branch.SetAddress(<void*>&self.singleMu_leg1Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg1_noisoGroup"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg1Prescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg1Prescale_value)));
  }
  __pyx_L573:;

  /* "MuTauTree.pyx":2735
 * 
 *         #print "making singleMu_leg1_noisoGroup"
 *         self.singleMu_leg1_noisoGroup_branch = the_tree.GetBranch("singleMu_leg1_noisoGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup":
 */
  __pyx_v_self->singleMu_leg1_noisoGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg1_noisoGroup);

  /* "MuTauTree.pyx":2737
 *         self.singleMu_leg1_noisoGroup_branch = the_tree.GetBranch("singleMu_leg1_noisoGroup")
 *         #if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1_noisoGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg1_noisoGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L577_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L577_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2738
 *         #if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg1_noisoGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_22);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_22);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_22);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2737
 *         self.singleMu_leg1_noisoGroup_branch = the_tree.GetBranch("singleMu_leg1_noisoGroup")
 *         #if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg1_noisoGroup_branch and "singleMu_leg1_noisoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1_noisoGroup")
 */
    goto __pyx_L576;
  }

  /* "MuTauTree.pyx":2741
 *             #self.complained.add("singleMu_leg1_noisoGroup")
 *         else:
 *             self.singleMu_leg1_noisoGroup_branch.SetAddress(<void*>&self.singleMu_leg1_noisoGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg1_noisoPass"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg1_noisoGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg1_noisoGroup_value)));
  }
  __pyx_L576:;

  /* "MuTauTree.pyx":2744
 * 
 *         #print "making singleMu_leg1_noisoPass"
 *         self.singleMu_leg1_noisoPass_branch = the_tree.GetBranch("singleMu_leg1_noisoPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass" not in self.complained:
 *         if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass":
 */
  __pyx_v_self->singleMu_leg1_noisoPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg1_noisoPass);

  /* "MuTauTree.pyx":2746
 *         self.singleMu_leg1_noisoPass_branch = the_tree.GetBranch("singleMu_leg1_noisoPass")
 *         #if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass" not in self.complained:
 *         if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1_noisoPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg1_noisoPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L580_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L580_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2747
 *         #if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass" not in self.complained:
 *         if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg1_noisoPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_23);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_23);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_23);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2746
 *         self.singleMu_leg1_noisoPass_branch = the_tree.GetBranch("singleMu_leg1_noisoPass")
 *         #if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass" not in self.complained:
 *         if not self.singleMu_leg1_noisoPass_branch and "singleMu_leg1_noisoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1_noisoPass")
 */
    goto __pyx_L579;
  }

  /* "MuTauTree.pyx":2750
 *             #self.complained.add("singleMu_leg1_noisoPass")
 *         else:
 *             self.singleMu_leg1_noisoPass_branch.SetAddress(<void*>&self.singleMu_leg1_noisoPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg1_noisoPrescale"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg1_noisoPass_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg1_noisoPass_value)));
  }
  __pyx_L579:;

  /* "MuTauTree.pyx":2753
 * 
 *         #print "making singleMu_leg1_noisoPrescale"
 *         self.singleMu_leg1_noisoPrescale_branch = the_tree.GetBranch("singleMu_leg1_noisoPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale":
 */
  __pyx_v_self->singleMu_leg1_noisoPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg1_noisoPrescale);

  /* "MuTauTree.pyx":2755
 *         self.singleMu_leg1_noisoPrescale_branch = the_tree.GetBranch("singleMu_leg1_noisoPrescale")
 *         #if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1_noisoPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg1_noisoPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L583_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L583_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2756
 *         #if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg1_noisoPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_24);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_24);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_24);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2755
 *         self.singleMu_leg1_noisoPrescale_branch = the_tree.GetBranch("singleMu_leg1_noisoPrescale")
 *         #if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg1_noisoPrescale_branch and "singleMu_leg1_noisoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg1_noisoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg1_noisoPrescale")
 */
    goto __pyx_L582;
  }

  /* "MuTauTree.pyx":2759
 *             #self.complained.add("singleMu_leg1_noisoPrescale")
 *         else:
 *             self.singleMu_leg1_noisoPrescale_branch.SetAddress(<void*>&self.singleMu_leg1_noisoPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg2Group"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg1_noisoPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg1_noisoPrescale_value)));
  }
  __pyx_L582:;

  /* "MuTauTree.pyx":2762
 * 
 *         #print "making singleMu_leg2Group"
 *         self.singleMu_leg2Group_branch = the_tree.GetBranch("singleMu_leg2Group")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg2Group_branch and "singleMu_leg2Group" not in self.complained:
 *         if not self.singleMu_leg2Group_branch and "singleMu_leg2Group":
 */
  __pyx_v_self->singleMu_leg2Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg2Group);

  /* "MuTauTree.pyx":2764
 *         self.singleMu_leg2Group_branch = the_tree.GetBranch("singleMu_leg2Group")
 *         #if not self.singleMu_leg2Group_branch and "singleMu_leg2Group" not in self.complained:
 *         if not self.singleMu_leg2Group_branch and "singleMu_leg2Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2Group")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg2Group_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L586_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L586_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2765
 *         #if not self.singleMu_leg2Group_branch and "singleMu_leg2Group" not in self.complained:
 *         if not self.singleMu_leg2Group_branch and "singleMu_leg2Group":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg2Group")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_25);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_25);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_25);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2764
 *         self.singleMu_leg2Group_branch = the_tree.GetBranch("singleMu_leg2Group")
 *         #if not self.singleMu_leg2Group_branch and "singleMu_leg2Group" not in self.complained:
 *         if not self.singleMu_leg2Group_branch and "singleMu_leg2Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2Group")
 */
    goto __pyx_L585;
  }

  /* "MuTauTree.pyx":2768
 *             #self.complained.add("singleMu_leg2Group")
 *         else:
 *             self.singleMu_leg2Group_branch.SetAddress(<void*>&self.singleMu_leg2Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg2Pass"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg2Group_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg2Group_value)));
  }
  __pyx_L585:;

  /* "MuTauTree.pyx":2771
 * 
 *         #print "making singleMu_leg2Pass"
 *         self.singleMu_leg2Pass_branch = the_tree.GetBranch("singleMu_leg2Pass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass" not in self.complained:
 *         if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass":
 */
  __pyx_v_self->singleMu_leg2Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg2Pass);

  /* "MuTauTree.pyx":2773
 *         self.singleMu_leg2Pass_branch = the_tree.GetBranch("singleMu_leg2Pass")
 *         #if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass" not in self.complained:
 *         if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2Pass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg2Pass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L589_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L589_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2774
 *         #if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass" not in self.complained:
 *         if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg2Pass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_26);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_26);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_26);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2773
 *         self.singleMu_leg2Pass_branch = the_tree.GetBranch("singleMu_leg2Pass")
 *         #if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass" not in self.complained:
 *         if not self.singleMu_leg2Pass_branch and "singleMu_leg2Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2Pass")
 */
    goto __pyx_L588;
  }

  /* "MuTauTree.pyx":2777
 *             #self.complained.add("singleMu_leg2Pass")
 *         else:
 *             self.singleMu_leg2Pass_branch.SetAddress(<void*>&self.singleMu_leg2Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg2Prescale"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg2Pass_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg2Pass_value)));
  }
  __pyx_L588:;

  /* "MuTauTree.pyx":2780
 * 
 *         #print "making singleMu_leg2Prescale"
 *         self.singleMu_leg2Prescale_branch = the_tree.GetBranch("singleMu_leg2Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale" not in self.complained:
 *         if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale":
 */
  __pyx_v_self->singleMu_leg2Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg2Prescale);

  /* "MuTauTree.pyx":2782
 *         self.singleMu_leg2Prescale_branch = the_tree.GetBranch("singleMu_leg2Prescale")
 *         #if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale" not in self.complained:
 *         if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2Prescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg2Prescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L592_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L592_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2783
 *         #if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale" not in self.complained:
 *         if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg2Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_27);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_27);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_27);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2782
 *         self.singleMu_leg2Prescale_branch = the_tree.GetBranch("singleMu_leg2Prescale")
 *         #if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale" not in self.complained:
 *         if not self.singleMu_leg2Prescale_branch and "singleMu_leg2Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2Prescale")
 */
    goto __pyx_L591;
  }

  /* "MuTauTree.pyx":2786
 *             #self.complained.add("singleMu_leg2Prescale")
 *         else:
 *             self.singleMu_leg2Prescale_branch.SetAddress(<void*>&self.singleMu_leg2Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg2_noisoGroup"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg2Prescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg2Prescale_value)));
  }
  __pyx_L591:;

  /* "MuTauTree.pyx":2789
 * 
 *         #print "making singleMu_leg2_noisoGroup"
 *         self.singleMu_leg2_noisoGroup_branch = the_tree.GetBranch("singleMu_leg2_noisoGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup":
 */
  __pyx_v_self->singleMu_leg2_noisoGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg2_noisoGroup);

  /* "MuTauTree.pyx":2791
 *         self.singleMu_leg2_noisoGroup_branch = the_tree.GetBranch("singleMu_leg2_noisoGroup")
 *         #if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2_noisoGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg2_noisoGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L595_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L595_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2792
 *         #if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg2_noisoGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_28);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_28);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_28);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2791
 *         self.singleMu_leg2_noisoGroup_branch = the_tree.GetBranch("singleMu_leg2_noisoGroup")
 *         #if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup" not in self.complained:
 *         if not self.singleMu_leg2_noisoGroup_branch and "singleMu_leg2_noisoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2_noisoGroup")
 */
    goto __pyx_L594;
  }

  /* "MuTauTree.pyx":2795
 *             #self.complained.add("singleMu_leg2_noisoGroup")
 *         else:
 *             self.singleMu_leg2_noisoGroup_branch.SetAddress(<void*>&self.singleMu_leg2_noisoGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg2_noisoPass"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg2_noisoGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg2_noisoGroup_value)));
  }
  __pyx_L594:;

  /* "MuTauTree.pyx":2798
 * 
 *         #print "making singleMu_leg2_noisoPass"
 *         self.singleMu_leg2_noisoPass_branch = the_tree.GetBranch("singleMu_leg2_noisoPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass" not in self.complained:
 *         if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass":
 */
  __pyx_v_self->singleMu_leg2_noisoPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg2_noisoPass);

  /* "MuTauTree.pyx":2800
 *         self.singleMu_leg2_noisoPass_branch = the_tree.GetBranch("singleMu_leg2_noisoPass")
 *         #if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass" not in self.complained:
 *         if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2_noisoPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg2_noisoPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L598_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L598_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2801
 *         #if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass" not in self.complained:
 *         if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg2_noisoPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_29);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_29);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_29);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2800
 *         self.singleMu_leg2_noisoPass_branch = the_tree.GetBranch("singleMu_leg2_noisoPass")
 *         #if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass" not in self.complained:
 *         if not self.singleMu_leg2_noisoPass_branch and "singleMu_leg2_noisoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2_noisoPass")
 */
    goto __pyx_L597;
  }

  /* "MuTauTree.pyx":2804
 *             #self.complained.add("singleMu_leg2_noisoPass")
 *         else:
 *             self.singleMu_leg2_noisoPass_branch.SetAddress(<void*>&self.singleMu_leg2_noisoPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMu_leg2_noisoPrescale"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg2_noisoPass_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg2_noisoPass_value)));
  }
  __pyx_L597:;

  /* "MuTauTree.pyx":2807
 * 
 *         #print "making singleMu_leg2_noisoPrescale"
 *         self.singleMu_leg2_noisoPrescale_branch = the_tree.GetBranch("singleMu_leg2_noisoPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale":
 */
  __pyx_v_self->singleMu_leg2_noisoPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_singleMu_leg2_noisoPrescale);

  /* "MuTauTree.pyx":2809
 *         self.singleMu_leg2_noisoPrescale_branch = the_tree.GetBranch("singleMu_leg2_noisoPrescale")
 *         #if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2_noisoPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->singleMu_leg2_noisoPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L601_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L601_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2810
 *         #if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMu_leg2_noisoPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_single_30);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_single_30);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_single_30);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2809
 *         self.singleMu_leg2_noisoPrescale_branch = the_tree.GetBranch("singleMu_leg2_noisoPrescale")
 *         #if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale" not in self.complained:
 *         if not self.singleMu_leg2_noisoPrescale_branch and "singleMu_leg2_noisoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMu_leg2_noisoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMu_leg2_noisoPrescale")
 */
    goto __pyx_L600;
  }

  /* "MuTauTree.pyx":2813
 *             #self.complained.add("singleMu_leg2_noisoPrescale")
 *         else:
 *             self.singleMu_leg2_noisoPrescale_branch.SetAddress(<void*>&self.singleMu_leg2_noisoPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAbsEta"
 */
  /*else*/ {
    __pyx_v_self->singleMu_leg2_noisoPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMu_leg2_noisoPrescale_value)));
  }
  __pyx_L600:;

  /* "MuTauTree.pyx":2816
 * 
 *         #print "making tAbsEta"
 *         self.tAbsEta_branch = the_tree.GetBranch("tAbsEta")             # <<<<<<<<<<<<<<
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":
 */
  __pyx_v_self->tAbsEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAbsEta);

  /* "MuTauTree.pyx":2818
 *         self.tAbsEta_branch = the_tree.GetBranch("tAbsEta")
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAbsEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAbsEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAbsEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L604_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L604_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2819
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":
 *             warnings.warn( "MuTauTree: Expected branch tAbsEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAbsEta")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAbsEt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAbsEt);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAbsEt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2818
 *         self.tAbsEta_branch = the_tree.GetBranch("tAbsEta")
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAbsEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAbsEta")
 */
    goto __pyx_L603;
  }

  /* "MuTauTree.pyx":2822
 *             #self.complained.add("tAbsEta")
 *         else:
 *             self.tAbsEta_branch.SetAddress(<void*>&self.tAbsEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronLooseMVA5"
 */
  /*else*/ {
    __pyx_v_self->tAbsEta_branch->SetAddress(((void *)(&__pyx_v_self->tAbsEta_value)));
  }
  __pyx_L603:;

  /* "MuTauTree.pyx":2825
 * 
 *         #print "making tAgainstElectronLooseMVA5"
 *         self.tAgainstElectronLooseMVA5_branch = the_tree.GetBranch("tAgainstElectronLooseMVA5")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5":
 */
  __pyx_v_self->tAgainstElectronLooseMVA5_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronLooseMVA5);

  /* "MuTauTree.pyx":2827
 *         self.tAgainstElectronLooseMVA5_branch = the_tree.GetBranch("tAgainstElectronLooseMVA5")
 *         #if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronLooseMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronLooseMVA5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronLooseMVA5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L607_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L607_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2828
 *         #if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronLooseMVA5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronLooseMVA5")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2827
 *         self.tAgainstElectronLooseMVA5_branch = the_tree.GetBranch("tAgainstElectronLooseMVA5")
 *         #if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronLooseMVA5_branch and "tAgainstElectronLooseMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronLooseMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronLooseMVA5")
 */
    goto __pyx_L606;
  }

  /* "MuTauTree.pyx":2831
 *             #self.complained.add("tAgainstElectronLooseMVA5")
 *         else:
 *             self.tAgainstElectronLooseMVA5_branch.SetAddress(<void*>&self.tAgainstElectronLooseMVA5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronMVA5category"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronLooseMVA5_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronLooseMVA5_value)));
  }
  __pyx_L606:;

  /* "MuTauTree.pyx":2834
 * 
 *         #print "making tAgainstElectronMVA5category"
 *         self.tAgainstElectronMVA5category_branch = the_tree.GetBranch("tAgainstElectronMVA5category")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category" not in self.complained:
 *         if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category":
 */
  __pyx_v_self->tAgainstElectronMVA5category_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronMVA5category);

  /* "MuTauTree.pyx":2836
 *         self.tAgainstElectronMVA5category_branch = the_tree.GetBranch("tAgainstElectronMVA5category")
 *         #if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category" not in self.complained:
 *         if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMVA5category does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronMVA5category")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronMVA5category_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L610_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L610_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2837
 *         #if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category" not in self.complained:
 *         if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMVA5category does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronMVA5category")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2836
 *         self.tAgainstElectronMVA5category_branch = the_tree.GetBranch("tAgainstElectronMVA5category")
 *         #if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category" not in self.complained:
 *         if not self.tAgainstElectronMVA5category_branch and "tAgainstElectronMVA5category":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMVA5category does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronMVA5category")
 */
    goto __pyx_L609;
  }

  /* "MuTauTree.pyx":2840
 *             #self.complained.add("tAgainstElectronMVA5category")
 *         else:
 *             self.tAgainstElectronMVA5category_branch.SetAddress(<void*>&self.tAgainstElectronMVA5category_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronMVA5raw"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronMVA5category_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronMVA5category_value)));
  }
  __pyx_L609:;

  /* "MuTauTree.pyx":2843
 * 
 *         #print "making tAgainstElectronMVA5raw"
 *         self.tAgainstElectronMVA5raw_branch = the_tree.GetBranch("tAgainstElectronMVA5raw")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw" not in self.complained:
 *         if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw":
 */
  __pyx_v_self->tAgainstElectronMVA5raw_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronMVA5raw);

  /* "MuTauTree.pyx":2845
 *         self.tAgainstElectronMVA5raw_branch = the_tree.GetBranch("tAgainstElectronMVA5raw")
 *         #if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw" not in self.complained:
 *         if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMVA5raw does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronMVA5raw")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronMVA5raw_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L613_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L613_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2846
 *         #if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw" not in self.complained:
 *         if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMVA5raw does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronMVA5raw")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2845
 *         self.tAgainstElectronMVA5raw_branch = the_tree.GetBranch("tAgainstElectronMVA5raw")
 *         #if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw" not in self.complained:
 *         if not self.tAgainstElectronMVA5raw_branch and "tAgainstElectronMVA5raw":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMVA5raw does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronMVA5raw")
 */
    goto __pyx_L612;
  }

  /* "MuTauTree.pyx":2849
 *             #self.complained.add("tAgainstElectronMVA5raw")
 *         else:
 *             self.tAgainstElectronMVA5raw_branch.SetAddress(<void*>&self.tAgainstElectronMVA5raw_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronMediumMVA5"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronMVA5raw_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronMVA5raw_value)));
  }
  __pyx_L612:;

  /* "MuTauTree.pyx":2852
 * 
 *         #print "making tAgainstElectronMediumMVA5"
 *         self.tAgainstElectronMediumMVA5_branch = the_tree.GetBranch("tAgainstElectronMediumMVA5")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5" not in self.complained:
 *         if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5":
 */
  __pyx_v_self->tAgainstElectronMediumMVA5_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronMediumMVA5);

  /* "MuTauTree.pyx":2854
 *         self.tAgainstElectronMediumMVA5_branch = the_tree.GetBranch("tAgainstElectronMediumMVA5")
 *         #if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5" not in self.complained:
 *         if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMediumMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronMediumMVA5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronMediumMVA5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L616_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L616_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2855
 *         #if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5" not in self.complained:
 *         if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMediumMVA5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronMediumMVA5")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_4);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2855; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2854
 *         self.tAgainstElectronMediumMVA5_branch = the_tree.GetBranch("tAgainstElectronMediumMVA5")
 *         #if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5" not in self.complained:
 *         if not self.tAgainstElectronMediumMVA5_branch and "tAgainstElectronMediumMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronMediumMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronMediumMVA5")
 */
    goto __pyx_L615;
  }

  /* "MuTauTree.pyx":2858
 *             #self.complained.add("tAgainstElectronMediumMVA5")
 *         else:
 *             self.tAgainstElectronMediumMVA5_branch.SetAddress(<void*>&self.tAgainstElectronMediumMVA5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronTightMVA5"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronMediumMVA5_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronMediumMVA5_value)));
  }
  __pyx_L615:;

  /* "MuTauTree.pyx":2861
 * 
 *         #print "making tAgainstElectronTightMVA5"
 *         self.tAgainstElectronTightMVA5_branch = the_tree.GetBranch("tAgainstElectronTightMVA5")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5":
 */
  __pyx_v_self->tAgainstElectronTightMVA5_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronTightMVA5);

  /* "MuTauTree.pyx":2863
 *         self.tAgainstElectronTightMVA5_branch = the_tree.GetBranch("tAgainstElectronTightMVA5")
 *         #if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronTightMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronTightMVA5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronTightMVA5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L619_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L619_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2864
 *         #if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronTightMVA5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronTightMVA5")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2863
 *         self.tAgainstElectronTightMVA5_branch = the_tree.GetBranch("tAgainstElectronTightMVA5")
 *         #if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronTightMVA5_branch and "tAgainstElectronTightMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronTightMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronTightMVA5")
 */
    goto __pyx_L618;
  }

  /* "MuTauTree.pyx":2867
 *             #self.complained.add("tAgainstElectronTightMVA5")
 *         else:
 *             self.tAgainstElectronTightMVA5_branch.SetAddress(<void*>&self.tAgainstElectronTightMVA5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronVLooseMVA5"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronTightMVA5_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronTightMVA5_value)));
  }
  __pyx_L618:;

  /* "MuTauTree.pyx":2870
 * 
 *         #print "making tAgainstElectronVLooseMVA5"
 *         self.tAgainstElectronVLooseMVA5_branch = the_tree.GetBranch("tAgainstElectronVLooseMVA5")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5":
 */
  __pyx_v_self->tAgainstElectronVLooseMVA5_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronVLooseMVA5);

  /* "MuTauTree.pyx":2872
 *         self.tAgainstElectronVLooseMVA5_branch = the_tree.GetBranch("tAgainstElectronVLooseMVA5")
 *         #if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronVLooseMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronVLooseMVA5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronVLooseMVA5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L622_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L622_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2873
 *         #if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronVLooseMVA5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronVLooseMVA5")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_6);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2873; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2872
 *         self.tAgainstElectronVLooseMVA5_branch = the_tree.GetBranch("tAgainstElectronVLooseMVA5")
 *         #if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5" not in self.complained:
 *         if not self.tAgainstElectronVLooseMVA5_branch and "tAgainstElectronVLooseMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronVLooseMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronVLooseMVA5")
 */
    goto __pyx_L621;
  }

  /* "MuTauTree.pyx":2876
 *             #self.complained.add("tAgainstElectronVLooseMVA5")
 *         else:
 *             self.tAgainstElectronVLooseMVA5_branch.SetAddress(<void*>&self.tAgainstElectronVLooseMVA5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstElectronVTightMVA5"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronVLooseMVA5_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronVLooseMVA5_value)));
  }
  __pyx_L621:;

  /* "MuTauTree.pyx":2879
 * 
 *         #print "making tAgainstElectronVTightMVA5"
 *         self.tAgainstElectronVTightMVA5_branch = the_tree.GetBranch("tAgainstElectronVTightMVA5")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5":
 */
  __pyx_v_self->tAgainstElectronVTightMVA5_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstElectronVTightMVA5);

  /* "MuTauTree.pyx":2881
 *         self.tAgainstElectronVTightMVA5_branch = the_tree.GetBranch("tAgainstElectronVTightMVA5")
 *         #if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronVTightMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronVTightMVA5")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstElectronVTightMVA5_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L625_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L625_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2882
 *         #if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronVTightMVA5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstElectronVTightMVA5")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_7);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_7);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_7);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2881
 *         self.tAgainstElectronVTightMVA5_branch = the_tree.GetBranch("tAgainstElectronVTightMVA5")
 *         #if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5" not in self.complained:
 *         if not self.tAgainstElectronVTightMVA5_branch and "tAgainstElectronVTightMVA5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstElectronVTightMVA5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstElectronVTightMVA5")
 */
    goto __pyx_L624;
  }

  /* "MuTauTree.pyx":2885
 *             #self.complained.add("tAgainstElectronVTightMVA5")
 *         else:
 *             self.tAgainstElectronVTightMVA5_branch.SetAddress(<void*>&self.tAgainstElectronVTightMVA5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstMuonLoose3"
 */
  /*else*/ {
    __pyx_v_self->tAgainstElectronVTightMVA5_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstElectronVTightMVA5_value)));
  }
  __pyx_L624:;

  /* "MuTauTree.pyx":2888
 * 
 *         #print "making tAgainstMuonLoose3"
 *         self.tAgainstMuonLoose3_branch = the_tree.GetBranch("tAgainstMuonLoose3")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3" not in self.complained:
 *         if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3":
 */
  __pyx_v_self->tAgainstMuonLoose3_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstMuonLoose3);

  /* "MuTauTree.pyx":2890
 *         self.tAgainstMuonLoose3_branch = the_tree.GetBranch("tAgainstMuonLoose3")
 *         #if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3" not in self.complained:
 *         if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstMuonLoose3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstMuonLoose3")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstMuonLoose3_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L628_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L628_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2891
 *         #if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3" not in self.complained:
 *         if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstMuonLoose3 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstMuonLoose3")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_8);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_8);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_8);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2890
 *         self.tAgainstMuonLoose3_branch = the_tree.GetBranch("tAgainstMuonLoose3")
 *         #if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3" not in self.complained:
 *         if not self.tAgainstMuonLoose3_branch and "tAgainstMuonLoose3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstMuonLoose3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstMuonLoose3")
 */
    goto __pyx_L627;
  }

  /* "MuTauTree.pyx":2894
 *             #self.complained.add("tAgainstMuonLoose3")
 *         else:
 *             self.tAgainstMuonLoose3_branch.SetAddress(<void*>&self.tAgainstMuonLoose3_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAgainstMuonTight3"
 */
  /*else*/ {
    __pyx_v_self->tAgainstMuonLoose3_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstMuonLoose3_value)));
  }
  __pyx_L627:;

  /* "MuTauTree.pyx":2897
 * 
 *         #print "making tAgainstMuonTight3"
 *         self.tAgainstMuonTight3_branch = the_tree.GetBranch("tAgainstMuonTight3")             # <<<<<<<<<<<<<<
 *         #if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3" not in self.complained:
 *         if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3":
 */
  __pyx_v_self->tAgainstMuonTight3_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tAgainstMuonTight3);

  /* "MuTauTree.pyx":2899
 *         self.tAgainstMuonTight3_branch = the_tree.GetBranch("tAgainstMuonTight3")
 *         #if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3" not in self.complained:
 *         if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstMuonTight3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstMuonTight3")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tAgainstMuonTight3_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L631_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L631_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2900
 *         #if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3" not in self.complained:
 *         if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3":
 *             warnings.warn( "MuTauTree: Expected branch tAgainstMuonTight3 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAgainstMuonTight3")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_9);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tAgain_9);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tAgain_9);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2899
 *         self.tAgainstMuonTight3_branch = the_tree.GetBranch("tAgainstMuonTight3")
 *         #if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3" not in self.complained:
 *         if not self.tAgainstMuonTight3_branch and "tAgainstMuonTight3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAgainstMuonTight3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAgainstMuonTight3")
 */
    goto __pyx_L630;
  }

  /* "MuTauTree.pyx":2903
 *             #self.complained.add("tAgainstMuonTight3")
 *         else:
 *             self.tAgainstMuonTight3_branch.SetAddress(<void*>&self.tAgainstMuonTight3_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByCombinedIsolationDeltaBetaCorrRaw3Hits"
 */
  /*else*/ {
    __pyx_v_self->tAgainstMuonTight3_branch->SetAddress(((void *)(&__pyx_v_self->tAgainstMuonTight3_value)));
  }
  __pyx_L630:;

  /* "MuTauTree.pyx":2906
 * 
 *         #print "making tByCombinedIsolationDeltaBetaCorrRaw3Hits"
 *         self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch = the_tree.GetBranch("tByCombinedIsolationDeltaBetaCorrRaw3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits" not in self.complained:
 *         if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits":
 */
  __pyx_v_self->tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByCombinedIsolationDeltaBetaCor);

  /* "MuTauTree.pyx":2908
 *         self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch = the_tree.GetBranch("tByCombinedIsolationDeltaBetaCorrRaw3Hits")
 *         #if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits" not in self.complained:
 *         if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByCombinedIsolationDeltaBetaCorrRaw3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByCombinedIsolationDeltaBetaCorrRaw3Hits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L634_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L634_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2909
 *         #if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits" not in self.complained:
 *         if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tByCombinedIsolationDeltaBetaCorrRaw3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByCombinedIsolationDeltaBetaCorrRaw3Hits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByCom);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByCom);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByCom);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2908
 *         self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch = the_tree.GetBranch("tByCombinedIsolationDeltaBetaCorrRaw3Hits")
 *         #if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits" not in self.complained:
 *         if not self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch and "tByCombinedIsolationDeltaBetaCorrRaw3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByCombinedIsolationDeltaBetaCorrRaw3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByCombinedIsolationDeltaBetaCorrRaw3Hits")
 */
    goto __pyx_L633;
  }

  /* "MuTauTree.pyx":2912
 *             #self.complained.add("tByCombinedIsolationDeltaBetaCorrRaw3Hits")
 *         else:
 *             self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch.SetAddress(<void*>&self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByIsolationMVA3newDMwLTraw"
 */
  /*else*/ {
    __pyx_v_self->tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tByCombinedIsolationDeltaBetaCorrRaw3Hits_value)));
  }
  __pyx_L633:;

  /* "MuTauTree.pyx":2915
 * 
 *         #print "making tByIsolationMVA3newDMwLTraw"
 *         self.tByIsolationMVA3newDMwLTraw_branch = the_tree.GetBranch("tByIsolationMVA3newDMwLTraw")             # <<<<<<<<<<<<<<
 *         #if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw":
 */
  __pyx_v_self->tByIsolationMVA3newDMwLTraw_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByIsolationMVA3newDMwLTraw);

  /* "MuTauTree.pyx":2917
 *         self.tByIsolationMVA3newDMwLTraw_branch = the_tree.GetBranch("tByIsolationMVA3newDMwLTraw")
 *         #if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByIsolationMVA3newDMwLTraw does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByIsolationMVA3newDMwLTraw")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByIsolationMVA3newDMwLTraw_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L637_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L637_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2918
 *         #if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw":
 *             warnings.warn( "MuTauTree: Expected branch tByIsolationMVA3newDMwLTraw does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByIsolationMVA3newDMwLTraw")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByIso);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByIso);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByIso);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2917
 *         self.tByIsolationMVA3newDMwLTraw_branch = the_tree.GetBranch("tByIsolationMVA3newDMwLTraw")
 *         #if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3newDMwLTraw_branch and "tByIsolationMVA3newDMwLTraw":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByIsolationMVA3newDMwLTraw does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByIsolationMVA3newDMwLTraw")
 */
    goto __pyx_L636;
  }

  /* "MuTauTree.pyx":2921
 *             #self.complained.add("tByIsolationMVA3newDMwLTraw")
 *         else:
 *             self.tByIsolationMVA3newDMwLTraw_branch.SetAddress(<void*>&self.tByIsolationMVA3newDMwLTraw_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByIsolationMVA3oldDMwLTraw"
 */
  /*else*/ {
    __pyx_v_self->tByIsolationMVA3newDMwLTraw_branch->SetAddress(((void *)(&__pyx_v_self->tByIsolationMVA3newDMwLTraw_value)));
  }
  __pyx_L636:;

  /* "MuTauTree.pyx":2924
 * 
 *         #print "making tByIsolationMVA3oldDMwLTraw"
 *         self.tByIsolationMVA3oldDMwLTraw_branch = the_tree.GetBranch("tByIsolationMVA3oldDMwLTraw")             # <<<<<<<<<<<<<<
 *         #if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw":
 */
  __pyx_v_self->tByIsolationMVA3oldDMwLTraw_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByIsolationMVA3oldDMwLTraw);

  /* "MuTauTree.pyx":2926
 *         self.tByIsolationMVA3oldDMwLTraw_branch = the_tree.GetBranch("tByIsolationMVA3oldDMwLTraw")
 *         #if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByIsolationMVA3oldDMwLTraw does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByIsolationMVA3oldDMwLTraw")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByIsolationMVA3oldDMwLTraw_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L640_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L640_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2927
 *         #if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw":
 *             warnings.warn( "MuTauTree: Expected branch tByIsolationMVA3oldDMwLTraw does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByIsolationMVA3oldDMwLTraw")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByIso_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByIso_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByIso_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2926
 *         self.tByIsolationMVA3oldDMwLTraw_branch = the_tree.GetBranch("tByIsolationMVA3oldDMwLTraw")
 *         #if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw" not in self.complained:
 *         if not self.tByIsolationMVA3oldDMwLTraw_branch and "tByIsolationMVA3oldDMwLTraw":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByIsolationMVA3oldDMwLTraw does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByIsolationMVA3oldDMwLTraw")
 */
    goto __pyx_L639;
  }

  /* "MuTauTree.pyx":2930
 *             #self.complained.add("tByIsolationMVA3oldDMwLTraw")
 *         else:
 *             self.tByIsolationMVA3oldDMwLTraw_branch.SetAddress(<void*>&self.tByIsolationMVA3oldDMwLTraw_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByLooseCombinedIsolationDeltaBetaCorr3Hits"
 */
  /*else*/ {
    __pyx_v_self->tByIsolationMVA3oldDMwLTraw_branch->SetAddress(((void *)(&__pyx_v_self->tByIsolationMVA3oldDMwLTraw_value)));
  }
  __pyx_L639:;

  /* "MuTauTree.pyx":2933
 * 
 *         #print "making tByLooseCombinedIsolationDeltaBetaCorr3Hits"
 *         self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByLooseCombinedIsolationDeltaBetaCorr3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits":
 */
  __pyx_v_self->tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByLooseCombinedIsolationDeltaBe);

  /* "MuTauTree.pyx":2935
 *         self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByLooseCombinedIsolationDeltaBetaCorr3Hits")
 *         #if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByLooseCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByLooseCombinedIsolationDeltaBetaCorr3Hits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L643_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L643_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2936
 *         #if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tByLooseCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByLooseCombinedIsolationDeltaBetaCorr3Hits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByLoo);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByLoo);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByLoo);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2935
 *         self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByLooseCombinedIsolationDeltaBetaCorr3Hits")
 *         #if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch and "tByLooseCombinedIsolationDeltaBetaCorr3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByLooseCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByLooseCombinedIsolationDeltaBetaCorr3Hits")
 */
    goto __pyx_L642;
  }

  /* "MuTauTree.pyx":2939
 *             #self.complained.add("tByLooseCombinedIsolationDeltaBetaCorr3Hits")
 *         else:
 *             self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch.SetAddress(<void*>&self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByLooseIsolationMVA3newDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tByLooseCombinedIsolationDeltaBetaCorr3Hits_value)));
  }
  __pyx_L642:;

  /* "MuTauTree.pyx":2942
 * 
 *         #print "making tByLooseIsolationMVA3newDMwLT"
 *         self.tByLooseIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByLooseIsolationMVA3newDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT":
 */
  __pyx_v_self->tByLooseIsolationMVA3newDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByLooseIsolationMVA3newDMwLT);

  /* "MuTauTree.pyx":2944
 *         self.tByLooseIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByLooseIsolationMVA3newDMwLT")
 *         #if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByLooseIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByLooseIsolationMVA3newDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByLooseIsolationMVA3newDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L646_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L646_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2945
 *         #if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByLooseIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByLooseIsolationMVA3newDMwLT")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByLoo_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2945; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2944
 *         self.tByLooseIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByLooseIsolationMVA3newDMwLT")
 *         #if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3newDMwLT_branch and "tByLooseIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByLooseIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByLooseIsolationMVA3newDMwLT")
 */
    goto __pyx_L645;
  }

  /* "MuTauTree.pyx":2948
 *             #self.complained.add("tByLooseIsolationMVA3newDMwLT")
 *         else:
 *             self.tByLooseIsolationMVA3newDMwLT_branch.SetAddress(<void*>&self.tByLooseIsolationMVA3newDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByLooseIsolationMVA3oldDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByLooseIsolationMVA3newDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByLooseIsolationMVA3newDMwLT_value)));
  }
  __pyx_L645:;

  /* "MuTauTree.pyx":2951
 * 
 *         #print "making tByLooseIsolationMVA3oldDMwLT"
 *         self.tByLooseIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByLooseIsolationMVA3oldDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT":
 */
  __pyx_v_self->tByLooseIsolationMVA3oldDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByLooseIsolationMVA3oldDMwLT);

  /* "MuTauTree.pyx":2953
 *         self.tByLooseIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByLooseIsolationMVA3oldDMwLT")
 *         #if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByLooseIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByLooseIsolationMVA3oldDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByLooseIsolationMVA3oldDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L649_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L649_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2954
 *         #if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByLooseIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByLooseIsolationMVA3oldDMwLT")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByLoo_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2954; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2953
 *         self.tByLooseIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByLooseIsolationMVA3oldDMwLT")
 *         #if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByLooseIsolationMVA3oldDMwLT_branch and "tByLooseIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByLooseIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByLooseIsolationMVA3oldDMwLT")
 */
    goto __pyx_L648;
  }

  /* "MuTauTree.pyx":2957
 *             #self.complained.add("tByLooseIsolationMVA3oldDMwLT")
 *         else:
 *             self.tByLooseIsolationMVA3oldDMwLT_branch.SetAddress(<void*>&self.tByLooseIsolationMVA3oldDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByMediumCombinedIsolationDeltaBetaCorr3Hits"
 */
  /*else*/ {
    __pyx_v_self->tByLooseIsolationMVA3oldDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByLooseIsolationMVA3oldDMwLT_value)));
  }
  __pyx_L648:;

  /* "MuTauTree.pyx":2960
 * 
 *         #print "making tByMediumCombinedIsolationDeltaBetaCorr3Hits"
 *         self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByMediumCombinedIsolationDeltaBetaCorr3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits":
 */
  __pyx_v_self->tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByMediumCombinedIsolationDeltaB);

  /* "MuTauTree.pyx":2962
 *         self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByMediumCombinedIsolationDeltaBetaCorr3Hits")
 *         #if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByMediumCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByMediumCombinedIsolationDeltaBetaCorr3Hits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L652_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L652_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2963
 *         #if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tByMediumCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByMediumCombinedIsolationDeltaBetaCorr3Hits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByMed);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByMed);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByMed);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2963; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2962
 *         self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByMediumCombinedIsolationDeltaBetaCorr3Hits")
 *         #if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch and "tByMediumCombinedIsolationDeltaBetaCorr3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByMediumCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByMediumCombinedIsolationDeltaBetaCorr3Hits")
 */
    goto __pyx_L651;
  }

  /* "MuTauTree.pyx":2966
 *             #self.complained.add("tByMediumCombinedIsolationDeltaBetaCorr3Hits")
 *         else:
 *             self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch.SetAddress(<void*>&self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByMediumIsolationMVA3newDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tByMediumCombinedIsolationDeltaBetaCorr3Hits_value)));
  }
  __pyx_L651:;

  /* "MuTauTree.pyx":2969
 * 
 *         #print "making tByMediumIsolationMVA3newDMwLT"
 *         self.tByMediumIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByMediumIsolationMVA3newDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT":
 */
  __pyx_v_self->tByMediumIsolationMVA3newDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByMediumIsolationMVA3newDMwLT);

  /* "MuTauTree.pyx":2971
 *         self.tByMediumIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByMediumIsolationMVA3newDMwLT")
 *         #if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByMediumIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByMediumIsolationMVA3newDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByMediumIsolationMVA3newDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L655_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L655_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2972
 *         #if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByMediumIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByMediumIsolationMVA3newDMwLT")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByMed_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByMed_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByMed_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2971
 *         self.tByMediumIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByMediumIsolationMVA3newDMwLT")
 *         #if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3newDMwLT_branch and "tByMediumIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByMediumIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByMediumIsolationMVA3newDMwLT")
 */
    goto __pyx_L654;
  }

  /* "MuTauTree.pyx":2975
 *             #self.complained.add("tByMediumIsolationMVA3newDMwLT")
 *         else:
 *             self.tByMediumIsolationMVA3newDMwLT_branch.SetAddress(<void*>&self.tByMediumIsolationMVA3newDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByMediumIsolationMVA3oldDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByMediumIsolationMVA3newDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByMediumIsolationMVA3newDMwLT_value)));
  }
  __pyx_L654:;

  /* "MuTauTree.pyx":2978
 * 
 *         #print "making tByMediumIsolationMVA3oldDMwLT"
 *         self.tByMediumIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByMediumIsolationMVA3oldDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT":
 */
  __pyx_v_self->tByMediumIsolationMVA3oldDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByMediumIsolationMVA3oldDMwLT);

  /* "MuTauTree.pyx":2980
 *         self.tByMediumIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByMediumIsolationMVA3oldDMwLT")
 *         #if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByMediumIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByMediumIsolationMVA3oldDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByMediumIsolationMVA3oldDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L658_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L658_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2981
 *         #if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByMediumIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByMediumIsolationMVA3oldDMwLT")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByMed_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByMed_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByMed_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2980
 *         self.tByMediumIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByMediumIsolationMVA3oldDMwLT")
 *         #if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByMediumIsolationMVA3oldDMwLT_branch and "tByMediumIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByMediumIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByMediumIsolationMVA3oldDMwLT")
 */
    goto __pyx_L657;
  }

  /* "MuTauTree.pyx":2984
 *             #self.complained.add("tByMediumIsolationMVA3oldDMwLT")
 *         else:
 *             self.tByMediumIsolationMVA3oldDMwLT_branch.SetAddress(<void*>&self.tByMediumIsolationMVA3oldDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByTightCombinedIsolationDeltaBetaCorr3Hits"
 */
  /*else*/ {
    __pyx_v_self->tByMediumIsolationMVA3oldDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByMediumIsolationMVA3oldDMwLT_value)));
  }
  __pyx_L657:;

  /* "MuTauTree.pyx":2987
 * 
 *         #print "making tByTightCombinedIsolationDeltaBetaCorr3Hits"
 *         self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByTightCombinedIsolationDeltaBetaCorr3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits":
 */
  __pyx_v_self->tByTightCombinedIsolationDeltaBetaCorr3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByTightCombinedIsolationDeltaBe);

  /* "MuTauTree.pyx":2989
 *         self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByTightCombinedIsolationDeltaBetaCorr3Hits")
 *         #if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByTightCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByTightCombinedIsolationDeltaBetaCorr3Hits")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByTightCombinedIsolationDeltaBetaCorr3Hits_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L661_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L661_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2990
 *         #if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tByTightCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByTightCombinedIsolationDeltaBetaCorr3Hits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByTig);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByTig);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByTig);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2989
 *         self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch = the_tree.GetBranch("tByTightCombinedIsolationDeltaBetaCorr3Hits")
 *         #if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits" not in self.complained:
 *         if not self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch and "tByTightCombinedIsolationDeltaBetaCorr3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByTightCombinedIsolationDeltaBetaCorr3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByTightCombinedIsolationDeltaBetaCorr3Hits")
 */
    goto __pyx_L660;
  }

  /* "MuTauTree.pyx":2993
 *             #self.complained.add("tByTightCombinedIsolationDeltaBetaCorr3Hits")
 *         else:
 *             self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch.SetAddress(<void*>&self.tByTightCombinedIsolationDeltaBetaCorr3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByTightIsolationMVA3newDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByTightCombinedIsolationDeltaBetaCorr3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tByTightCombinedIsolationDeltaBetaCorr3Hits_value)));
  }
  __pyx_L660:;

  /* "MuTauTree.pyx":2996
 * 
 *         #print "making tByTightIsolationMVA3newDMwLT"
 *         self.tByTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByTightIsolationMVA3newDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT":
 */
  __pyx_v_self->tByTightIsolationMVA3newDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByTightIsolationMVA3newDMwLT);

  /* "MuTauTree.pyx":2998
 *         self.tByTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByTightIsolationMVA3newDMwLT")
 *         #if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByTightIsolationMVA3newDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByTightIsolationMVA3newDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L664_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L664_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2999
 *         #if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByTightIsolationMVA3newDMwLT")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByTig_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByTig_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByTig_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2999; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":2998
 *         self.tByTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByTightIsolationMVA3newDMwLT")
 *         #if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3newDMwLT_branch and "tByTightIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByTightIsolationMVA3newDMwLT")
 */
    goto __pyx_L663;
  }

  /* "MuTauTree.pyx":3002
 *             #self.complained.add("tByTightIsolationMVA3newDMwLT")
 *         else:
 *             self.tByTightIsolationMVA3newDMwLT_branch.SetAddress(<void*>&self.tByTightIsolationMVA3newDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByTightIsolationMVA3oldDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByTightIsolationMVA3newDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByTightIsolationMVA3newDMwLT_value)));
  }
  __pyx_L663:;

  /* "MuTauTree.pyx":3005
 * 
 *         #print "making tByTightIsolationMVA3oldDMwLT"
 *         self.tByTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByTightIsolationMVA3oldDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT":
 */
  __pyx_v_self->tByTightIsolationMVA3oldDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByTightIsolationMVA3oldDMwLT);

  /* "MuTauTree.pyx":3007
 *         self.tByTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByTightIsolationMVA3oldDMwLT")
 *         #if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByTightIsolationMVA3oldDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByTightIsolationMVA3oldDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L667_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L667_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3008
 *         #if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByTightIsolationMVA3oldDMwLT")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByTig_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByTig_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByTig_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3008; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3007
 *         self.tByTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByTightIsolationMVA3oldDMwLT")
 *         #if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByTightIsolationMVA3oldDMwLT_branch and "tByTightIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByTightIsolationMVA3oldDMwLT")
 */
    goto __pyx_L666;
  }

  /* "MuTauTree.pyx":3011
 *             #self.complained.add("tByTightIsolationMVA3oldDMwLT")
 *         else:
 *             self.tByTightIsolationMVA3oldDMwLT_branch.SetAddress(<void*>&self.tByTightIsolationMVA3oldDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByVLooseIsolationMVA3newDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByTightIsolationMVA3oldDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByTightIsolationMVA3oldDMwLT_value)));
  }
  __pyx_L666:;

  /* "MuTauTree.pyx":3014
 * 
 *         #print "making tByVLooseIsolationMVA3newDMwLT"
 *         self.tByVLooseIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVLooseIsolationMVA3newDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT":
 */
  __pyx_v_self->tByVLooseIsolationMVA3newDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByVLooseIsolationMVA3newDMwLT);

  /* "MuTauTree.pyx":3016
 *         self.tByVLooseIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVLooseIsolationMVA3newDMwLT")
 *         #if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVLooseIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVLooseIsolationMVA3newDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByVLooseIsolationMVA3newDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L670_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L670_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3017
 *         #if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByVLooseIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByVLooseIsolationMVA3newDMwLT")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVLo);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVLo);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByVLo);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3016
 *         self.tByVLooseIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVLooseIsolationMVA3newDMwLT")
 *         #if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3newDMwLT_branch and "tByVLooseIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVLooseIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVLooseIsolationMVA3newDMwLT")
 */
    goto __pyx_L669;
  }

  /* "MuTauTree.pyx":3020
 *             #self.complained.add("tByVLooseIsolationMVA3newDMwLT")
 *         else:
 *             self.tByVLooseIsolationMVA3newDMwLT_branch.SetAddress(<void*>&self.tByVLooseIsolationMVA3newDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByVLooseIsolationMVA3oldDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByVLooseIsolationMVA3newDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByVLooseIsolationMVA3newDMwLT_value)));
  }
  __pyx_L669:;

  /* "MuTauTree.pyx":3023
 * 
 *         #print "making tByVLooseIsolationMVA3oldDMwLT"
 *         self.tByVLooseIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVLooseIsolationMVA3oldDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT":
 */
  __pyx_v_self->tByVLooseIsolationMVA3oldDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByVLooseIsolationMVA3oldDMwLT);

  /* "MuTauTree.pyx":3025
 *         self.tByVLooseIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVLooseIsolationMVA3oldDMwLT")
 *         #if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVLooseIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVLooseIsolationMVA3oldDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByVLooseIsolationMVA3oldDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L673_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L673_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3026
 *         #if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByVLooseIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByVLooseIsolationMVA3oldDMwLT")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVLo_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVLo_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByVLo_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3025
 *         self.tByVLooseIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVLooseIsolationMVA3oldDMwLT")
 *         #if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVLooseIsolationMVA3oldDMwLT_branch and "tByVLooseIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVLooseIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVLooseIsolationMVA3oldDMwLT")
 */
    goto __pyx_L672;
  }

  /* "MuTauTree.pyx":3029
 *             #self.complained.add("tByVLooseIsolationMVA3oldDMwLT")
 *         else:
 *             self.tByVLooseIsolationMVA3oldDMwLT_branch.SetAddress(<void*>&self.tByVLooseIsolationMVA3oldDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByVTightIsolationMVA3newDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByVLooseIsolationMVA3oldDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByVLooseIsolationMVA3oldDMwLT_value)));
  }
  __pyx_L672:;

  /* "MuTauTree.pyx":3032
 * 
 *         #print "making tByVTightIsolationMVA3newDMwLT"
 *         self.tByVTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVTightIsolationMVA3newDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT":
 */
  __pyx_v_self->tByVTightIsolationMVA3newDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByVTightIsolationMVA3newDMwLT);

  /* "MuTauTree.pyx":3034
 *         self.tByVTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVTightIsolationMVA3newDMwLT")
 *         #if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVTightIsolationMVA3newDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByVTightIsolationMVA3newDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L676_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L676_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3035
 *         #if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByVTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByVTightIsolationMVA3newDMwLT")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVTi);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVTi);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByVTi);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3035; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3034
 *         self.tByVTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVTightIsolationMVA3newDMwLT")
 *         #if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3newDMwLT_branch and "tByVTightIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVTightIsolationMVA3newDMwLT")
 */
    goto __pyx_L675;
  }

  /* "MuTauTree.pyx":3038
 *             #self.complained.add("tByVTightIsolationMVA3newDMwLT")
 *         else:
 *             self.tByVTightIsolationMVA3newDMwLT_branch.SetAddress(<void*>&self.tByVTightIsolationMVA3newDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByVTightIsolationMVA3oldDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByVTightIsolationMVA3newDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByVTightIsolationMVA3newDMwLT_value)));
  }
  __pyx_L675:;

  /* "MuTauTree.pyx":3041
 * 
 *         #print "making tByVTightIsolationMVA3oldDMwLT"
 *         self.tByVTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVTightIsolationMVA3oldDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT":
 */
  __pyx_v_self->tByVTightIsolationMVA3oldDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByVTightIsolationMVA3oldDMwLT);

  /* "MuTauTree.pyx":3043
 *         self.tByVTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVTightIsolationMVA3oldDMwLT")
 *         #if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVTightIsolationMVA3oldDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByVTightIsolationMVA3oldDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L679_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L679_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3044
 *         #if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByVTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByVTightIsolationMVA3oldDMwLT")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVTi_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVTi_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByVTi_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3044; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3043
 *         self.tByVTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVTightIsolationMVA3oldDMwLT")
 *         #if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVTightIsolationMVA3oldDMwLT_branch and "tByVTightIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVTightIsolationMVA3oldDMwLT")
 */
    goto __pyx_L678;
  }

  /* "MuTauTree.pyx":3047
 *             #self.complained.add("tByVTightIsolationMVA3oldDMwLT")
 *         else:
 *             self.tByVTightIsolationMVA3oldDMwLT_branch.SetAddress(<void*>&self.tByVTightIsolationMVA3oldDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByVVTightIsolationMVA3newDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByVTightIsolationMVA3oldDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByVTightIsolationMVA3oldDMwLT_value)));
  }
  __pyx_L678:;

  /* "MuTauTree.pyx":3050
 * 
 *         #print "making tByVVTightIsolationMVA3newDMwLT"
 *         self.tByVVTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVVTightIsolationMVA3newDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT":
 */
  __pyx_v_self->tByVVTightIsolationMVA3newDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByVVTightIsolationMVA3newDMwLT);

  /* "MuTauTree.pyx":3052
 *         self.tByVVTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVVTightIsolationMVA3newDMwLT")
 *         #if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVVTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVVTightIsolationMVA3newDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByVVTightIsolationMVA3newDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L682_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L682_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3053
 *         #if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByVVTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByVVTightIsolationMVA3newDMwLT")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVVT);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVVT);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByVVT);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3053; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3052
 *         self.tByVVTightIsolationMVA3newDMwLT_branch = the_tree.GetBranch("tByVVTightIsolationMVA3newDMwLT")
 *         #if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3newDMwLT_branch and "tByVVTightIsolationMVA3newDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVVTightIsolationMVA3newDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVVTightIsolationMVA3newDMwLT")
 */
    goto __pyx_L681;
  }

  /* "MuTauTree.pyx":3056
 *             #self.complained.add("tByVVTightIsolationMVA3newDMwLT")
 *         else:
 *             self.tByVVTightIsolationMVA3newDMwLT_branch.SetAddress(<void*>&self.tByVVTightIsolationMVA3newDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tByVVTightIsolationMVA3oldDMwLT"
 */
  /*else*/ {
    __pyx_v_self->tByVVTightIsolationMVA3newDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByVVTightIsolationMVA3newDMwLT_value)));
  }
  __pyx_L681:;

  /* "MuTauTree.pyx":3059
 * 
 *         #print "making tByVVTightIsolationMVA3oldDMwLT"
 *         self.tByVVTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVVTightIsolationMVA3oldDMwLT")             # <<<<<<<<<<<<<<
 *         #if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT":
 */
  __pyx_v_self->tByVVTightIsolationMVA3oldDMwLT_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tByVVTightIsolationMVA3oldDMwLT);

  /* "MuTauTree.pyx":3061
 *         self.tByVVTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVVTightIsolationMVA3oldDMwLT")
 *         #if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVVTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVVTightIsolationMVA3oldDMwLT")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tByVVTightIsolationMVA3oldDMwLT_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L685_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L685_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3062
 *         #if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT":
 *             warnings.warn( "MuTauTree: Expected branch tByVVTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tByVVTightIsolationMVA3oldDMwLT")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVVT_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tByVVT_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tByVVT_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3061
 *         self.tByVVTightIsolationMVA3oldDMwLT_branch = the_tree.GetBranch("tByVVTightIsolationMVA3oldDMwLT")
 *         #if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT" not in self.complained:
 *         if not self.tByVVTightIsolationMVA3oldDMwLT_branch and "tByVVTightIsolationMVA3oldDMwLT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tByVVTightIsolationMVA3oldDMwLT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tByVVTightIsolationMVA3oldDMwLT")
 */
    goto __pyx_L684;
  }

  /* "MuTauTree.pyx":3065
 *             #self.complained.add("tByVVTightIsolationMVA3oldDMwLT")
 *         else:
 *             self.tByVVTightIsolationMVA3oldDMwLT_branch.SetAddress(<void*>&self.tByVVTightIsolationMVA3oldDMwLT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tCharge"
 */
  /*else*/ {
    __pyx_v_self->tByVVTightIsolationMVA3oldDMwLT_branch->SetAddress(((void *)(&__pyx_v_self->tByVVTightIsolationMVA3oldDMwLT_value)));
  }
  __pyx_L684:;

  /* "MuTauTree.pyx":3068
 * 
 *         #print "making tCharge"
 *         self.tCharge_branch = the_tree.GetBranch("tCharge")             # <<<<<<<<<<<<<<
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":
 */
  __pyx_v_self->tCharge_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tCharge);

  /* "MuTauTree.pyx":3070
 *         self.tCharge_branch = the_tree.GetBranch("tCharge")
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tCharge")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tCharge_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L688_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L688_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3071
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":
 *             warnings.warn( "MuTauTree: Expected branch tCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tCharge")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tCharg);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tCharg);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tCharg);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3070
 *         self.tCharge_branch = the_tree.GetBranch("tCharge")
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tCharge")
 */
    goto __pyx_L687;
  }

  /* "MuTauTree.pyx":3074
 *             #self.complained.add("tCharge")
 *         else:
 *             self.tCharge_branch.SetAddress(<void*>&self.tCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tChargedIsoPtSum"
 */
  /*else*/ {
    __pyx_v_self->tCharge_branch->SetAddress(((void *)(&__pyx_v_self->tCharge_value)));
  }
  __pyx_L687:;

  /* "MuTauTree.pyx":3077
 * 
 *         #print "making tChargedIsoPtSum"
 *         self.tChargedIsoPtSum_branch = the_tree.GetBranch("tChargedIsoPtSum")             # <<<<<<<<<<<<<<
 *         #if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum" not in self.complained:
 *         if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum":
 */
  __pyx_v_self->tChargedIsoPtSum_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tChargedIsoPtSum);

  /* "MuTauTree.pyx":3079
 *         self.tChargedIsoPtSum_branch = the_tree.GetBranch("tChargedIsoPtSum")
 *         #if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum" not in self.complained:
 *         if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tChargedIsoPtSum does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tChargedIsoPtSum")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tChargedIsoPtSum_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L691_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L691_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3080
 *         #if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum" not in self.complained:
 *         if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum":
 *             warnings.warn( "MuTauTree: Expected branch tChargedIsoPtSum does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tChargedIsoPtSum")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tCharg_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tCharg_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tCharg_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3080; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3079
 *         self.tChargedIsoPtSum_branch = the_tree.GetBranch("tChargedIsoPtSum")
 *         #if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum" not in self.complained:
 *         if not self.tChargedIsoPtSum_branch and "tChargedIsoPtSum":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tChargedIsoPtSum does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tChargedIsoPtSum")
 */
    goto __pyx_L690;
  }

  /* "MuTauTree.pyx":3083
 *             #self.complained.add("tChargedIsoPtSum")
 *         else:
 *             self.tChargedIsoPtSum_branch.SetAddress(<void*>&self.tChargedIsoPtSum_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tDecayMode"
 */
  /*else*/ {
    __pyx_v_self->tChargedIsoPtSum_branch->SetAddress(((void *)(&__pyx_v_self->tChargedIsoPtSum_value)));
  }
  __pyx_L690:;

  /* "MuTauTree.pyx":3086
 * 
 *         #print "making tDecayMode"
 *         self.tDecayMode_branch = the_tree.GetBranch("tDecayMode")             # <<<<<<<<<<<<<<
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":
 */
  __pyx_v_self->tDecayMode_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tDecayMode);

  /* "MuTauTree.pyx":3088
 *         self.tDecayMode_branch = the_tree.GetBranch("tDecayMode")
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayMode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayMode")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tDecayMode_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L694_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L694_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3089
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":
 *             warnings.warn( "MuTauTree: Expected branch tDecayMode does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tDecayMode")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tDecay);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tDecay);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tDecay);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3088
 *         self.tDecayMode_branch = the_tree.GetBranch("tDecayMode")
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayMode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayMode")
 */
    goto __pyx_L693;
  }

  /* "MuTauTree.pyx":3092
 *             #self.complained.add("tDecayMode")
 *         else:
 *             self.tDecayMode_branch.SetAddress(<void*>&self.tDecayMode_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tDecayModeFinding"
 */
  /*else*/ {
    __pyx_v_self->tDecayMode_branch->SetAddress(((void *)(&__pyx_v_self->tDecayMode_value)));
  }
  __pyx_L693:;

  /* "MuTauTree.pyx":3095
 * 
 *         #print "making tDecayModeFinding"
 *         self.tDecayModeFinding_branch = the_tree.GetBranch("tDecayModeFinding")             # <<<<<<<<<<<<<<
 *         #if not self.tDecayModeFinding_branch and "tDecayModeFinding" not in self.complained:
 *         if not self.tDecayModeFinding_branch and "tDecayModeFinding":
 */
  __pyx_v_self->tDecayModeFinding_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tDecayModeFinding);

  /* "MuTauTree.pyx":3097
 *         self.tDecayModeFinding_branch = the_tree.GetBranch("tDecayModeFinding")
 *         #if not self.tDecayModeFinding_branch and "tDecayModeFinding" not in self.complained:
 *         if not self.tDecayModeFinding_branch and "tDecayModeFinding":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayModeFinding does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayModeFinding")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tDecayModeFinding_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L697_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L697_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3098
 *         #if not self.tDecayModeFinding_branch and "tDecayModeFinding" not in self.complained:
 *         if not self.tDecayModeFinding_branch and "tDecayModeFinding":
 *             warnings.warn( "MuTauTree: Expected branch tDecayModeFinding does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tDecayModeFinding")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tDecay_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tDecay_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tDecay_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3098; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3097
 *         self.tDecayModeFinding_branch = the_tree.GetBranch("tDecayModeFinding")
 *         #if not self.tDecayModeFinding_branch and "tDecayModeFinding" not in self.complained:
 *         if not self.tDecayModeFinding_branch and "tDecayModeFinding":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayModeFinding does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayModeFinding")
 */
    goto __pyx_L696;
  }

  /* "MuTauTree.pyx":3101
 *             #self.complained.add("tDecayModeFinding")
 *         else:
 *             self.tDecayModeFinding_branch.SetAddress(<void*>&self.tDecayModeFinding_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tDecayModeFindingNewDMs"
 */
  /*else*/ {
    __pyx_v_self->tDecayModeFinding_branch->SetAddress(((void *)(&__pyx_v_self->tDecayModeFinding_value)));
  }
  __pyx_L696:;

  /* "MuTauTree.pyx":3104
 * 
 *         #print "making tDecayModeFindingNewDMs"
 *         self.tDecayModeFindingNewDMs_branch = the_tree.GetBranch("tDecayModeFindingNewDMs")             # <<<<<<<<<<<<<<
 *         #if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs" not in self.complained:
 *         if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs":
 */
  __pyx_v_self->tDecayModeFindingNewDMs_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tDecayModeFindingNewDMs);

  /* "MuTauTree.pyx":3106
 *         self.tDecayModeFindingNewDMs_branch = the_tree.GetBranch("tDecayModeFindingNewDMs")
 *         #if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs" not in self.complained:
 *         if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayModeFindingNewDMs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayModeFindingNewDMs")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tDecayModeFindingNewDMs_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L700_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L700_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3107
 *         #if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs" not in self.complained:
 *         if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs":
 *             warnings.warn( "MuTauTree: Expected branch tDecayModeFindingNewDMs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tDecayModeFindingNewDMs")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tDecay_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tDecay_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tDecay_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3106
 *         self.tDecayModeFindingNewDMs_branch = the_tree.GetBranch("tDecayModeFindingNewDMs")
 *         #if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs" not in self.complained:
 *         if not self.tDecayModeFindingNewDMs_branch and "tDecayModeFindingNewDMs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayModeFindingNewDMs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayModeFindingNewDMs")
 */
    goto __pyx_L699;
  }

  /* "MuTauTree.pyx":3110
 *             #self.complained.add("tDecayModeFindingNewDMs")
 *         else:
 *             self.tDecayModeFindingNewDMs_branch.SetAddress(<void*>&self.tDecayModeFindingNewDMs_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tElecOverlap"
 */
  /*else*/ {
    __pyx_v_self->tDecayModeFindingNewDMs_branch->SetAddress(((void *)(&__pyx_v_self->tDecayModeFindingNewDMs_value)));
  }
  __pyx_L699:;

  /* "MuTauTree.pyx":3113
 * 
 *         #print "making tElecOverlap"
 *         self.tElecOverlap_branch = the_tree.GetBranch("tElecOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":
 */
  __pyx_v_self->tElecOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tElecOverlap);

  /* "MuTauTree.pyx":3115
 *         self.tElecOverlap_branch = the_tree.GetBranch("tElecOverlap")
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElecOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tElecOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L703_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L703_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3116
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tElecOverlap")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tElecO);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tElecO);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tElecO);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3115
 *         self.tElecOverlap_branch = the_tree.GetBranch("tElecOverlap")
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElecOverlap")
 */
    goto __pyx_L702;
  }

  /* "MuTauTree.pyx":3119
 *             #self.complained.add("tElecOverlap")
 *         else:
 *             self.tElecOverlap_branch.SetAddress(<void*>&self.tElecOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tElectronPt10IdIsoVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tElecOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tElecOverlap_value)));
  }
  __pyx_L702:;

  /* "MuTauTree.pyx":3122
 * 
 *         #print "making tElectronPt10IdIsoVtxOverlap"
 *         self.tElectronPt10IdIsoVtxOverlap_branch = the_tree.GetBranch("tElectronPt10IdIsoVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap":
 */
  __pyx_v_self->tElectronPt10IdIsoVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tElectronPt10IdIsoVtxOverlap);

  /* "MuTauTree.pyx":3124
 *         self.tElectronPt10IdIsoVtxOverlap_branch = the_tree.GetBranch("tElectronPt10IdIsoVtxOverlap")
 *         #if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt10IdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt10IdIsoVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tElectronPt10IdIsoVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L706_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L706_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3125
 *         #if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt10IdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tElectronPt10IdIsoVtxOverlap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tElect);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3124
 *         self.tElectronPt10IdIsoVtxOverlap_branch = the_tree.GetBranch("tElectronPt10IdIsoVtxOverlap")
 *         #if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdIsoVtxOverlap_branch and "tElectronPt10IdIsoVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt10IdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt10IdIsoVtxOverlap")
 */
    goto __pyx_L705;
  }

  /* "MuTauTree.pyx":3128
 *             #self.complained.add("tElectronPt10IdIsoVtxOverlap")
 *         else:
 *             self.tElectronPt10IdIsoVtxOverlap_branch.SetAddress(<void*>&self.tElectronPt10IdIsoVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tElectronPt10IdVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tElectronPt10IdIsoVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tElectronPt10IdIsoVtxOverlap_value)));
  }
  __pyx_L705:;

  /* "MuTauTree.pyx":3131
 * 
 *         #print "making tElectronPt10IdVtxOverlap"
 *         self.tElectronPt10IdVtxOverlap_branch = the_tree.GetBranch("tElectronPt10IdVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap":
 */
  __pyx_v_self->tElectronPt10IdVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tElectronPt10IdVtxOverlap);

  /* "MuTauTree.pyx":3133
 *         self.tElectronPt10IdVtxOverlap_branch = the_tree.GetBranch("tElectronPt10IdVtxOverlap")
 *         #if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt10IdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt10IdVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tElectronPt10IdVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L709_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L709_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3134
 *         #if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt10IdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tElectronPt10IdVtxOverlap")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tElect_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3133
 *         self.tElectronPt10IdVtxOverlap_branch = the_tree.GetBranch("tElectronPt10IdVtxOverlap")
 *         #if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt10IdVtxOverlap_branch and "tElectronPt10IdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt10IdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt10IdVtxOverlap")
 */
    goto __pyx_L708;
  }

  /* "MuTauTree.pyx":3137
 *             #self.complained.add("tElectronPt10IdVtxOverlap")
 *         else:
 *             self.tElectronPt10IdVtxOverlap_branch.SetAddress(<void*>&self.tElectronPt10IdVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tElectronPt15IdIsoVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tElectronPt10IdVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tElectronPt10IdVtxOverlap_value)));
  }
  __pyx_L708:;

  /* "MuTauTree.pyx":3140
 * 
 *         #print "making tElectronPt15IdIsoVtxOverlap"
 *         self.tElectronPt15IdIsoVtxOverlap_branch = the_tree.GetBranch("tElectronPt15IdIsoVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap":
 */
  __pyx_v_self->tElectronPt15IdIsoVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tElectronPt15IdIsoVtxOverlap);

  /* "MuTauTree.pyx":3142
 *         self.tElectronPt15IdIsoVtxOverlap_branch = the_tree.GetBranch("tElectronPt15IdIsoVtxOverlap")
 *         #if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt15IdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt15IdIsoVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tElectronPt15IdIsoVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L712_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L712_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3143
 *         #if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt15IdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tElectronPt15IdIsoVtxOverlap")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tElect_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3142
 *         self.tElectronPt15IdIsoVtxOverlap_branch = the_tree.GetBranch("tElectronPt15IdIsoVtxOverlap")
 *         #if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdIsoVtxOverlap_branch and "tElectronPt15IdIsoVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt15IdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt15IdIsoVtxOverlap")
 */
    goto __pyx_L711;
  }

  /* "MuTauTree.pyx":3146
 *             #self.complained.add("tElectronPt15IdIsoVtxOverlap")
 *         else:
 *             self.tElectronPt15IdIsoVtxOverlap_branch.SetAddress(<void*>&self.tElectronPt15IdIsoVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tElectronPt15IdVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tElectronPt15IdIsoVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tElectronPt15IdIsoVtxOverlap_value)));
  }
  __pyx_L711:;

  /* "MuTauTree.pyx":3149
 * 
 *         #print "making tElectronPt15IdVtxOverlap"
 *         self.tElectronPt15IdVtxOverlap_branch = the_tree.GetBranch("tElectronPt15IdVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap":
 */
  __pyx_v_self->tElectronPt15IdVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tElectronPt15IdVtxOverlap);

  /* "MuTauTree.pyx":3151
 *         self.tElectronPt15IdVtxOverlap_branch = the_tree.GetBranch("tElectronPt15IdVtxOverlap")
 *         #if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt15IdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt15IdVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tElectronPt15IdVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L715_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L715_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3152
 *         #if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt15IdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tElectronPt15IdVtxOverlap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tElect_4);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tElect_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3151
 *         self.tElectronPt15IdVtxOverlap_branch = the_tree.GetBranch("tElectronPt15IdVtxOverlap")
 *         #if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap" not in self.complained:
 *         if not self.tElectronPt15IdVtxOverlap_branch and "tElectronPt15IdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElectronPt15IdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElectronPt15IdVtxOverlap")
 */
    goto __pyx_L714;
  }

  /* "MuTauTree.pyx":3155
 *             #self.complained.add("tElectronPt15IdVtxOverlap")
 *         else:
 *             self.tElectronPt15IdVtxOverlap_branch.SetAddress(<void*>&self.tElectronPt15IdVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tEta"
 */
  /*else*/ {
    __pyx_v_self->tElectronPt15IdVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tElectronPt15IdVtxOverlap_value)));
  }
  __pyx_L714:;

  /* "MuTauTree.pyx":3158
 * 
 *         #print "making tEta"
 *         self.tEta_branch = the_tree.GetBranch("tEta")             # <<<<<<<<<<<<<<
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":
 */
  __pyx_v_self->tEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tEta);

  /* "MuTauTree.pyx":3160
 *         self.tEta_branch = the_tree.GetBranch("tEta")
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tEta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tEta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L718_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L718_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3161
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":
 *             warnings.warn( "MuTauTree: Expected branch tEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tEta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tEta_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tEta_d);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tEta_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3160
 *         self.tEta_branch = the_tree.GetBranch("tEta")
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tEta")
 */
    goto __pyx_L717;
  }

  /* "MuTauTree.pyx":3164
 *             #self.complained.add("tEta")
 *         else:
 *             self.tEta_branch.SetAddress(<void*>&self.tEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tGenDecayMode"
 */
  /*else*/ {
    __pyx_v_self->tEta_branch->SetAddress(((void *)(&__pyx_v_self->tEta_value)));
  }
  __pyx_L717:;

  /* "MuTauTree.pyx":3167
 * 
 *         #print "making tGenDecayMode"
 *         self.tGenDecayMode_branch = the_tree.GetBranch("tGenDecayMode")             # <<<<<<<<<<<<<<
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":
 */
  __pyx_v_self->tGenDecayMode_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tGenDecayMode);

  /* "MuTauTree.pyx":3169
 *         self.tGenDecayMode_branch = the_tree.GetBranch("tGenDecayMode")
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tGenDecayMode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tGenDecayMode")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tGenDecayMode_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L721_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L721_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3170
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":
 *             warnings.warn( "MuTauTree: Expected branch tGenDecayMode does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tGenDecayMode")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tGenDe);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tGenDe);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tGenDe);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3169
 *         self.tGenDecayMode_branch = the_tree.GetBranch("tGenDecayMode")
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tGenDecayMode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tGenDecayMode")
 */
    goto __pyx_L720;
  }

  /* "MuTauTree.pyx":3173
 *             #self.complained.add("tGenDecayMode")
 *         else:
 *             self.tGenDecayMode_branch.SetAddress(<void*>&self.tGenDecayMode_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tGlobalMuonVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tGenDecayMode_branch->SetAddress(((void *)(&__pyx_v_self->tGenDecayMode_value)));
  }
  __pyx_L720:;

  /* "MuTauTree.pyx":3176
 * 
 *         #print "making tGlobalMuonVtxOverlap"
 *         self.tGlobalMuonVtxOverlap_branch = the_tree.GetBranch("tGlobalMuonVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap" not in self.complained:
 *         if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap":
 */
  __pyx_v_self->tGlobalMuonVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tGlobalMuonVtxOverlap);

  /* "MuTauTree.pyx":3178
 *         self.tGlobalMuonVtxOverlap_branch = the_tree.GetBranch("tGlobalMuonVtxOverlap")
 *         #if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap" not in self.complained:
 *         if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tGlobalMuonVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tGlobalMuonVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tGlobalMuonVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L724_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L724_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3179
 *         #if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap" not in self.complained:
 *         if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tGlobalMuonVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tGlobalMuonVtxOverlap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tGloba);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tGloba);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tGloba);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3178
 *         self.tGlobalMuonVtxOverlap_branch = the_tree.GetBranch("tGlobalMuonVtxOverlap")
 *         #if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap" not in self.complained:
 *         if not self.tGlobalMuonVtxOverlap_branch and "tGlobalMuonVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tGlobalMuonVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tGlobalMuonVtxOverlap")
 */
    goto __pyx_L723;
  }

  /* "MuTauTree.pyx":3182
 *             #self.complained.add("tGlobalMuonVtxOverlap")
 *         else:
 *             self.tGlobalMuonVtxOverlap_branch.SetAddress(<void*>&self.tGlobalMuonVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetArea"
 */
  /*else*/ {
    __pyx_v_self->tGlobalMuonVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tGlobalMuonVtxOverlap_value)));
  }
  __pyx_L723:;

  /* "MuTauTree.pyx":3185
 * 
 *         #print "making tJetArea"
 *         self.tJetArea_branch = the_tree.GetBranch("tJetArea")             # <<<<<<<<<<<<<<
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":
 */
  __pyx_v_self->tJetArea_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetArea);

  /* "MuTauTree.pyx":3187
 *         self.tJetArea_branch = the_tree.GetBranch("tJetArea")
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetArea")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetArea_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L727_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L727_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3188
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":
 *             warnings.warn( "MuTauTree: Expected branch tJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetArea")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetAr);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetAr);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetAr);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3187
 *         self.tJetArea_branch = the_tree.GetBranch("tJetArea")
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetArea")
 */
    goto __pyx_L726;
  }

  /* "MuTauTree.pyx":3191
 *             #self.complained.add("tJetArea")
 *         else:
 *             self.tJetArea_branch.SetAddress(<void*>&self.tJetArea_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetBtag"
 */
  /*else*/ {
    __pyx_v_self->tJetArea_branch->SetAddress(((void *)(&__pyx_v_self->tJetArea_value)));
  }
  __pyx_L726:;

  /* "MuTauTree.pyx":3194
 * 
 *         #print "making tJetBtag"
 *         self.tJetBtag_branch = the_tree.GetBranch("tJetBtag")             # <<<<<<<<<<<<<<
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":
 */
  __pyx_v_self->tJetBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetBtag);

  /* "MuTauTree.pyx":3196
 *         self.tJetBtag_branch = the_tree.GetBranch("tJetBtag")
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L730_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L730_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3197
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":
 *             warnings.warn( "MuTauTree: Expected branch tJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetBtag")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetBt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetBt);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetBt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3196
 *         self.tJetBtag_branch = the_tree.GetBranch("tJetBtag")
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetBtag")
 */
    goto __pyx_L729;
  }

  /* "MuTauTree.pyx":3200
 *             #self.complained.add("tJetBtag")
 *         else:
 *             self.tJetBtag_branch.SetAddress(<void*>&self.tJetBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetEtaEtaMoment"
 */
  /*else*/ {
    __pyx_v_self->tJetBtag_branch->SetAddress(((void *)(&__pyx_v_self->tJetBtag_value)));
  }
  __pyx_L729:;

  /* "MuTauTree.pyx":3203
 * 
 *         #print "making tJetEtaEtaMoment"
 *         self.tJetEtaEtaMoment_branch = the_tree.GetBranch("tJetEtaEtaMoment")             # <<<<<<<<<<<<<<
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":
 */
  __pyx_v_self->tJetEtaEtaMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetEtaEtaMoment);

  /* "MuTauTree.pyx":3205
 *         self.tJetEtaEtaMoment_branch = the_tree.GetBranch("tJetEtaEtaMoment")
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaEtaMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetEtaEtaMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L733_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L733_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3206
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetEtaEtaMoment")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetEt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetEt);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetEt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3205
 *         self.tJetEtaEtaMoment_branch = the_tree.GetBranch("tJetEtaEtaMoment")
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaEtaMoment")
 */
    goto __pyx_L732;
  }

  /* "MuTauTree.pyx":3209
 *             #self.complained.add("tJetEtaEtaMoment")
 *         else:
 *             self.tJetEtaEtaMoment_branch.SetAddress(<void*>&self.tJetEtaEtaMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetEtaPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->tJetEtaEtaMoment_branch->SetAddress(((void *)(&__pyx_v_self->tJetEtaEtaMoment_value)));
  }
  __pyx_L732:;

  /* "MuTauTree.pyx":3212
 * 
 *         #print "making tJetEtaPhiMoment"
 *         self.tJetEtaPhiMoment_branch = the_tree.GetBranch("tJetEtaPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":
 */
  __pyx_v_self->tJetEtaPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetEtaPhiMoment);

  /* "MuTauTree.pyx":3214
 *         self.tJetEtaPhiMoment_branch = the_tree.GetBranch("tJetEtaPhiMoment")
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetEtaPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L736_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L736_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3215
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetEtaPhiMoment")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetEt_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3214
 *         self.tJetEtaPhiMoment_branch = the_tree.GetBranch("tJetEtaPhiMoment")
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaPhiMoment")
 */
    goto __pyx_L735;
  }

  /* "MuTauTree.pyx":3218
 *             #self.complained.add("tJetEtaPhiMoment")
 *         else:
 *             self.tJetEtaPhiMoment_branch.SetAddress(<void*>&self.tJetEtaPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetEtaPhiSpread"
 */
  /*else*/ {
    __pyx_v_self->tJetEtaPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->tJetEtaPhiMoment_value)));
  }
  __pyx_L735:;

  /* "MuTauTree.pyx":3221
 * 
 *         #print "making tJetEtaPhiSpread"
 *         self.tJetEtaPhiSpread_branch = the_tree.GetBranch("tJetEtaPhiSpread")             # <<<<<<<<<<<<<<
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":
 */
  __pyx_v_self->tJetEtaPhiSpread_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetEtaPhiSpread);

  /* "MuTauTree.pyx":3223
 *         self.tJetEtaPhiSpread_branch = the_tree.GetBranch("tJetEtaPhiSpread")
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaPhiSpread")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetEtaPhiSpread_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L739_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L739_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3224
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetEtaPhiSpread")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetEt_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3223
 *         self.tJetEtaPhiSpread_branch = the_tree.GetBranch("tJetEtaPhiSpread")
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaPhiSpread")
 */
    goto __pyx_L738;
  }

  /* "MuTauTree.pyx":3227
 *             #self.complained.add("tJetEtaPhiSpread")
 *         else:
 *             self.tJetEtaPhiSpread_branch.SetAddress(<void*>&self.tJetEtaPhiSpread_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetPFCISVBtag"
 */
  /*else*/ {
    __pyx_v_self->tJetEtaPhiSpread_branch->SetAddress(((void *)(&__pyx_v_self->tJetEtaPhiSpread_value)));
  }
  __pyx_L738:;

  /* "MuTauTree.pyx":3230
 * 
 *         #print "making tJetPFCISVBtag"
 *         self.tJetPFCISVBtag_branch = the_tree.GetBranch("tJetPFCISVBtag")             # <<<<<<<<<<<<<<
 *         #if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag" not in self.complained:
 *         if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag":
 */
  __pyx_v_self->tJetPFCISVBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetPFCISVBtag);

  /* "MuTauTree.pyx":3232
 *         self.tJetPFCISVBtag_branch = the_tree.GetBranch("tJetPFCISVBtag")
 *         #if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag" not in self.complained:
 *         if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPFCISVBtag")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetPFCISVBtag_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L742_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L742_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3233
 *         #if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag" not in self.complained:
 *         if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag":
 *             warnings.warn( "MuTauTree: Expected branch tJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetPFCISVBtag")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPF);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPF);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetPF);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3232
 *         self.tJetPFCISVBtag_branch = the_tree.GetBranch("tJetPFCISVBtag")
 *         #if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag" not in self.complained:
 *         if not self.tJetPFCISVBtag_branch and "tJetPFCISVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPFCISVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPFCISVBtag")
 */
    goto __pyx_L741;
  }

  /* "MuTauTree.pyx":3236
 *             #self.complained.add("tJetPFCISVBtag")
 *         else:
 *             self.tJetPFCISVBtag_branch.SetAddress(<void*>&self.tJetPFCISVBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetPartonFlavour"
 */
  /*else*/ {
    __pyx_v_self->tJetPFCISVBtag_branch->SetAddress(((void *)(&__pyx_v_self->tJetPFCISVBtag_value)));
  }
  __pyx_L741:;

  /* "MuTauTree.pyx":3239
 * 
 *         #print "making tJetPartonFlavour"
 *         self.tJetPartonFlavour_branch = the_tree.GetBranch("tJetPartonFlavour")             # <<<<<<<<<<<<<<
 *         #if not self.tJetPartonFlavour_branch and "tJetPartonFlavour" not in self.complained:
 *         if not self.tJetPartonFlavour_branch and "tJetPartonFlavour":
 */
  __pyx_v_self->tJetPartonFlavour_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetPartonFlavour);

  /* "MuTauTree.pyx":3241
 *         self.tJetPartonFlavour_branch = the_tree.GetBranch("tJetPartonFlavour")
 *         #if not self.tJetPartonFlavour_branch and "tJetPartonFlavour" not in self.complained:
 *         if not self.tJetPartonFlavour_branch and "tJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPartonFlavour")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetPartonFlavour_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L745_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L745_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3242
 *         #if not self.tJetPartonFlavour_branch and "tJetPartonFlavour" not in self.complained:
 *         if not self.tJetPartonFlavour_branch and "tJetPartonFlavour":
 *             warnings.warn( "MuTauTree: Expected branch tJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetPartonFlavour")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPa);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPa);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetPa);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3241
 *         self.tJetPartonFlavour_branch = the_tree.GetBranch("tJetPartonFlavour")
 *         #if not self.tJetPartonFlavour_branch and "tJetPartonFlavour" not in self.complained:
 *         if not self.tJetPartonFlavour_branch and "tJetPartonFlavour":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPartonFlavour does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPartonFlavour")
 */
    goto __pyx_L744;
  }

  /* "MuTauTree.pyx":3245
 *             #self.complained.add("tJetPartonFlavour")
 *         else:
 *             self.tJetPartonFlavour_branch.SetAddress(<void*>&self.tJetPartonFlavour_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetPhiPhiMoment"
 */
  /*else*/ {
    __pyx_v_self->tJetPartonFlavour_branch->SetAddress(((void *)(&__pyx_v_self->tJetPartonFlavour_value)));
  }
  __pyx_L744:;

  /* "MuTauTree.pyx":3248
 * 
 *         #print "making tJetPhiPhiMoment"
 *         self.tJetPhiPhiMoment_branch = the_tree.GetBranch("tJetPhiPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":
 */
  __pyx_v_self->tJetPhiPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetPhiPhiMoment);

  /* "MuTauTree.pyx":3250
 *         self.tJetPhiPhiMoment_branch = the_tree.GetBranch("tJetPhiPhiMoment")
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPhiPhiMoment")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetPhiPhiMoment_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L748_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L748_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3251
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch tJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetPhiPhiMoment")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPh);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPh);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetPh);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3250
 *         self.tJetPhiPhiMoment_branch = the_tree.GetBranch("tJetPhiPhiMoment")
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPhiPhiMoment")
 */
    goto __pyx_L747;
  }

  /* "MuTauTree.pyx":3254
 *             #self.complained.add("tJetPhiPhiMoment")
 *         else:
 *             self.tJetPhiPhiMoment_branch.SetAddress(<void*>&self.tJetPhiPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetPt"
 */
  /*else*/ {
    __pyx_v_self->tJetPhiPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->tJetPhiPhiMoment_value)));
  }
  __pyx_L747:;

  /* "MuTauTree.pyx":3257
 * 
 *         #print "making tJetPt"
 *         self.tJetPt_branch = the_tree.GetBranch("tJetPt")             # <<<<<<<<<<<<<<
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":
 */
  __pyx_v_self->tJetPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tJetPt);

  /* "MuTauTree.pyx":3259
 *         self.tJetPt_branch = the_tree.GetBranch("tJetPt")
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tJetPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L751_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L751_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3260
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":
 *             warnings.warn( "MuTauTree: Expected branch tJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetPt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPt);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tJetPt);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tJetPt);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3259
 *         self.tJetPt_branch = the_tree.GetBranch("tJetPt")
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPt")
 */
    goto __pyx_L750;
  }

  /* "MuTauTree.pyx":3263
 *             #self.complained.add("tJetPt")
 *         else:
 *             self.tJetPt_branch.SetAddress(<void*>&self.tJetPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLeadTrackPt"
 */
  /*else*/ {
    __pyx_v_self->tJetPt_branch->SetAddress(((void *)(&__pyx_v_self->tJetPt_value)));
  }
  __pyx_L750:;

  /* "MuTauTree.pyx":3266
 * 
 *         #print "making tLeadTrackPt"
 *         self.tLeadTrackPt_branch = the_tree.GetBranch("tLeadTrackPt")             # <<<<<<<<<<<<<<
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":
 */
  __pyx_v_self->tLeadTrackPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tLeadTrackPt);

  /* "MuTauTree.pyx":3268
 *         self.tLeadTrackPt_branch = the_tree.GetBranch("tLeadTrackPt")
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLeadTrackPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLeadTrackPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tLeadTrackPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L754_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L754_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3269
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":
 *             warnings.warn( "MuTauTree: Expected branch tLeadTrackPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLeadTrackPt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tLeadT);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tLeadT);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tLeadT);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3268
 *         self.tLeadTrackPt_branch = the_tree.GetBranch("tLeadTrackPt")
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLeadTrackPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLeadTrackPt")
 */
    goto __pyx_L753;
  }

  /* "MuTauTree.pyx":3272
 *             #self.complained.add("tLeadTrackPt")
 *         else:
 *             self.tLeadTrackPt_branch.SetAddress(<void*>&self.tLeadTrackPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLowestMll"
 */
  /*else*/ {
    __pyx_v_self->tLeadTrackPt_branch->SetAddress(((void *)(&__pyx_v_self->tLeadTrackPt_value)));
  }
  __pyx_L753:;

  /* "MuTauTree.pyx":3275
 * 
 *         #print "making tLowestMll"
 *         self.tLowestMll_branch = the_tree.GetBranch("tLowestMll")             # <<<<<<<<<<<<<<
 *         #if not self.tLowestMll_branch and "tLowestMll" not in self.complained:
 *         if not self.tLowestMll_branch and "tLowestMll":
 */
  __pyx_v_self->tLowestMll_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tLowestMll);

  /* "MuTauTree.pyx":3277
 *         self.tLowestMll_branch = the_tree.GetBranch("tLowestMll")
 *         #if not self.tLowestMll_branch and "tLowestMll" not in self.complained:
 *         if not self.tLowestMll_branch and "tLowestMll":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLowestMll does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLowestMll")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tLowestMll_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L757_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L757_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3278
 *         #if not self.tLowestMll_branch and "tLowestMll" not in self.complained:
 *         if not self.tLowestMll_branch and "tLowestMll":
 *             warnings.warn( "MuTauTree: Expected branch tLowestMll does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLowestMll")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tLowes);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tLowes);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tLowes);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3277
 *         self.tLowestMll_branch = the_tree.GetBranch("tLowestMll")
 *         #if not self.tLowestMll_branch and "tLowestMll" not in self.complained:
 *         if not self.tLowestMll_branch and "tLowestMll":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLowestMll does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLowestMll")
 */
    goto __pyx_L756;
  }

  /* "MuTauTree.pyx":3281
 *             #self.complained.add("tLowestMll")
 *         else:
 *             self.tLowestMll_branch.SetAddress(<void*>&self.tLowestMll_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMass"
 */
  /*else*/ {
    __pyx_v_self->tLowestMll_branch->SetAddress(((void *)(&__pyx_v_self->tLowestMll_value)));
  }
  __pyx_L756:;

  /* "MuTauTree.pyx":3284
 * 
 *         #print "making tMass"
 *         self.tMass_branch = the_tree.GetBranch("tMass")             # <<<<<<<<<<<<<<
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":
 */
  __pyx_v_self->tMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMass);

  /* "MuTauTree.pyx":3286
 *         self.tMass_branch = the_tree.GetBranch("tMass")
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L760_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L760_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3287
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":
 *             warnings.warn( "MuTauTree: Expected branch tMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMass);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMass);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMass);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3286
 *         self.tMass_branch = the_tree.GetBranch("tMass")
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMass")
 */
    goto __pyx_L759;
  }

  /* "MuTauTree.pyx":3290
 *             #self.complained.add("tMass")
 *         else:
 *             self.tMass_branch.SetAddress(<void*>&self.tMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToMET"
 */
  /*else*/ {
    __pyx_v_self->tMass_branch->SetAddress(((void *)(&__pyx_v_self->tMass_value)));
  }
  __pyx_L759:;

  /* "MuTauTree.pyx":3293
 * 
 *         #print "making tMtToMET"
 *         self.tMtToMET_branch = the_tree.GetBranch("tMtToMET")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":
 */
  __pyx_v_self->tMtToMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToMET);

  /* "MuTauTree.pyx":3295
 *         self.tMtToMET_branch = the_tree.GetBranch("tMtToMET")
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToMET")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToMET_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L763_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L763_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3296
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":
 *             warnings.warn( "MuTauTree: Expected branch tMtToMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToMET")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToM);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToM);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToM);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3295
 *         self.tMtToMET_branch = the_tree.GetBranch("tMtToMET")
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToMET")
 */
    goto __pyx_L762;
  }

  /* "MuTauTree.pyx":3299
 *             #self.complained.add("tMtToMET")
 *         else:
 *             self.tMtToMET_branch.SetAddress(<void*>&self.tMtToMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPFMET"
 */
  /*else*/ {
    __pyx_v_self->tMtToMET_branch->SetAddress(((void *)(&__pyx_v_self->tMtToMET_value)));
  }
  __pyx_L762:;

  /* "MuTauTree.pyx":3302
 * 
 *         #print "making tMtToPFMET"
 *         self.tMtToPFMET_branch = the_tree.GetBranch("tMtToPFMET")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":
 */
  __pyx_v_self->tMtToPFMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToPFMET);

  /* "MuTauTree.pyx":3304
 *         self.tMtToPFMET_branch = the_tree.GetBranch("tMtToPFMET")
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPFMET")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToPFMET_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L766_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L766_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3305
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPFMET")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToP);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3304
 *         self.tMtToPFMET_branch = the_tree.GetBranch("tMtToPFMET")
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPFMET")
 */
    goto __pyx_L765;
  }

  /* "MuTauTree.pyx":3308
 *             #self.complained.add("tMtToPFMET")
 *         else:
 *             self.tMtToPFMET_branch.SetAddress(<void*>&self.tMtToPFMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_Ty1"
 */
  /*else*/ {
    __pyx_v_self->tMtToPFMET_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPFMET_value)));
  }
  __pyx_L765:;

  /* "MuTauTree.pyx":3311
 * 
 *         #print "making tMtToPfMet_Ty1"
 *         self.tMtToPfMet_Ty1_branch = the_tree.GetBranch("tMtToPfMet_Ty1")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":
 */
  __pyx_v_self->tMtToPfMet_Ty1_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToPfMet_Ty1);

  /* "MuTauTree.pyx":3313
 *         self.tMtToPfMet_Ty1_branch = the_tree.GetBranch("tMtToPfMet_Ty1")
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_Ty1")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToPfMet_Ty1_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L769_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L769_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3314
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_Ty1")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToP_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3313
 *         self.tMtToPfMet_Ty1_branch = the_tree.GetBranch("tMtToPfMet_Ty1")
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_Ty1")
 */
    goto __pyx_L768;
  }

  /* "MuTauTree.pyx":3317
 *             #self.complained.add("tMtToPfMet_Ty1")
 *         else:
 *             self.tMtToPfMet_Ty1_branch.SetAddress(<void*>&self.tMtToPfMet_Ty1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_jes"
 */
  /*else*/ {
    __pyx_v_self->tMtToPfMet_Ty1_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_Ty1_value)));
  }
  __pyx_L768:;

  /* "MuTauTree.pyx":3320
 * 
 *         #print "making tMtToPfMet_jes"
 *         self.tMtToPfMet_jes_branch = the_tree.GetBranch("tMtToPfMet_jes")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":
 */
  __pyx_v_self->tMtToPfMet_jes_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToPfMet_jes);

  /* "MuTauTree.pyx":3322
 *         self.tMtToPfMet_jes_branch = the_tree.GetBranch("tMtToPfMet_jes")
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_jes")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToPfMet_jes_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L772_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L772_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3323
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_jes")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToP_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3322
 *         self.tMtToPfMet_jes_branch = the_tree.GetBranch("tMtToPfMet_jes")
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_jes")
 */
    goto __pyx_L771;
  }

  /* "MuTauTree.pyx":3326
 *             #self.complained.add("tMtToPfMet_jes")
 *         else:
 *             self.tMtToPfMet_jes_branch.SetAddress(<void*>&self.tMtToPfMet_jes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_mes"
 */
  /*else*/ {
    __pyx_v_self->tMtToPfMet_jes_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_jes_value)));
  }
  __pyx_L771:;

  /* "MuTauTree.pyx":3329
 * 
 *         #print "making tMtToPfMet_mes"
 *         self.tMtToPfMet_mes_branch = the_tree.GetBranch("tMtToPfMet_mes")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":
 */
  __pyx_v_self->tMtToPfMet_mes_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToPfMet_mes);

  /* "MuTauTree.pyx":3331
 *         self.tMtToPfMet_mes_branch = the_tree.GetBranch("tMtToPfMet_mes")
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_mes")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToPfMet_mes_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L775_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L775_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3332
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_mes")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToP_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3331
 *         self.tMtToPfMet_mes_branch = the_tree.GetBranch("tMtToPfMet_mes")
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_mes")
 */
    goto __pyx_L774;
  }

  /* "MuTauTree.pyx":3335
 *             #self.complained.add("tMtToPfMet_mes")
 *         else:
 *             self.tMtToPfMet_mes_branch.SetAddress(<void*>&self.tMtToPfMet_mes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_tes"
 */
  /*else*/ {
    __pyx_v_self->tMtToPfMet_mes_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_mes_value)));
  }
  __pyx_L774:;

  /* "MuTauTree.pyx":3338
 * 
 *         #print "making tMtToPfMet_tes"
 *         self.tMtToPfMet_tes_branch = the_tree.GetBranch("tMtToPfMet_tes")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":
 */
  __pyx_v_self->tMtToPfMet_tes_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToPfMet_tes);

  /* "MuTauTree.pyx":3340
 *         self.tMtToPfMet_tes_branch = the_tree.GetBranch("tMtToPfMet_tes")
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_tes")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToPfMet_tes_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L778_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L778_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3341
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_tes")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToP_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3340
 *         self.tMtToPfMet_tes_branch = the_tree.GetBranch("tMtToPfMet_tes")
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_tes")
 */
    goto __pyx_L777;
  }

  /* "MuTauTree.pyx":3344
 *             #self.complained.add("tMtToPfMet_tes")
 *         else:
 *             self.tMtToPfMet_tes_branch.SetAddress(<void*>&self.tMtToPfMet_tes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_ues"
 */
  /*else*/ {
    __pyx_v_self->tMtToPfMet_tes_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_tes_value)));
  }
  __pyx_L777:;

  /* "MuTauTree.pyx":3347
 * 
 *         #print "making tMtToPfMet_ues"
 *         self.tMtToPfMet_ues_branch = the_tree.GetBranch("tMtToPfMet_ues")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":
 */
  __pyx_v_self->tMtToPfMet_ues_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMtToPfMet_ues);

  /* "MuTauTree.pyx":3349
 *         self.tMtToPfMet_ues_branch = the_tree.GetBranch("tMtToPfMet_ues")
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_ues")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMtToPfMet_ues_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L781_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L781_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3350
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_ues")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMtToP_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3349
 *         self.tMtToPfMet_ues_branch = the_tree.GetBranch("tMtToPfMet_ues")
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_ues")
 */
    goto __pyx_L780;
  }

  /* "MuTauTree.pyx":3353
 *             #self.complained.add("tMtToPfMet_ues")
 *         else:
 *             self.tMtToPfMet_ues_branch.SetAddress(<void*>&self.tMtToPfMet_ues_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMuOverlap"
 */
  /*else*/ {
    __pyx_v_self->tMtToPfMet_ues_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_ues_value)));
  }
  __pyx_L780:;

  /* "MuTauTree.pyx":3356
 * 
 *         #print "making tMuOverlap"
 *         self.tMuOverlap_branch = the_tree.GetBranch("tMuOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":
 */
  __pyx_v_self->tMuOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMuOverlap);

  /* "MuTauTree.pyx":3358
 *         self.tMuOverlap_branch = the_tree.GetBranch("tMuOverlap")
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMuOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L784_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L784_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3359
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tMuOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMuOverlap")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuOve);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuOve);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMuOve);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3358
 *         self.tMuOverlap_branch = the_tree.GetBranch("tMuOverlap")
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuOverlap")
 */
    goto __pyx_L783;
  }

  /* "MuTauTree.pyx":3362
 *             #self.complained.add("tMuOverlap")
 *         else:
 *             self.tMuOverlap_branch.SetAddress(<void*>&self.tMuOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMuonIdIsoStdVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tMuOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tMuOverlap_value)));
  }
  __pyx_L783:;

  /* "MuTauTree.pyx":3365
 * 
 *         #print "making tMuonIdIsoStdVtxOverlap"
 *         self.tMuonIdIsoStdVtxOverlap_branch = the_tree.GetBranch("tMuonIdIsoStdVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap":
 */
  __pyx_v_self->tMuonIdIsoStdVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMuonIdIsoStdVtxOverlap);

  /* "MuTauTree.pyx":3367
 *         self.tMuonIdIsoStdVtxOverlap_branch = the_tree.GetBranch("tMuonIdIsoStdVtxOverlap")
 *         #if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdIsoStdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuonIdIsoStdVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMuonIdIsoStdVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L787_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L787_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3368
 *         #if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdIsoStdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMuonIdIsoStdVtxOverlap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuonI);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuonI);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMuonI);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3368; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3367
 *         self.tMuonIdIsoStdVtxOverlap_branch = the_tree.GetBranch("tMuonIdIsoStdVtxOverlap")
 *         #if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoStdVtxOverlap_branch and "tMuonIdIsoStdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdIsoStdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuonIdIsoStdVtxOverlap")
 */
    goto __pyx_L786;
  }

  /* "MuTauTree.pyx":3371
 *             #self.complained.add("tMuonIdIsoStdVtxOverlap")
 *         else:
 *             self.tMuonIdIsoStdVtxOverlap_branch.SetAddress(<void*>&self.tMuonIdIsoStdVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMuonIdIsoVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tMuonIdIsoStdVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tMuonIdIsoStdVtxOverlap_value)));
  }
  __pyx_L786:;

  /* "MuTauTree.pyx":3374
 * 
 *         #print "making tMuonIdIsoVtxOverlap"
 *         self.tMuonIdIsoVtxOverlap_branch = the_tree.GetBranch("tMuonIdIsoVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap":
 */
  __pyx_v_self->tMuonIdIsoVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMuonIdIsoVtxOverlap);

  /* "MuTauTree.pyx":3376
 *         self.tMuonIdIsoVtxOverlap_branch = the_tree.GetBranch("tMuonIdIsoVtxOverlap")
 *         #if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuonIdIsoVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMuonIdIsoVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L790_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L790_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3377
 *         #if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMuonIdIsoVtxOverlap")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMuonI_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3376
 *         self.tMuonIdIsoVtxOverlap_branch = the_tree.GetBranch("tMuonIdIsoVtxOverlap")
 *         #if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap" not in self.complained:
 *         if not self.tMuonIdIsoVtxOverlap_branch and "tMuonIdIsoVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdIsoVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuonIdIsoVtxOverlap")
 */
    goto __pyx_L789;
  }

  /* "MuTauTree.pyx":3380
 *             #self.complained.add("tMuonIdIsoVtxOverlap")
 *         else:
 *             self.tMuonIdIsoVtxOverlap_branch.SetAddress(<void*>&self.tMuonIdIsoVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMuonIdVtxOverlap"
 */
  /*else*/ {
    __pyx_v_self->tMuonIdIsoVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tMuonIdIsoVtxOverlap_value)));
  }
  __pyx_L789:;

  /* "MuTauTree.pyx":3383
 * 
 *         #print "making tMuonIdVtxOverlap"
 *         self.tMuonIdVtxOverlap_branch = the_tree.GetBranch("tMuonIdVtxOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap":
 */
  __pyx_v_self->tMuonIdVtxOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tMuonIdVtxOverlap);

  /* "MuTauTree.pyx":3385
 *         self.tMuonIdVtxOverlap_branch = the_tree.GetBranch("tMuonIdVtxOverlap")
 *         #if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuonIdVtxOverlap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tMuonIdVtxOverlap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L793_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L793_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3386
 *         #if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMuonIdVtxOverlap")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tMuonI_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3385
 *         self.tMuonIdVtxOverlap_branch = the_tree.GetBranch("tMuonIdVtxOverlap")
 *         #if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap" not in self.complained:
 *         if not self.tMuonIdVtxOverlap_branch and "tMuonIdVtxOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuonIdVtxOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuonIdVtxOverlap")
 */
    goto __pyx_L792;
  }

  /* "MuTauTree.pyx":3389
 *             #self.complained.add("tMuonIdVtxOverlap")
 *         else:
 *             self.tMuonIdVtxOverlap_branch.SetAddress(<void*>&self.tMuonIdVtxOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tNearestZMass"
 */
  /*else*/ {
    __pyx_v_self->tMuonIdVtxOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tMuonIdVtxOverlap_value)));
  }
  __pyx_L792:;

  /* "MuTauTree.pyx":3392
 * 
 *         #print "making tNearestZMass"
 *         self.tNearestZMass_branch = the_tree.GetBranch("tNearestZMass")             # <<<<<<<<<<<<<<
 *         #if not self.tNearestZMass_branch and "tNearestZMass" not in self.complained:
 *         if not self.tNearestZMass_branch and "tNearestZMass":
 */
  __pyx_v_self->tNearestZMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tNearestZMass);

  /* "MuTauTree.pyx":3394
 *         self.tNearestZMass_branch = the_tree.GetBranch("tNearestZMass")
 *         #if not self.tNearestZMass_branch and "tNearestZMass" not in self.complained:
 *         if not self.tNearestZMass_branch and "tNearestZMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tNearestZMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tNearestZMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tNearestZMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L796_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L796_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3395
 *         #if not self.tNearestZMass_branch and "tNearestZMass" not in self.complained:
 *         if not self.tNearestZMass_branch and "tNearestZMass":
 *             warnings.warn( "MuTauTree: Expected branch tNearestZMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tNearestZMass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tNeare);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tNeare);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tNeare);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3394
 *         self.tNearestZMass_branch = the_tree.GetBranch("tNearestZMass")
 *         #if not self.tNearestZMass_branch and "tNearestZMass" not in self.complained:
 *         if not self.tNearestZMass_branch and "tNearestZMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tNearestZMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tNearestZMass")
 */
    goto __pyx_L795;
  }

  /* "MuTauTree.pyx":3398
 *             #self.complained.add("tNearestZMass")
 *         else:
 *             self.tNearestZMass_branch.SetAddress(<void*>&self.tNearestZMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tNeutralIsoPtSum"
 */
  /*else*/ {
    __pyx_v_self->tNearestZMass_branch->SetAddress(((void *)(&__pyx_v_self->tNearestZMass_value)));
  }
  __pyx_L795:;

  /* "MuTauTree.pyx":3401
 * 
 *         #print "making tNeutralIsoPtSum"
 *         self.tNeutralIsoPtSum_branch = the_tree.GetBranch("tNeutralIsoPtSum")             # <<<<<<<<<<<<<<
 *         #if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum" not in self.complained:
 *         if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum":
 */
  __pyx_v_self->tNeutralIsoPtSum_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tNeutralIsoPtSum);

  /* "MuTauTree.pyx":3403
 *         self.tNeutralIsoPtSum_branch = the_tree.GetBranch("tNeutralIsoPtSum")
 *         #if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum" not in self.complained:
 *         if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tNeutralIsoPtSum does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tNeutralIsoPtSum")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tNeutralIsoPtSum_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L799_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L799_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3404
 *         #if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum" not in self.complained:
 *         if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum":
 *             warnings.warn( "MuTauTree: Expected branch tNeutralIsoPtSum does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tNeutralIsoPtSum")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tNeutr);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tNeutr);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tNeutr);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3404; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3403
 *         self.tNeutralIsoPtSum_branch = the_tree.GetBranch("tNeutralIsoPtSum")
 *         #if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum" not in self.complained:
 *         if not self.tNeutralIsoPtSum_branch and "tNeutralIsoPtSum":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tNeutralIsoPtSum does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tNeutralIsoPtSum")
 */
    goto __pyx_L798;
  }

  /* "MuTauTree.pyx":3407
 *             #self.complained.add("tNeutralIsoPtSum")
 *         else:
 *             self.tNeutralIsoPtSum_branch.SetAddress(<void*>&self.tNeutralIsoPtSum_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPVDXY"
 */
  /*else*/ {
    __pyx_v_self->tNeutralIsoPtSum_branch->SetAddress(((void *)(&__pyx_v_self->tNeutralIsoPtSum_value)));
  }
  __pyx_L798:;

  /* "MuTauTree.pyx":3410
 * 
 *         #print "making tPVDXY"
 *         self.tPVDXY_branch = the_tree.GetBranch("tPVDXY")             # <<<<<<<<<<<<<<
 *         #if not self.tPVDXY_branch and "tPVDXY" not in self.complained:
 *         if not self.tPVDXY_branch and "tPVDXY":
 */
  __pyx_v_self->tPVDXY_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tPVDXY);

  /* "MuTauTree.pyx":3412
 *         self.tPVDXY_branch = the_tree.GetBranch("tPVDXY")
 *         #if not self.tPVDXY_branch and "tPVDXY" not in self.complained:
 *         if not self.tPVDXY_branch and "tPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPVDXY")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tPVDXY_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L802_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L802_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3413
 *         #if not self.tPVDXY_branch and "tPVDXY" not in self.complained:
 *         if not self.tPVDXY_branch and "tPVDXY":
 *             warnings.warn( "MuTauTree: Expected branch tPVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPVDXY")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tPVDXY);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tPVDXY);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tPVDXY);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3412
 *         self.tPVDXY_branch = the_tree.GetBranch("tPVDXY")
 *         #if not self.tPVDXY_branch and "tPVDXY" not in self.complained:
 *         if not self.tPVDXY_branch and "tPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPVDXY")
 */
    goto __pyx_L801;
  }

  /* "MuTauTree.pyx":3416
 *             #self.complained.add("tPVDXY")
 *         else:
 *             self.tPVDXY_branch.SetAddress(<void*>&self.tPVDXY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPVDZ"
 */
  /*else*/ {
    __pyx_v_self->tPVDXY_branch->SetAddress(((void *)(&__pyx_v_self->tPVDXY_value)));
  }
  __pyx_L801:;

  /* "MuTauTree.pyx":3419
 * 
 *         #print "making tPVDZ"
 *         self.tPVDZ_branch = the_tree.GetBranch("tPVDZ")             # <<<<<<<<<<<<<<
 *         #if not self.tPVDZ_branch and "tPVDZ" not in self.complained:
 *         if not self.tPVDZ_branch and "tPVDZ":
 */
  __pyx_v_self->tPVDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tPVDZ);

  /* "MuTauTree.pyx":3421
 *         self.tPVDZ_branch = the_tree.GetBranch("tPVDZ")
 *         #if not self.tPVDZ_branch and "tPVDZ" not in self.complained:
 *         if not self.tPVDZ_branch and "tPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPVDZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tPVDZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L805_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L805_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3422
 *         #if not self.tPVDZ_branch and "tPVDZ" not in self.complained:
 *         if not self.tPVDZ_branch and "tPVDZ":
 *             warnings.warn( "MuTauTree: Expected branch tPVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPVDZ")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tPVDZ);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tPVDZ);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tPVDZ);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3421
 *         self.tPVDZ_branch = the_tree.GetBranch("tPVDZ")
 *         #if not self.tPVDZ_branch and "tPVDZ" not in self.complained:
 *         if not self.tPVDZ_branch and "tPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPVDZ")
 */
    goto __pyx_L804;
  }

  /* "MuTauTree.pyx":3425
 *             #self.complained.add("tPVDZ")
 *         else:
 *             self.tPVDZ_branch.SetAddress(<void*>&self.tPVDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPhi"
 */
  /*else*/ {
    __pyx_v_self->tPVDZ_branch->SetAddress(((void *)(&__pyx_v_self->tPVDZ_value)));
  }
  __pyx_L804:;

  /* "MuTauTree.pyx":3428
 * 
 *         #print "making tPhi"
 *         self.tPhi_branch = the_tree.GetBranch("tPhi")             # <<<<<<<<<<<<<<
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":
 */
  __pyx_v_self->tPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tPhi);

  /* "MuTauTree.pyx":3430
 *         self.tPhi_branch = the_tree.GetBranch("tPhi")
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L808_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L808_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3431
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":
 *             warnings.warn( "MuTauTree: Expected branch tPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPhi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tPhi_d);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tPhi_d);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tPhi_d);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3430
 *         self.tPhi_branch = the_tree.GetBranch("tPhi")
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPhi")
 */
    goto __pyx_L807;
  }

  /* "MuTauTree.pyx":3434
 *             #self.complained.add("tPhi")
 *         else:
 *             self.tPhi_branch.SetAddress(<void*>&self.tPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPt"
 */
  /*else*/ {
    __pyx_v_self->tPhi_branch->SetAddress(((void *)(&__pyx_v_self->tPhi_value)));
  }
  __pyx_L807:;

  /* "MuTauTree.pyx":3437
 * 
 *         #print "making tPt"
 *         self.tPt_branch = the_tree.GetBranch("tPt")             # <<<<<<<<<<<<<<
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":
 */
  __pyx_v_self->tPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tPt);

  /* "MuTauTree.pyx":3439
 *         self.tPt_branch = the_tree.GetBranch("tPt")
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tPt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L811_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L811_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3440
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":
 *             warnings.warn( "MuTauTree: Expected branch tPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tPt_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tPt_do);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tPt_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3439
 *         self.tPt_branch = the_tree.GetBranch("tPt")
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPt")
 */
    goto __pyx_L810;
  }

  /* "MuTauTree.pyx":3443
 *             #self.complained.add("tPt")
 *         else:
 *             self.tPt_branch.SetAddress(<void*>&self.tPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPuCorrPtSum"
 */
  /*else*/ {
    __pyx_v_self->tPt_branch->SetAddress(((void *)(&__pyx_v_self->tPt_value)));
  }
  __pyx_L810:;

  /* "MuTauTree.pyx":3446
 * 
 *         #print "making tPuCorrPtSum"
 *         self.tPuCorrPtSum_branch = the_tree.GetBranch("tPuCorrPtSum")             # <<<<<<<<<<<<<<
 *         #if not self.tPuCorrPtSum_branch and "tPuCorrPtSum" not in self.complained:
 *         if not self.tPuCorrPtSum_branch and "tPuCorrPtSum":
 */
  __pyx_v_self->tPuCorrPtSum_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tPuCorrPtSum);

  /* "MuTauTree.pyx":3448
 *         self.tPuCorrPtSum_branch = the_tree.GetBranch("tPuCorrPtSum")
 *         #if not self.tPuCorrPtSum_branch and "tPuCorrPtSum" not in self.complained:
 *         if not self.tPuCorrPtSum_branch and "tPuCorrPtSum":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPuCorrPtSum does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPuCorrPtSum")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tPuCorrPtSum_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L814_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L814_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3449
 *         #if not self.tPuCorrPtSum_branch and "tPuCorrPtSum" not in self.complained:
 *         if not self.tPuCorrPtSum_branch and "tPuCorrPtSum":
 *             warnings.warn( "MuTauTree: Expected branch tPuCorrPtSum does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPuCorrPtSum")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tPuCor);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tPuCor);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tPuCor);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3449; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3448
 *         self.tPuCorrPtSum_branch = the_tree.GetBranch("tPuCorrPtSum")
 *         #if not self.tPuCorrPtSum_branch and "tPuCorrPtSum" not in self.complained:
 *         if not self.tPuCorrPtSum_branch and "tPuCorrPtSum":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPuCorrPtSum does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPuCorrPtSum")
 */
    goto __pyx_L813;
  }

  /* "MuTauTree.pyx":3452
 *             #self.complained.add("tPuCorrPtSum")
 *         else:
 *             self.tPuCorrPtSum_branch.SetAddress(<void*>&self.tPuCorrPtSum_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tRank"
 */
  /*else*/ {
    __pyx_v_self->tPuCorrPtSum_branch->SetAddress(((void *)(&__pyx_v_self->tPuCorrPtSum_value)));
  }
  __pyx_L813:;

  /* "MuTauTree.pyx":3455
 * 
 *         #print "making tRank"
 *         self.tRank_branch = the_tree.GetBranch("tRank")             # <<<<<<<<<<<<<<
 *         #if not self.tRank_branch and "tRank" not in self.complained:
 *         if not self.tRank_branch and "tRank":
 */
  __pyx_v_self->tRank_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tRank);

  /* "MuTauTree.pyx":3457
 *         self.tRank_branch = the_tree.GetBranch("tRank")
 *         #if not self.tRank_branch and "tRank" not in self.complained:
 *         if not self.tRank_branch and "tRank":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tRank does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tRank")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tRank_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L817_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L817_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3458
 *         #if not self.tRank_branch and "tRank" not in self.complained:
 *         if not self.tRank_branch and "tRank":
 *             warnings.warn( "MuTauTree: Expected branch tRank does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tRank")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tRank);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tRank);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tRank);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3457
 *         self.tRank_branch = the_tree.GetBranch("tRank")
 *         #if not self.tRank_branch and "tRank" not in self.complained:
 *         if not self.tRank_branch and "tRank":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tRank does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tRank")
 */
    goto __pyx_L816;
  }

  /* "MuTauTree.pyx":3461
 *             #self.complained.add("tRank")
 *         else:
 *             self.tRank_branch.SetAddress(<void*>&self.tRank_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tTNPId"
 */
  /*else*/ {
    __pyx_v_self->tRank_branch->SetAddress(((void *)(&__pyx_v_self->tRank_value)));
  }
  __pyx_L816:;

  /* "MuTauTree.pyx":3464
 * 
 *         #print "making tTNPId"
 *         self.tTNPId_branch = the_tree.GetBranch("tTNPId")             # <<<<<<<<<<<<<<
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":
 */
  __pyx_v_self->tTNPId_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tTNPId);

  /* "MuTauTree.pyx":3466
 *         self.tTNPId_branch = the_tree.GetBranch("tTNPId")
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTNPId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTNPId")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tTNPId_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L820_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L820_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3467
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":
 *             warnings.warn( "MuTauTree: Expected branch tTNPId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tTNPId")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tTNPId);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tTNPId);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tTNPId);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3466
 *         self.tTNPId_branch = the_tree.GetBranch("tTNPId")
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTNPId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTNPId")
 */
    goto __pyx_L819;
  }

  /* "MuTauTree.pyx":3470
 *             #self.complained.add("tTNPId")
 *         else:
 *             self.tTNPId_branch.SetAddress(<void*>&self.tTNPId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tToMETDPhi"
 */
  /*else*/ {
    __pyx_v_self->tTNPId_branch->SetAddress(((void *)(&__pyx_v_self->tTNPId_value)));
  }
  __pyx_L819:;

  /* "MuTauTree.pyx":3473
 * 
 *         #print "making tToMETDPhi"
 *         self.tToMETDPhi_branch = the_tree.GetBranch("tToMETDPhi")             # <<<<<<<<<<<<<<
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":
 */
  __pyx_v_self->tToMETDPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tToMETDPhi);

  /* "MuTauTree.pyx":3475
 *         self.tToMETDPhi_branch = the_tree.GetBranch("tToMETDPhi")
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tToMETDPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tToMETDPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L823_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L823_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3476
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":
 *             warnings.warn( "MuTauTree: Expected branch tToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tToMETDPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tToMET);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tToMET);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tToMET);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3475
 *         self.tToMETDPhi_branch = the_tree.GetBranch("tToMETDPhi")
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tToMETDPhi")
 */
    goto __pyx_L822;
  }

  /* "MuTauTree.pyx":3479
 *             #self.complained.add("tToMETDPhi")
 *         else:
 *             self.tToMETDPhi_branch.SetAddress(<void*>&self.tToMETDPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tVZ"
 */
  /*else*/ {
    __pyx_v_self->tToMETDPhi_branch->SetAddress(((void *)(&__pyx_v_self->tToMETDPhi_value)));
  }
  __pyx_L822:;

  /* "MuTauTree.pyx":3482
 * 
 *         #print "making tVZ"
 *         self.tVZ_branch = the_tree.GetBranch("tVZ")             # <<<<<<<<<<<<<<
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":
 */
  __pyx_v_self->tVZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tVZ);

  /* "MuTauTree.pyx":3484
 *         self.tVZ_branch = the_tree.GetBranch("tVZ")
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tVZ")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tVZ_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L826_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L826_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3485
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":
 *             warnings.warn( "MuTauTree: Expected branch tVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tVZ")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tVZ_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tVZ_do);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tVZ_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3484
 *         self.tVZ_branch = the_tree.GetBranch("tVZ")
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tVZ")
 */
    goto __pyx_L825;
  }

  /* "MuTauTree.pyx":3488
 *             #self.complained.add("tVZ")
 *         else:
 *             self.tVZ_branch.SetAddress(<void*>&self.tVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20EleLooseMuTight"
 */
  /*else*/ {
    __pyx_v_self->tVZ_branch->SetAddress(((void *)(&__pyx_v_self->tVZ_value)));
  }
  __pyx_L825:;

  /* "MuTauTree.pyx":3491
 * 
 *         #print "making tauVetoPt20EleLooseMuTight"
 *         self.tauVetoPt20EleLooseMuTight_branch = the_tree.GetBranch("tauVetoPt20EleLooseMuTight")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight" not in self.complained:
 *         if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight":
 */
  __pyx_v_self->tauVetoPt20EleLooseMuTight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tauVetoPt20EleLooseMuTight);

  /* "MuTauTree.pyx":3493
 *         self.tauVetoPt20EleLooseMuTight_branch = the_tree.GetBranch("tauVetoPt20EleLooseMuTight")
 *         #if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight" not in self.complained:
 *         if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20EleLooseMuTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20EleLooseMuTight")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20EleLooseMuTight_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L829_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L829_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3494
 *         #if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight" not in self.complained:
 *         if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20EleLooseMuTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20EleLooseMuTight")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tauVet);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3493
 *         self.tauVetoPt20EleLooseMuTight_branch = the_tree.GetBranch("tauVetoPt20EleLooseMuTight")
 *         #if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight" not in self.complained:
 *         if not self.tauVetoPt20EleLooseMuTight_branch and "tauVetoPt20EleLooseMuTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20EleLooseMuTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20EleLooseMuTight")
 */
    goto __pyx_L828;
  }

  /* "MuTauTree.pyx":3497
 *             #self.complained.add("tauVetoPt20EleLooseMuTight")
 *         else:
 *             self.tauVetoPt20EleLooseMuTight_branch.SetAddress(<void*>&self.tauVetoPt20EleLooseMuTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20EleTightMuLoose"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20EleLooseMuTight_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20EleLooseMuTight_value)));
  }
  __pyx_L828:;

  /* "MuTauTree.pyx":3500
 * 
 *         #print "making tauVetoPt20EleTightMuLoose"
 *         self.tauVetoPt20EleTightMuLoose_branch = the_tree.GetBranch("tauVetoPt20EleTightMuLoose")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose" not in self.complained:
 *         if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose":
 */
  __pyx_v_self->tauVetoPt20EleTightMuLoose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tauVetoPt20EleTightMuLoose);

  /* "MuTauTree.pyx":3502
 *         self.tauVetoPt20EleTightMuLoose_branch = the_tree.GetBranch("tauVetoPt20EleTightMuLoose")
 *         #if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose" not in self.complained:
 *         if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20EleTightMuLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20EleTightMuLoose")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20EleTightMuLoose_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L832_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L832_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3503
 *         #if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose" not in self.complained:
 *         if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20EleTightMuLoose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20EleTightMuLoose")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tauVet_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3502
 *         self.tauVetoPt20EleTightMuLoose_branch = the_tree.GetBranch("tauVetoPt20EleTightMuLoose")
 *         #if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose" not in self.complained:
 *         if not self.tauVetoPt20EleTightMuLoose_branch and "tauVetoPt20EleTightMuLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20EleTightMuLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20EleTightMuLoose")
 */
    goto __pyx_L831;
  }

  /* "MuTauTree.pyx":3506
 *             #self.complained.add("tauVetoPt20EleTightMuLoose")
 *         else:
 *             self.tauVetoPt20EleTightMuLoose_branch.SetAddress(<void*>&self.tauVetoPt20EleTightMuLoose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20Loose3HitsNewDMVtx"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20EleTightMuLoose_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20EleTightMuLoose_value)));
  }
  __pyx_L831:;

  /* "MuTauTree.pyx":3509
 * 
 *         #print "making tauVetoPt20Loose3HitsNewDMVtx"
 *         self.tauVetoPt20Loose3HitsNewDMVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsNewDMVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx":
 */
  __pyx_v_self->tauVetoPt20Loose3HitsNewDMVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tauVetoPt20Loose3HitsNewDMVtx);

  /* "MuTauTree.pyx":3511
 *         self.tauVetoPt20Loose3HitsNewDMVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsNewDMVtx")
 *         #if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsNewDMVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20Loose3HitsNewDMVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20Loose3HitsNewDMVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L835_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L835_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3512
 *         #if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsNewDMVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20Loose3HitsNewDMVtx")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tauVet_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3511
 *         self.tauVetoPt20Loose3HitsNewDMVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsNewDMVtx")
 *         #if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsNewDMVtx_branch and "tauVetoPt20Loose3HitsNewDMVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsNewDMVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20Loose3HitsNewDMVtx")
 */
    goto __pyx_L834;
  }

  /* "MuTauTree.pyx":3515
 *             #self.complained.add("tauVetoPt20Loose3HitsNewDMVtx")
 *         else:
 *             self.tauVetoPt20Loose3HitsNewDMVtx_branch.SetAddress(<void*>&self.tauVetoPt20Loose3HitsNewDMVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20Loose3HitsVtx"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20Loose3HitsNewDMVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20Loose3HitsNewDMVtx_value)));
  }
  __pyx_L834:;

  /* "MuTauTree.pyx":3518
 * 
 *         #print "making tauVetoPt20Loose3HitsVtx"
 *         self.tauVetoPt20Loose3HitsVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":
 */
  __pyx_v_self->tauVetoPt20Loose3HitsVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tauVetoPt20Loose3HitsVtx);

  /* "MuTauTree.pyx":3520
 *         self.tauVetoPt20Loose3HitsVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsVtx")
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20Loose3HitsVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L838_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L838_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3521
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tauVet_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3520
 *         self.tauVetoPt20Loose3HitsVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsVtx")
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 */
    goto __pyx_L837;
  }

  /* "MuTauTree.pyx":3524
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 *         else:
 *             self.tauVetoPt20Loose3HitsVtx_branch.SetAddress(<void*>&self.tauVetoPt20Loose3HitsVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20TightMVALTNewDMVtx"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20Loose3HitsVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20Loose3HitsVtx_value)));
  }
  __pyx_L837:;

  /* "MuTauTree.pyx":3527
 * 
 *         #print "making tauVetoPt20TightMVALTNewDMVtx"
 *         self.tauVetoPt20TightMVALTNewDMVtx_branch = the_tree.GetBranch("tauVetoPt20TightMVALTNewDMVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx":
 */
  __pyx_v_self->tauVetoPt20TightMVALTNewDMVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tauVetoPt20TightMVALTNewDMVtx);

  /* "MuTauTree.pyx":3529
 *         self.tauVetoPt20TightMVALTNewDMVtx_branch = the_tree.GetBranch("tauVetoPt20TightMVALTNewDMVtx")
 *         #if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20TightMVALTNewDMVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20TightMVALTNewDMVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20TightMVALTNewDMVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L841_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L841_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3530
 *         #if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20TightMVALTNewDMVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20TightMVALTNewDMVtx")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tauVet_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3529
 *         self.tauVetoPt20TightMVALTNewDMVtx_branch = the_tree.GetBranch("tauVetoPt20TightMVALTNewDMVtx")
 *         #if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTNewDMVtx_branch and "tauVetoPt20TightMVALTNewDMVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20TightMVALTNewDMVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20TightMVALTNewDMVtx")
 */
    goto __pyx_L840;
  }

  /* "MuTauTree.pyx":3533
 *             #self.complained.add("tauVetoPt20TightMVALTNewDMVtx")
 *         else:
 *             self.tauVetoPt20TightMVALTNewDMVtx_branch.SetAddress(<void*>&self.tauVetoPt20TightMVALTNewDMVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20TightMVALTVtx"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20TightMVALTNewDMVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20TightMVALTNewDMVtx_value)));
  }
  __pyx_L840:;

  /* "MuTauTree.pyx":3536
 * 
 *         #print "making tauVetoPt20TightMVALTVtx"
 *         self.tauVetoPt20TightMVALTVtx_branch = the_tree.GetBranch("tauVetoPt20TightMVALTVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx":
 */
  __pyx_v_self->tauVetoPt20TightMVALTVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tauVetoPt20TightMVALTVtx);

  /* "MuTauTree.pyx":3538
 *         self.tauVetoPt20TightMVALTVtx_branch = the_tree.GetBranch("tauVetoPt20TightMVALTVtx")
 *         #if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20TightMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20TightMVALTVtx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tauVetoPt20TightMVALTVtx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L844_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L844_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3539
 *         #if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20TightMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20TightMVALTVtx")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_tauVet_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_tauVet_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3539; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3538
 *         self.tauVetoPt20TightMVALTVtx_branch = the_tree.GetBranch("tauVetoPt20TightMVALTVtx")
 *         #if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx" not in self.complained:
 *         if not self.tauVetoPt20TightMVALTVtx_branch and "tauVetoPt20TightMVALTVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20TightMVALTVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20TightMVALTVtx")
 */
    goto __pyx_L843;
  }

  /* "MuTauTree.pyx":3542
 *             #self.complained.add("tauVetoPt20TightMVALTVtx")
 *         else:
 *             self.tauVetoPt20TightMVALTVtx_branch.SetAddress(<void*>&self.tauVetoPt20TightMVALTVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tripleEGroup"
 */
  /*else*/ {
    __pyx_v_self->tauVetoPt20TightMVALTVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20TightMVALTVtx_value)));
  }
  __pyx_L843:;

  /* "MuTauTree.pyx":3545
 * 
 *         #print "making tripleEGroup"
 *         self.tripleEGroup_branch = the_tree.GetBranch("tripleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.tripleEGroup_branch and "tripleEGroup" not in self.complained:
 *         if not self.tripleEGroup_branch and "tripleEGroup":
 */
  __pyx_v_self->tripleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tripleEGroup);

  /* "MuTauTree.pyx":3547
 *         self.tripleEGroup_branch = the_tree.GetBranch("tripleEGroup")
 *         #if not self.tripleEGroup_branch and "tripleEGroup" not in self.complained:
 *         if not self.tripleEGroup_branch and "tripleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleEGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tripleEGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L847_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L847_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3548
 *         #if not self.tripleEGroup_branch and "tripleEGroup" not in self.complained:
 *         if not self.tripleEGroup_branch and "tripleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch tripleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tripleEGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_triple);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_triple);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_triple);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3547
 *         self.tripleEGroup_branch = the_tree.GetBranch("tripleEGroup")
 *         #if not self.tripleEGroup_branch and "tripleEGroup" not in self.complained:
 *         if not self.tripleEGroup_branch and "tripleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleEGroup")
 */
    goto __pyx_L846;
  }

  /* "MuTauTree.pyx":3551
 *             #self.complained.add("tripleEGroup")
 *         else:
 *             self.tripleEGroup_branch.SetAddress(<void*>&self.tripleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tripleEPass"
 */
  /*else*/ {
    __pyx_v_self->tripleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->tripleEGroup_value)));
  }
  __pyx_L846:;

  /* "MuTauTree.pyx":3554
 * 
 *         #print "making tripleEPass"
 *         self.tripleEPass_branch = the_tree.GetBranch("tripleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.tripleEPass_branch and "tripleEPass" not in self.complained:
 *         if not self.tripleEPass_branch and "tripleEPass":
 */
  __pyx_v_self->tripleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tripleEPass);

  /* "MuTauTree.pyx":3556
 *         self.tripleEPass_branch = the_tree.GetBranch("tripleEPass")
 *         #if not self.tripleEPass_branch and "tripleEPass" not in self.complained:
 *         if not self.tripleEPass_branch and "tripleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleEPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tripleEPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L850_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L850_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3557
 *         #if not self.tripleEPass_branch and "tripleEPass" not in self.complained:
 *         if not self.tripleEPass_branch and "tripleEPass":
 *             warnings.warn( "MuTauTree: Expected branch tripleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tripleEPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_triple_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3556
 *         self.tripleEPass_branch = the_tree.GetBranch("tripleEPass")
 *         #if not self.tripleEPass_branch and "tripleEPass" not in self.complained:
 *         if not self.tripleEPass_branch and "tripleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleEPass")
 */
    goto __pyx_L849;
  }

  /* "MuTauTree.pyx":3560
 *             #self.complained.add("tripleEPass")
 *         else:
 *             self.tripleEPass_branch.SetAddress(<void*>&self.tripleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tripleEPrescale"
 */
  /*else*/ {
    __pyx_v_self->tripleEPass_branch->SetAddress(((void *)(&__pyx_v_self->tripleEPass_value)));
  }
  __pyx_L849:;

  /* "MuTauTree.pyx":3563
 * 
 *         #print "making tripleEPrescale"
 *         self.tripleEPrescale_branch = the_tree.GetBranch("tripleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.tripleEPrescale_branch and "tripleEPrescale" not in self.complained:
 *         if not self.tripleEPrescale_branch and "tripleEPrescale":
 */
  __pyx_v_self->tripleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tripleEPrescale);

  /* "MuTauTree.pyx":3565
 *         self.tripleEPrescale_branch = the_tree.GetBranch("tripleEPrescale")
 *         #if not self.tripleEPrescale_branch and "tripleEPrescale" not in self.complained:
 *         if not self.tripleEPrescale_branch and "tripleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleEPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tripleEPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L853_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L853_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3566
 *         #if not self.tripleEPrescale_branch and "tripleEPrescale" not in self.complained:
 *         if not self.tripleEPrescale_branch and "tripleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch tripleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tripleEPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_triple_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3565
 *         self.tripleEPrescale_branch = the_tree.GetBranch("tripleEPrescale")
 *         #if not self.tripleEPrescale_branch and "tripleEPrescale" not in self.complained:
 *         if not self.tripleEPrescale_branch and "tripleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleEPrescale")
 */
    goto __pyx_L852;
  }

  /* "MuTauTree.pyx":3569
 *             #self.complained.add("tripleEPrescale")
 *         else:
 *             self.tripleEPrescale_branch.SetAddress(<void*>&self.tripleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tripleMuGroup"
 */
  /*else*/ {
    __pyx_v_self->tripleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->tripleEPrescale_value)));
  }
  __pyx_L852:;

  /* "MuTauTree.pyx":3572
 * 
 *         #print "making tripleMuGroup"
 *         self.tripleMuGroup_branch = the_tree.GetBranch("tripleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.tripleMuGroup_branch and "tripleMuGroup" not in self.complained:
 *         if not self.tripleMuGroup_branch and "tripleMuGroup":
 */
  __pyx_v_self->tripleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tripleMuGroup);

  /* "MuTauTree.pyx":3574
 *         self.tripleMuGroup_branch = the_tree.GetBranch("tripleMuGroup")
 *         #if not self.tripleMuGroup_branch and "tripleMuGroup" not in self.complained:
 *         if not self.tripleMuGroup_branch and "tripleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleMuGroup")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tripleMuGroup_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L856_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L856_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3575
 *         #if not self.tripleMuGroup_branch and "tripleMuGroup" not in self.complained:
 *         if not self.tripleMuGroup_branch and "tripleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch tripleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tripleMuGroup")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_triple_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3574
 *         self.tripleMuGroup_branch = the_tree.GetBranch("tripleMuGroup")
 *         #if not self.tripleMuGroup_branch and "tripleMuGroup" not in self.complained:
 *         if not self.tripleMuGroup_branch and "tripleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleMuGroup")
 */
    goto __pyx_L855;
  }

  /* "MuTauTree.pyx":3578
 *             #self.complained.add("tripleMuGroup")
 *         else:
 *             self.tripleMuGroup_branch.SetAddress(<void*>&self.tripleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tripleMuPass"
 */
  /*else*/ {
    __pyx_v_self->tripleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->tripleMuGroup_value)));
  }
  __pyx_L855:;

  /* "MuTauTree.pyx":3581
 * 
 *         #print "making tripleMuPass"
 *         self.tripleMuPass_branch = the_tree.GetBranch("tripleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.tripleMuPass_branch and "tripleMuPass" not in self.complained:
 *         if not self.tripleMuPass_branch and "tripleMuPass":
 */
  __pyx_v_self->tripleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tripleMuPass);

  /* "MuTauTree.pyx":3583
 *         self.tripleMuPass_branch = the_tree.GetBranch("tripleMuPass")
 *         #if not self.tripleMuPass_branch and "tripleMuPass" not in self.complained:
 *         if not self.tripleMuPass_branch and "tripleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleMuPass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tripleMuPass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L859_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L859_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3584
 *         #if not self.tripleMuPass_branch and "tripleMuPass" not in self.complained:
 *         if not self.tripleMuPass_branch and "tripleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch tripleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tripleMuPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_5);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_triple_5);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3583
 *         self.tripleMuPass_branch = the_tree.GetBranch("tripleMuPass")
 *         #if not self.tripleMuPass_branch and "tripleMuPass" not in self.complained:
 *         if not self.tripleMuPass_branch and "tripleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleMuPass")
 */
    goto __pyx_L858;
  }

  /* "MuTauTree.pyx":3587
 *             #self.complained.add("tripleMuPass")
 *         else:
 *             self.tripleMuPass_branch.SetAddress(<void*>&self.tripleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tripleMuPrescale"
 */
  /*else*/ {
    __pyx_v_self->tripleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->tripleMuPass_value)));
  }
  __pyx_L858:;

  /* "MuTauTree.pyx":3590
 * 
 *         #print "making tripleMuPrescale"
 *         self.tripleMuPrescale_branch = the_tree.GetBranch("tripleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.tripleMuPrescale_branch and "tripleMuPrescale" not in self.complained:
 *         if not self.tripleMuPrescale_branch and "tripleMuPrescale":
 */
  __pyx_v_self->tripleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_tripleMuPrescale);

  /* "MuTauTree.pyx":3592
 *         self.tripleMuPrescale_branch = the_tree.GetBranch("tripleMuPrescale")
 *         #if not self.tripleMuPrescale_branch and "tripleMuPrescale" not in self.complained:
 *         if not self.tripleMuPrescale_branch and "tripleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleMuPrescale")
 */
  __pyx_t_2 = ((!(__pyx_v_self->tripleMuPrescale_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L862_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L862_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3593
 *         #if not self.tripleMuPrescale_branch and "tripleMuPrescale" not in self.complained:
 *         if not self.tripleMuPrescale_branch and "tripleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch tripleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tripleMuPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_6);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_triple_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_triple_6);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3593; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3592
 *         self.tripleMuPrescale_branch = the_tree.GetBranch("tripleMuPrescale")
 *         #if not self.tripleMuPrescale_branch and "tripleMuPrescale" not in self.complained:
 *         if not self.tripleMuPrescale_branch and "tripleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tripleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tripleMuPrescale")
 */
    goto __pyx_L861;
  }

  /* "MuTauTree.pyx":3596
 *             #self.complained.add("tripleMuPrescale")
 *         else:
 *             self.tripleMuPrescale_branch.SetAddress(<void*>&self.tripleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMetEt"
 */
  /*else*/ {
    __pyx_v_self->tripleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->tripleMuPrescale_value)));
  }
  __pyx_L861:;

  /* "MuTauTree.pyx":3599
 * 
 *         #print "making type1_pfMetEt"
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 */
  __pyx_v_self->type1_pfMetEt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_type1_pfMetEt);

  /* "MuTauTree.pyx":3601
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetEt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMetEt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L865_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L865_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3602
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_type1);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_type1);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_type1);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3601
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetEt")
 */
    goto __pyx_L864;
  }

  /* "MuTauTree.pyx":3605
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 *             self.type1_pfMetEt_branch.SetAddress(<void*>&self.type1_pfMetEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMetPhi"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMetEt_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMetEt_value)));
  }
  __pyx_L864:;

  /* "MuTauTree.pyx":3608
 * 
 *         #print "making type1_pfMetPhi"
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 */
  __pyx_v_self->type1_pfMetPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_type1_pfMetPhi);

  /* "MuTauTree.pyx":3610
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetPhi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->type1_pfMetPhi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L868_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L868_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3611
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_type1_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_type1_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_type1_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3610
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetPhi")
 */
    goto __pyx_L867;
  }

  /* "MuTauTree.pyx":3614
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 *             self.type1_pfMetPhi_branch.SetAddress(<void*>&self.type1_pfMetPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDeta"
 */
  /*else*/ {
    __pyx_v_self->type1_pfMetPhi_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMetPhi_value)));
  }
  __pyx_L867:;

  /* "MuTauTree.pyx":3617
 * 
 *         #print "making vbfDeta"
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 */
  __pyx_v_self->vbfDeta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfDeta);

  /* "MuTauTree.pyx":3619
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDeta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfDeta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L871_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L871_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3620
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 *             warnings.warn( "MuTauTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDeta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDet);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDet);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfDet);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3619
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDeta")
 */
    goto __pyx_L870;
  }

  /* "MuTauTree.pyx":3623
 *             #self.complained.add("vbfDeta")
 *         else:
 *             self.vbfDeta_branch.SetAddress(<void*>&self.vbfDeta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDijetrap"
 */
  /*else*/ {
    __pyx_v_self->vbfDeta_branch->SetAddress(((void *)(&__pyx_v_self->vbfDeta_value)));
  }
  __pyx_L870:;

  /* "MuTauTree.pyx":3626
 * 
 *         #print "making vbfDijetrap"
 *         self.vbfDijetrap_branch = the_tree.GetBranch("vbfDijetrap")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":
 */
  __pyx_v_self->vbfDijetrap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfDijetrap);

  /* "MuTauTree.pyx":3628
 *         self.vbfDijetrap_branch = the_tree.GetBranch("vbfDijetrap")
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDijetrap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDijetrap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfDijetrap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L874_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L874_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3629
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":
 *             warnings.warn( "MuTauTree: Expected branch vbfDijetrap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDijetrap")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDij);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDij);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfDij);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3628
 *         self.vbfDijetrap_branch = the_tree.GetBranch("vbfDijetrap")
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDijetrap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDijetrap")
 */
    goto __pyx_L873;
  }

  /* "MuTauTree.pyx":3632
 *             #self.complained.add("vbfDijetrap")
 *         else:
 *             self.vbfDijetrap_branch.SetAddress(<void*>&self.vbfDijetrap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDphi"
 */
  /*else*/ {
    __pyx_v_self->vbfDijetrap_branch->SetAddress(((void *)(&__pyx_v_self->vbfDijetrap_value)));
  }
  __pyx_L873:;

  /* "MuTauTree.pyx":3635
 * 
 *         #print "making vbfDphi"
 *         self.vbfDphi_branch = the_tree.GetBranch("vbfDphi")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDphi_branch and "vbfDphi" not in self.complained:
 *         if not self.vbfDphi_branch and "vbfDphi":
 */
  __pyx_v_self->vbfDphi_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfDphi);

  /* "MuTauTree.pyx":3637
 *         self.vbfDphi_branch = the_tree.GetBranch("vbfDphi")
 *         #if not self.vbfDphi_branch and "vbfDphi" not in self.complained:
 *         if not self.vbfDphi_branch and "vbfDphi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphi")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfDphi_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L877_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L877_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3638
 *         #if not self.vbfDphi_branch and "vbfDphi" not in self.complained:
 *         if not self.vbfDphi_branch and "vbfDphi":
 *             warnings.warn( "MuTauTree: Expected branch vbfDphi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDphi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDph);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDph);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfDph);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3637
 *         self.vbfDphi_branch = the_tree.GetBranch("vbfDphi")
 *         #if not self.vbfDphi_branch and "vbfDphi" not in self.complained:
 *         if not self.vbfDphi_branch and "vbfDphi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphi")
 */
    goto __pyx_L876;
  }

  /* "MuTauTree.pyx":3641
 *             #self.complained.add("vbfDphi")
 *         else:
 *             self.vbfDphi_branch.SetAddress(<void*>&self.vbfDphi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDphihj"
 */
  /*else*/ {
    __pyx_v_self->vbfDphi_branch->SetAddress(((void *)(&__pyx_v_self->vbfDphi_value)));
  }
  __pyx_L876:;

  /* "MuTauTree.pyx":3644
 * 
 *         #print "making vbfDphihj"
 *         self.vbfDphihj_branch = the_tree.GetBranch("vbfDphihj")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":
 */
  __pyx_v_self->vbfDphihj_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfDphihj);

  /* "MuTauTree.pyx":3646
 *         self.vbfDphihj_branch = the_tree.GetBranch("vbfDphihj")
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihj does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphihj")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfDphihj_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L880_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L880_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3647
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihj does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDphihj")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfDph_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3646
 *         self.vbfDphihj_branch = the_tree.GetBranch("vbfDphihj")
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihj does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphihj")
 */
    goto __pyx_L879;
  }

  /* "MuTauTree.pyx":3650
 *             #self.complained.add("vbfDphihj")
 *         else:
 *             self.vbfDphihj_branch.SetAddress(<void*>&self.vbfDphihj_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDphihjnomet"
 */
  /*else*/ {
    __pyx_v_self->vbfDphihj_branch->SetAddress(((void *)(&__pyx_v_self->vbfDphihj_value)));
  }
  __pyx_L879:;

  /* "MuTauTree.pyx":3653
 * 
 *         #print "making vbfDphihjnomet"
 *         self.vbfDphihjnomet_branch = the_tree.GetBranch("vbfDphihjnomet")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":
 */
  __pyx_v_self->vbfDphihjnomet_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfDphihjnomet);

  /* "MuTauTree.pyx":3655
 *         self.vbfDphihjnomet_branch = the_tree.GetBranch("vbfDphihjnomet")
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihjnomet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphihjnomet")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfDphihjnomet_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L883_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L883_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3656
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihjnomet does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDphihjnomet")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfDph_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3655
 *         self.vbfDphihjnomet_branch = the_tree.GetBranch("vbfDphihjnomet")
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihjnomet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphihjnomet")
 */
    goto __pyx_L882;
  }

  /* "MuTauTree.pyx":3659
 *             #self.complained.add("vbfDphihjnomet")
 *         else:
 *             self.vbfDphihjnomet_branch.SetAddress(<void*>&self.vbfDphihjnomet_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfHrap"
 */
  /*else*/ {
    __pyx_v_self->vbfDphihjnomet_branch->SetAddress(((void *)(&__pyx_v_self->vbfDphihjnomet_value)));
  }
  __pyx_L882:;

  /* "MuTauTree.pyx":3662
 * 
 *         #print "making vbfHrap"
 *         self.vbfHrap_branch = the_tree.GetBranch("vbfHrap")             # <<<<<<<<<<<<<<
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":
 */
  __pyx_v_self->vbfHrap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfHrap);

  /* "MuTauTree.pyx":3664
 *         self.vbfHrap_branch = the_tree.GetBranch("vbfHrap")
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfHrap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfHrap")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfHrap_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L886_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L886_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3665
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":
 *             warnings.warn( "MuTauTree: Expected branch vbfHrap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfHrap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfHra);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfHra);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfHra);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3664
 *         self.vbfHrap_branch = the_tree.GetBranch("vbfHrap")
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfHrap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfHrap")
 */
    goto __pyx_L885;
  }

  /* "MuTauTree.pyx":3668
 *             #self.complained.add("vbfHrap")
 *         else:
 *             self.vbfHrap_branch.SetAddress(<void*>&self.vbfHrap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVeto20"
 */
  /*else*/ {
    __pyx_v_self->vbfHrap_branch->SetAddress(((void *)(&__pyx_v_self->vbfHrap_value)));
  }
  __pyx_L885:;

  /* "MuTauTree.pyx":3671
 * 
 *         #print "making vbfJetVeto20"
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 */
  __pyx_v_self->vbfJetVeto20_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfJetVeto20);

  /* "MuTauTree.pyx":3673
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto20")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfJetVeto20_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L889_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L889_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3674
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfJet);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3673
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto20")
 */
    goto __pyx_L888;
  }

  /* "MuTauTree.pyx":3677
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 *             self.vbfJetVeto20_branch.SetAddress(<void*>&self.vbfJetVeto20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVeto30"
 */
  /*else*/ {
    __pyx_v_self->vbfJetVeto20_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVeto20_value)));
  }
  __pyx_L888:;

  /* "MuTauTree.pyx":3680
 * 
 *         #print "making vbfJetVeto30"
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 */
  __pyx_v_self->vbfJetVeto30_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfJetVeto30);

  /* "MuTauTree.pyx":3682
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfJetVeto30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L892_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L892_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3683
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_2);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfJet_2);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3682
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto30")
 */
    goto __pyx_L891;
  }

  /* "MuTauTree.pyx":3686
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 *             self.vbfJetVeto30_branch.SetAddress(<void*>&self.vbfJetVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVetoTight20"
 */
  /*else*/ {
    __pyx_v_self->vbfJetVeto30_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVeto30_value)));
  }
  __pyx_L891:;

  /* "MuTauTree.pyx":3689
 * 
 *         #print "making vbfJetVetoTight20"
 *         self.vbfJetVetoTight20_branch = the_tree.GetBranch("vbfJetVetoTight20")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20" not in self.complained:
 *         if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20":
 */
  __pyx_v_self->vbfJetVetoTight20_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfJetVetoTight20);

  /* "MuTauTree.pyx":3691
 *         self.vbfJetVetoTight20_branch = the_tree.GetBranch("vbfJetVetoTight20")
 *         #if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20" not in self.complained:
 *         if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVetoTight20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVetoTight20")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfJetVetoTight20_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L895_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L895_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3692
 *         #if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20" not in self.complained:
 *         if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20":
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVetoTight20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVetoTight20")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_3);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_3);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfJet_3);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3691
 *         self.vbfJetVetoTight20_branch = the_tree.GetBranch("vbfJetVetoTight20")
 *         #if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20" not in self.complained:
 *         if not self.vbfJetVetoTight20_branch and "vbfJetVetoTight20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVetoTight20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVetoTight20")
 */
    goto __pyx_L894;
  }

  /* "MuTauTree.pyx":3695
 *             #self.complained.add("vbfJetVetoTight20")
 *         else:
 *             self.vbfJetVetoTight20_branch.SetAddress(<void*>&self.vbfJetVetoTight20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVetoTight30"
 */
  /*else*/ {
    __pyx_v_self->vbfJetVetoTight20_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVetoTight20_value)));
  }
  __pyx_L894:;

  /* "MuTauTree.pyx":3698
 * 
 *         #print "making vbfJetVetoTight30"
 *         self.vbfJetVetoTight30_branch = the_tree.GetBranch("vbfJetVetoTight30")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30" not in self.complained:
 *         if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30":
 */
  __pyx_v_self->vbfJetVetoTight30_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfJetVetoTight30);

  /* "MuTauTree.pyx":3700
 *         self.vbfJetVetoTight30_branch = the_tree.GetBranch("vbfJetVetoTight30")
 *         #if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30" not in self.complained:
 *         if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVetoTight30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVetoTight30")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfJetVetoTight30_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L898_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L898_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3701
 *         #if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30" not in self.complained:
 *         if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30":
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVetoTight30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVetoTight30")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_4);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfJet_4);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3700
 *         self.vbfJetVetoTight30_branch = the_tree.GetBranch("vbfJetVetoTight30")
 *         #if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30" not in self.complained:
 *         if not self.vbfJetVetoTight30_branch and "vbfJetVetoTight30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVetoTight30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVetoTight30")
 */
    goto __pyx_L897;
  }

  /* "MuTauTree.pyx":3704
 *             #self.complained.add("vbfJetVetoTight30")
 *         else:
 *             self.vbfJetVetoTight30_branch.SetAddress(<void*>&self.vbfJetVetoTight30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMVA"
 */
  /*else*/ {
    __pyx_v_self->vbfJetVetoTight30_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVetoTight30_value)));
  }
  __pyx_L897:;

  /* "MuTauTree.pyx":3707
 * 
 *         #print "making vbfMVA"
 *         self.vbfMVA_branch = the_tree.GetBranch("vbfMVA")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":
 */
  __pyx_v_self->vbfMVA_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfMVA);

  /* "MuTauTree.pyx":3709
 *         self.vbfMVA_branch = the_tree.GetBranch("vbfMVA")
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfMVA does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMVA")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMVA_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L901_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L901_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3710
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":
 *             warnings.warn( "MuTauTree: Expected branch vbfMVA does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMVA")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfMVA);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfMVA);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfMVA);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3709
 *         self.vbfMVA_branch = the_tree.GetBranch("vbfMVA")
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfMVA does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMVA")
 */
    goto __pyx_L900;
  }

  /* "MuTauTree.pyx":3713
 *             #self.complained.add("vbfMVA")
 *         else:
 *             self.vbfMVA_branch.SetAddress(<void*>&self.vbfMVA_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMass"
 */
  /*else*/ {
    __pyx_v_self->vbfMVA_branch->SetAddress(((void *)(&__pyx_v_self->vbfMVA_value)));
  }
  __pyx_L900:;

  /* "MuTauTree.pyx":3716
 * 
 *         #print "making vbfMass"
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 */
  __pyx_v_self->vbfMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfMass);

  /* "MuTauTree.pyx":3718
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMass")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfMass_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L904_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L904_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3719
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 *             warnings.warn( "MuTauTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfMas);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfMas);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfMas);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3718
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMass")
 */
    goto __pyx_L903;
  }

  /* "MuTauTree.pyx":3722
 *             #self.complained.add("vbfMass")
 *         else:
 *             self.vbfMass_branch.SetAddress(<void*>&self.vbfMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfNJets"
 */
  /*else*/ {
    __pyx_v_self->vbfMass_branch->SetAddress(((void *)(&__pyx_v_self->vbfMass_value)));
  }
  __pyx_L903:;

  /* "MuTauTree.pyx":3725
 * 
 *         #print "making vbfNJets"
 *         self.vbfNJets_branch = the_tree.GetBranch("vbfNJets")             # <<<<<<<<<<<<<<
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":
 */
  __pyx_v_self->vbfNJets_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfNJets);

  /* "MuTauTree.pyx":3727
 *         self.vbfNJets_branch = the_tree.GetBranch("vbfNJets")
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfNJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfNJets_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L907_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L907_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3728
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":
 *             warnings.warn( "MuTauTree: Expected branch vbfNJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfNJets")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfNJe);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfNJe);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfNJe);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3727
 *         self.vbfNJets_branch = the_tree.GetBranch("vbfNJets")
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfNJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets")
 */
    goto __pyx_L906;
  }

  /* "MuTauTree.pyx":3731
 *             #self.complained.add("vbfNJets")
 *         else:
 *             self.vbfNJets_branch.SetAddress(<void*>&self.vbfNJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfVispt"
 */
  /*else*/ {
    __pyx_v_self->vbfNJets_branch->SetAddress(((void *)(&__pyx_v_self->vbfNJets_value)));
  }
  __pyx_L906:;

  /* "MuTauTree.pyx":3734
 * 
 *         #print "making vbfVispt"
 *         self.vbfVispt_branch = the_tree.GetBranch("vbfVispt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":
 */
  __pyx_v_self->vbfVispt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfVispt);

  /* "MuTauTree.pyx":3736
 *         self.vbfVispt_branch = the_tree.GetBranch("vbfVispt")
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfVispt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfVispt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfVispt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L910_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L910_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3737
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":
 *             warnings.warn( "MuTauTree: Expected branch vbfVispt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfVispt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfVis);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfVis);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfVis);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3736
 *         self.vbfVispt_branch = the_tree.GetBranch("vbfVispt")
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfVispt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfVispt")
 */
    goto __pyx_L909;
  }

  /* "MuTauTree.pyx":3740
 *             #self.complained.add("vbfVispt")
 *         else:
 *             self.vbfVispt_branch.SetAddress(<void*>&self.vbfVispt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfdijetpt"
 */
  /*else*/ {
    __pyx_v_self->vbfVispt_branch->SetAddress(((void *)(&__pyx_v_self->vbfVispt_value)));
  }
  __pyx_L909:;

  /* "MuTauTree.pyx":3743
 * 
 *         #print "making vbfdijetpt"
 *         self.vbfdijetpt_branch = the_tree.GetBranch("vbfdijetpt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfdijetpt_branch and "vbfdijetpt" not in self.complained:
 *         if not self.vbfdijetpt_branch and "vbfdijetpt":
 */
  __pyx_v_self->vbfdijetpt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfdijetpt);

  /* "MuTauTree.pyx":3745
 *         self.vbfdijetpt_branch = the_tree.GetBranch("vbfdijetpt")
 *         #if not self.vbfdijetpt_branch and "vbfdijetpt" not in self.complained:
 *         if not self.vbfdijetpt_branch and "vbfdijetpt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfdijetpt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfdijetpt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfdijetpt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L913_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L913_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3746
 *         #if not self.vbfdijetpt_branch and "vbfdijetpt" not in self.complained:
 *         if not self.vbfdijetpt_branch and "vbfdijetpt":
 *             warnings.warn( "MuTauTree: Expected branch vbfdijetpt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfdijetpt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfdij);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfdij);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfdij);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3745
 *         self.vbfdijetpt_branch = the_tree.GetBranch("vbfdijetpt")
 *         #if not self.vbfdijetpt_branch and "vbfdijetpt" not in self.complained:
 *         if not self.vbfdijetpt_branch and "vbfdijetpt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfdijetpt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfdijetpt")
 */
    goto __pyx_L912;
  }

  /* "MuTauTree.pyx":3749
 *             #self.complained.add("vbfdijetpt")
 *         else:
 *             self.vbfdijetpt_branch.SetAddress(<void*>&self.vbfdijetpt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfditaupt"
 */
  /*else*/ {
    __pyx_v_self->vbfdijetpt_branch->SetAddress(((void *)(&__pyx_v_self->vbfdijetpt_value)));
  }
  __pyx_L912:;

  /* "MuTauTree.pyx":3752
 * 
 *         #print "making vbfditaupt"
 *         self.vbfditaupt_branch = the_tree.GetBranch("vbfditaupt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfditaupt_branch and "vbfditaupt" not in self.complained:
 *         if not self.vbfditaupt_branch and "vbfditaupt":
 */
  __pyx_v_self->vbfditaupt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfditaupt);

  /* "MuTauTree.pyx":3754
 *         self.vbfditaupt_branch = the_tree.GetBranch("vbfditaupt")
 *         #if not self.vbfditaupt_branch and "vbfditaupt" not in self.complained:
 *         if not self.vbfditaupt_branch and "vbfditaupt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfditaupt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfditaupt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfditaupt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L916_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L916_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3755
 *         #if not self.vbfditaupt_branch and "vbfditaupt" not in self.complained:
 *         if not self.vbfditaupt_branch and "vbfditaupt":
 *             warnings.warn( "MuTauTree: Expected branch vbfditaupt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfditaupt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfdit);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfdit);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfdit);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3754
 *         self.vbfditaupt_branch = the_tree.GetBranch("vbfditaupt")
 *         #if not self.vbfditaupt_branch and "vbfditaupt" not in self.complained:
 *         if not self.vbfditaupt_branch and "vbfditaupt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfditaupt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfditaupt")
 */
    goto __pyx_L915;
  }

  /* "MuTauTree.pyx":3758
 *             #self.complained.add("vbfditaupt")
 *         else:
 *             self.vbfditaupt_branch.SetAddress(<void*>&self.vbfditaupt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj1eta"
 */
  /*else*/ {
    __pyx_v_self->vbfditaupt_branch->SetAddress(((void *)(&__pyx_v_self->vbfditaupt_value)));
  }
  __pyx_L915:;

  /* "MuTauTree.pyx":3761
 * 
 *         #print "making vbfj1eta"
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 */
  __pyx_v_self->vbfj1eta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfj1eta);

  /* "MuTauTree.pyx":3763
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj1eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L919_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L919_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3764
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 *             warnings.warn( "MuTauTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1eta")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj1e);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj1e);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfj1e);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3764; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3763
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1eta")
 */
    goto __pyx_L918;
  }

  /* "MuTauTree.pyx":3767
 *             #self.complained.add("vbfj1eta")
 *         else:
 *             self.vbfj1eta_branch.SetAddress(<void*>&self.vbfj1eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj1pt"
 */
  /*else*/ {
    __pyx_v_self->vbfj1eta_branch->SetAddress(((void *)(&__pyx_v_self->vbfj1eta_value)));
  }
  __pyx_L918:;

  /* "MuTauTree.pyx":3770
 * 
 *         #print "making vbfj1pt"
 *         self.vbfj1pt_branch = the_tree.GetBranch("vbfj1pt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":
 */
  __pyx_v_self->vbfj1pt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfj1pt);

  /* "MuTauTree.pyx":3772
 *         self.vbfj1pt_branch = the_tree.GetBranch("vbfj1pt")
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj1pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L922_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L922_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3773
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":
 *             warnings.warn( "MuTauTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1pt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj1p);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj1p);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfj1p);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3773; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3772
 *         self.vbfj1pt_branch = the_tree.GetBranch("vbfj1pt")
 *         #if not self.vbfj1pt_branch and "vbfj1pt" not in self.complained:
 *         if not self.vbfj1pt_branch and "vbfj1pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj1pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1pt")
 */
    goto __pyx_L921;
  }

  /* "MuTauTree.pyx":3776
 *             #self.complained.add("vbfj1pt")
 *         else:
 *             self.vbfj1pt_branch.SetAddress(<void*>&self.vbfj1pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj2eta"
 */
  /*else*/ {
    __pyx_v_self->vbfj1pt_branch->SetAddress(((void *)(&__pyx_v_self->vbfj1pt_value)));
  }
  __pyx_L921:;

  /* "MuTauTree.pyx":3779
 * 
 *         #print "making vbfj2eta"
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 */
  __pyx_v_self->vbfj2eta_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfj2eta);

  /* "MuTauTree.pyx":3781
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2eta")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj2eta_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L925_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L925_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3782
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 *             warnings.warn( "MuTauTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2eta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_warn); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_4 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj2e);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj2e);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfj2e);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3781
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2eta")
 */
    goto __pyx_L924;
  }

  /* "MuTauTree.pyx":3785
 *             #self.complained.add("vbfj2eta")
 *         else:
 *             self.vbfj2eta_branch.SetAddress(<void*>&self.vbfj2eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj2pt"
 */
  /*else*/ {
    __pyx_v_self->vbfj2eta_branch->SetAddress(((void *)(&__pyx_v_self->vbfj2eta_value)));
  }
  __pyx_L924:;

  /* "MuTauTree.pyx":3788
 * 
 *         #print "making vbfj2pt"
 *         self.vbfj2pt_branch = the_tree.GetBranch("vbfj2pt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":
 */
  __pyx_v_self->vbfj2pt_branch = __pyx_v_the_tree->GetBranch(__pyx_k_vbfj2pt);

  /* "MuTauTree.pyx":3790
 *         self.vbfj2pt_branch = the_tree.GetBranch("vbfj2pt")
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2pt")
 */
  __pyx_t_2 = ((!(__pyx_v_self->vbfj2pt_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L928_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L928_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3791
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":
 *             warnings.warn( "MuTauTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2pt")
 *         else:
 */
    __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj2p);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_vbfj2p);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_vbfj2p);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3790
 *         self.vbfj2pt_branch = the_tree.GetBranch("vbfj2pt")
 *         #if not self.vbfj2pt_branch and "vbfj2pt" not in self.complained:
 *         if not self.vbfj2pt_branch and "vbfj2pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj2pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2pt")
 */
    goto __pyx_L927;
  }

  /* "MuTauTree.pyx":3794
 *             #self.complained.add("vbfj2pt")
 *         else:
 *             self.vbfj2pt_branch.SetAddress(<void*>&self.vbfj2pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making idx"
 */
  /*else*/ {
    __pyx_v_self->vbfj2pt_branch->SetAddress(((void *)(&__pyx_v_self->vbfj2pt_value)));
  }
  __pyx_L927:;

  /* "MuTauTree.pyx":3797
 * 
 *         #print "making idx"
 *         self.idx_branch = the_tree.GetBranch("idx")             # <<<<<<<<<<<<<<
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 */
  __pyx_v_self->idx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_idx);

  /* "MuTauTree.pyx":3799
 *         self.idx_branch = the_tree.GetBranch("idx")
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("idx")
 */
  __pyx_t_2 = ((!(__pyx_v_self->idx_branch != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L931_bool_binop_done;
  }
  __pyx_t_1 = 1;
  __pyx_L931_bool_binop_done:;
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3800
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 *             warnings.warn( "MuTauTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("idx")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_kp_s_MuTauTree_Expected_branch_idx_do);
    __Pyx_GIVEREF(__pyx_kp_s_MuTauTree_Expected_branch_idx_do);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_kp_s_MuTauTree_Expected_branch_idx_do);
    __Pyx_INCREF(__pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_builtin_Warning);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "MuTauTree.pyx":3799
 *         self.idx_branch = the_tree.GetBranch("idx")
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("idx")
 */
    goto __pyx_L930;
  }

  /* "MuTauTree.pyx":3803
 *             #self.complained.add("idx")
 *         else:
 *             self.idx_branch.SetAddress(<void*>&self.idx_value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __pyx_v_self->idx_branch->SetAddress(((void *)(&__pyx_v_self->idx_value)));
  }
  __pyx_L930:;

  /* "MuTauTree.pyx":1012
 *             self.setup_branches(new_tree)
 * 
 *     cdef setup_branches(self, TTree* the_tree):             # <<<<<<<<<<<<<<
 *         #print "setup"
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.setup_branches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_4generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "MuTauTree.pyx":3807
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2__iter__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2__iter__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);
  __pyx_cur_scope = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)__pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__(__pyx_ptype_9MuTauTree___pyx_scope_struct____iter__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_9MuTauTree_9MuTauTree_4generator, (PyObject *) __pyx_cur_scope, __pyx_n_s_iter, __pyx_n_s_MuTauTree___iter); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_4generator(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *__pyx_cur_scope = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3808
 *     # Iterating over the tree
 *     def __iter__(self):
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)
 */
  __pyx_cur_scope->__pyx_v_self->ientry = 0;

  /* "MuTauTree.pyx":3809
 *     def __iter__(self):
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():             # <<<<<<<<<<<<<<
 *             self.load_entry(self.ientry)
 *             yield self
 */
  while (1) {
    __pyx_t_1 = ((__pyx_cur_scope->__pyx_v_self->ientry < __pyx_cur_scope->__pyx_v_self->tree->GetEntries()) != 0);
    if (!__pyx_t_1) break;

    /* "MuTauTree.pyx":3810
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)             # <<<<<<<<<<<<<<
 *             yield self
 *             self.ientry += 1
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9MuTauTree_MuTauTree *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->load_entry(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_self->ientry); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3810; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "MuTauTree.pyx":3811
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)
 *             yield self             # <<<<<<<<<<<<<<
 *             self.ientry += 1
 * 
 */
    __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "MuTauTree.pyx":3812
 *             self.load_entry(self.ientry)
 *             yield self
 *             self.ientry += 1             # <<<<<<<<<<<<<<
 * 
 *     # Iterate over rows which pass the filter
 */
    __pyx_cur_scope->__pyx_v_self->ientry = (__pyx_cur_scope->__pyx_v_self->ientry + 1);
  }

  /* "MuTauTree.pyx":3807
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_7generator1(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* "MuTauTree.pyx":3815
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6where(PyObject *__pyx_v_self, PyObject *__pyx_v_filter); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6where(PyObject *__pyx_v_self, PyObject *__pyx_v_filter) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("where (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5where(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), ((PyObject *)__pyx_v_filter));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5where(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_filter) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("where", 0);
  __pyx_cur_scope = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)__pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where(__pyx_ptype_9MuTauTree___pyx_scope_struct_1_where, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_filter = __pyx_v_filter;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_filter);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_filter);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_9MuTauTree_9MuTauTree_7generator1, (PyObject *) __pyx_cur_scope, __pyx_n_s_where, __pyx_n_s_MuTauTree_where); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.where", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_7generator1(__pyx_CoroutineObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *__pyx_cur_scope = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  char *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L8_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3816
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):
 *         print "where"             # <<<<<<<<<<<<<<
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_where) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3818
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_cur_scope->__pyx_v_filter); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3817
 *     def where(self, filter):
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(             # <<<<<<<<<<<<<<
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0
 */
  __pyx_cur_scope->__pyx_v_formula = new TTreeFormula(__pyx_k_cyiter, __pyx_t_1, __pyx_cur_scope->__pyx_v_self->tree);

  /* "MuTauTree.pyx":3819
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():
 */
  __pyx_cur_scope->__pyx_v_self->ientry = 0;

  /* "MuTauTree.pyx":3820
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 */
  __pyx_cur_scope->__pyx_v_currentTree = __pyx_cur_scope->__pyx_v_self->tree->GetTree();

  /* "MuTauTree.pyx":3821
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():             # <<<<<<<<<<<<<<
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():
 */
  while (1) {
    __pyx_t_2 = ((__pyx_cur_scope->__pyx_v_self->ientry < __pyx_cur_scope->__pyx_v_self->tree->GetEntries()) != 0);
    if (!__pyx_t_2) break;

    /* "MuTauTree.pyx":3822
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)             # <<<<<<<<<<<<<<
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()
 */
    __pyx_cur_scope->__pyx_v_self->tree->LoadTree(__pyx_cur_scope->__pyx_v_self->ientry);

    /* "MuTauTree.pyx":3823
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():             # <<<<<<<<<<<<<<
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 */
    __pyx_t_2 = ((__pyx_cur_scope->__pyx_v_currentTree != __pyx_cur_scope->__pyx_v_self->tree->GetTree()) != 0);
    if (__pyx_t_2) {

      /* "MuTauTree.pyx":3824
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 */
      __pyx_cur_scope->__pyx_v_currentTree = __pyx_cur_scope->__pyx_v_self->tree->GetTree();

      /* "MuTauTree.pyx":3825
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)             # <<<<<<<<<<<<<<
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):
 */
      __pyx_cur_scope->__pyx_v_formula->SetTree(__pyx_cur_scope->__pyx_v_currentTree);

      /* "MuTauTree.pyx":3826
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()             # <<<<<<<<<<<<<<
 *             if formula.EvalInstance(0, NULL):
 *                 yield self
 */
      __pyx_cur_scope->__pyx_v_formula->UpdateFormulaLeaves();

      /* "MuTauTree.pyx":3823
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():             # <<<<<<<<<<<<<<
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 */
    }

    /* "MuTauTree.pyx":3827
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):             # <<<<<<<<<<<<<<
 *                 yield self
 *             self.ientry += 1
 */
    __pyx_t_2 = (__pyx_cur_scope->__pyx_v_formula->EvalInstance(0, NULL) != 0);
    if (__pyx_t_2) {

      /* "MuTauTree.pyx":3828
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):
 *                 yield self             # <<<<<<<<<<<<<<
 *             self.ientry += 1
 *         del formula
 */
      __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
      __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L8_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "MuTauTree.pyx":3827
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):             # <<<<<<<<<<<<<<
 *                 yield self
 *             self.ientry += 1
 */
    }

    /* "MuTauTree.pyx":3829
 *             if formula.EvalInstance(0, NULL):
 *                 yield self
 *             self.ientry += 1             # <<<<<<<<<<<<<<
 *         del formula
 * 
 */
    __pyx_cur_scope->__pyx_v_self->ientry = (__pyx_cur_scope->__pyx_v_self->ientry + 1);
  }

  /* "MuTauTree.pyx":3830
 *                 yield self
 *             self.ientry += 1
 *         del formula             # <<<<<<<<<<<<<<
 * 
 *     # Getting/setting the Tree entry number
 */
  delete __pyx_cur_scope->__pyx_v_formula;

  /* "MuTauTree.pyx":3815
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("where", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3834
 *     # Getting/setting the Tree entry number
 *     property entry:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ientry
 *         def __set__(self, int i):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5entry_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5entry_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5entry___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5entry___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3835
 *     property entry:
 *         def __get__(self):
 *             return self.ientry             # <<<<<<<<<<<<<<
 *         def __set__(self, int i):
 *             print i
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_self->ientry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3834
 *     # Getting/setting the Tree entry number
 *     property entry:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ientry
 *         def __set__(self, int i):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.entry.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3836
 *         def __get__(self):
 *             return self.ientry
 *         def __set__(self, int i):             # <<<<<<<<<<<<<<
 *             print i
 *             self.ientry = i
 */

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_5entry_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_5entry_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_As_int(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3836; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.entry.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5entry_2__set__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), ((int)__pyx_v_i));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9MuTauTree_9MuTauTree_5entry_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, int __pyx_v_i) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "MuTauTree.pyx":3837
 *             return self.ientry
 *         def __set__(self, int i):
 *             print i             # <<<<<<<<<<<<<<
 *             self.ientry = i
 *             self.load_entry(i)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":3838
 *         def __set__(self, int i):
 *             print i
 *             self.ientry = i             # <<<<<<<<<<<<<<
 *             self.load_entry(i)
 * 
 */
  __pyx_v_self->ientry = __pyx_v_i;

  /* "MuTauTree.pyx":3839
 *             print i
 *             self.ientry = i
 *             self.load_entry(i)             # <<<<<<<<<<<<<<
 * 
 *     # Access to the current branch values
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9MuTauTree_MuTauTree *)__pyx_v_self->__pyx_vtab)->load_entry(__pyx_v_self, __pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":3836
 *         def __get__(self):
 *             return self.ientry
 *         def __set__(self, int i):             # <<<<<<<<<<<<<<
 *             print i
 *             self.ientry = i
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.entry.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3844
 * 
 *     property EmbPtWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)
 *             return self.EmbPtWeight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11EmbPtWeight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11EmbPtWeight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11EmbPtWeight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11EmbPtWeight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3845
 *     property EmbPtWeight:
 *         def __get__(self):
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.EmbPtWeight_value
 * 
 */
  __pyx_v_self->EmbPtWeight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3846
 *         def __get__(self):
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)
 *             return self.EmbPtWeight_value             # <<<<<<<<<<<<<<
 * 
 *     property Eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->EmbPtWeight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3844
 * 
 *     property EmbPtWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.EmbPtWeight_branch.GetEntry(self.localentry, 0)
 *             return self.EmbPtWeight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.EmbPtWeight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3849
 * 
 *     property Eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Eta_branch.GetEntry(self.localentry, 0)
 *             return self.Eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3Eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3Eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3Eta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3Eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3850
 *     property Eta:
 *         def __get__(self):
 *             self.Eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Eta_value
 * 
 */
  __pyx_v_self->Eta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3851
 *         def __get__(self):
 *             self.Eta_branch.GetEntry(self.localentry, 0)
 *             return self.Eta_value             # <<<<<<<<<<<<<<
 * 
 *     property GenWeight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Eta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3849
 * 
 *     property Eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Eta_branch.GetEntry(self.localentry, 0)
 *             return self.Eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3854
 * 
 *     property GenWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)
 *             return self.GenWeight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9GenWeight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9GenWeight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9GenWeight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9GenWeight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3855
 *     property GenWeight:
 *         def __get__(self):
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.GenWeight_value
 * 
 */
  __pyx_v_self->GenWeight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3856
 *         def __get__(self):
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)
 *             return self.GenWeight_value             # <<<<<<<<<<<<<<
 * 
 *     property Ht:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->GenWeight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3854
 * 
 *     property GenWeight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.GenWeight_branch.GetEntry(self.localentry, 0)
 *             return self.GenWeight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.GenWeight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3859
 * 
 *     property Ht:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ht_branch.GetEntry(self.localentry, 0)
 *             return self.Ht_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Ht_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Ht_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2Ht___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Ht___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3860
 *     property Ht:
 *         def __get__(self):
 *             self.Ht_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Ht_value
 * 
 */
  __pyx_v_self->Ht_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3861
 *         def __get__(self):
 *             self.Ht_branch.GetEntry(self.localentry, 0)
 *             return self.Ht_value             # <<<<<<<<<<<<<<
 * 
 *     property LT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Ht_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3859
 * 
 *     property Ht:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Ht_branch.GetEntry(self.localentry, 0)
 *             return self.Ht_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Ht.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3864
 * 
 *     property LT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2LT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2LT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2LT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2LT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3865
 *     property LT:
 *         def __get__(self):
 *             self.LT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.LT_value
 * 
 */
  __pyx_v_self->LT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3866
 *         def __get__(self):
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value             # <<<<<<<<<<<<<<
 * 
 *     property Mass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->LT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3864
 * 
 *     property LT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.LT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3869
 * 
 *     property Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4Mass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4Mass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4Mass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3870
 *     property Mass:
 *         def __get__(self):
 *             self.Mass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Mass_value
 * 
 */
  __pyx_v_self->Mass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3871
 *         def __get__(self):
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value             # <<<<<<<<<<<<<<
 * 
 *     property MassError:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Mass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3869
 * 
 *     property Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Mass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3874
 * 
 *     property MassError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9MassError_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9MassError_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9MassError___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9MassError___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3875
 *     property MassError:
 *         def __get__(self):
 *             self.MassError_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassError_value
 * 
 */
  __pyx_v_self->MassError_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3876
 *         def __get__(self):
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassError_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3874
 * 
 *     property MassError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassError.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3879
 * 
 *     property MassErrord1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3880
 *     property MassErrord1:
 *         def __get__(self):
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord1_value
 * 
 */
  __pyx_v_self->MassErrord1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3881
 *         def __get__(self):
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3879
 * 
 *     property MassErrord1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3884
 * 
 *     property MassErrord2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3885
 *     property MassErrord2:
 *         def __get__(self):
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord2_value
 * 
 */
  __pyx_v_self->MassErrord2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3886
 *         def __get__(self):
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord3:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3884
 * 
 *     property MassErrord2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3889
 * 
 *     property MassErrord3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord3___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3890
 *     property MassErrord3:
 *         def __get__(self):
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord3_value
 * 
 */
  __pyx_v_self->MassErrord3_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3891
 *         def __get__(self):
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord4:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord3_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3889
 * 
 *     property MassErrord3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3894
 * 
 *     property MassErrord4:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord4_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord4_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord4___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord4___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3895
 *     property MassErrord4:
 *         def __get__(self):
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord4_value
 * 
 */
  __pyx_v_self->MassErrord4_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3896
 *         def __get__(self):
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value             # <<<<<<<<<<<<<<
 * 
 *     property Mt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord4_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3894
 * 
 *     property MassErrord4:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord4.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3899
 * 
 *     property Mt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mt_branch.GetEntry(self.localentry, 0)
 *             return self.Mt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Mt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Mt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2Mt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Mt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3900
 *     property Mt:
 *         def __get__(self):
 *             self.Mt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Mt_value
 * 
 */
  __pyx_v_self->Mt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3901
 *         def __get__(self):
 *             self.Mt_branch.GetEntry(self.localentry, 0)
 *             return self.Mt_value             # <<<<<<<<<<<<<<
 * 
 *     property NUP:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Mt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3899
 * 
 *     property Mt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mt_branch.GetEntry(self.localentry, 0)
 *             return self.Mt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Mt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3904
 * 
 *     property NUP:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.NUP_branch.GetEntry(self.localentry, 0)
 *             return self.NUP_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3NUP_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3NUP_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3NUP___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3NUP___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3905
 *     property NUP:
 *         def __get__(self):
 *             self.NUP_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.NUP_value
 * 
 */
  __pyx_v_self->NUP_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3906
 *         def __get__(self):
 *             self.NUP_branch.GetEntry(self.localentry, 0)
 *             return self.NUP_value             # <<<<<<<<<<<<<<
 * 
 *     property Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->NUP_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3904
 * 
 *     property NUP:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.NUP_branch.GetEntry(self.localentry, 0)
 *             return self.NUP_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.NUP.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3909
 * 
 *     property Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Phi_branch.GetEntry(self.localentry, 0)
 *             return self.Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3910
 *     property Phi:
 *         def __get__(self):
 *             self.Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Phi_value
 * 
 */
  __pyx_v_self->Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3911
 *         def __get__(self):
 *             self.Phi_branch.GetEntry(self.localentry, 0)
 *             return self.Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property Pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3909
 * 
 *     property Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Phi_branch.GetEntry(self.localentry, 0)
 *             return self.Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3914
 * 
 *     property Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2Pt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3915
 *     property Pt:
 *         def __get__(self):
 *             self.Pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Pt_value
 * 
 */
  __pyx_v_self->Pt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3916
 *         def __get__(self):
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCISVVeto20Loose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Pt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3914
 * 
 *     property Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3919
 * 
 *     property bjetCISVVeto20Loose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto20Loose_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Loose_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto20Loose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto20Loose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto20Loose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto20Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3920
 *     property bjetCISVVeto20Loose:
 *         def __get__(self):
 *             self.bjetCISVVeto20Loose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCISVVeto20Loose_value
 * 
 */
  __pyx_v_self->bjetCISVVeto20Loose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3921
 *         def __get__(self):
 *             self.bjetCISVVeto20Loose_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Loose_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCISVVeto20Medium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCISVVeto20Loose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3919
 * 
 *     property bjetCISVVeto20Loose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto20Loose_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Loose_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCISVVeto20Loose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3924
 * 
 *     property bjetCISVVeto20Medium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto20Medium_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Medium_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20bjetCISVVeto20Medium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20bjetCISVVeto20Medium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20bjetCISVVeto20Medium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20bjetCISVVeto20Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3925
 *     property bjetCISVVeto20Medium:
 *         def __get__(self):
 *             self.bjetCISVVeto20Medium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCISVVeto20Medium_value
 * 
 */
  __pyx_v_self->bjetCISVVeto20Medium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3926
 *         def __get__(self):
 *             self.bjetCISVVeto20Medium_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Medium_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCISVVeto20Tight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCISVVeto20Medium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3924
 * 
 *     property bjetCISVVeto20Medium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto20Medium_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Medium_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCISVVeto20Medium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3929
 * 
 *     property bjetCISVVeto20Tight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto20Tight_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Tight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto20Tight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto20Tight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto20Tight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto20Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3930
 *     property bjetCISVVeto20Tight:
 *         def __get__(self):
 *             self.bjetCISVVeto20Tight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCISVVeto20Tight_value
 * 
 */
  __pyx_v_self->bjetCISVVeto20Tight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3931
 *         def __get__(self):
 *             self.bjetCISVVeto20Tight_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Tight_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCISVVeto30Loose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCISVVeto20Tight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3931; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3929
 * 
 *     property bjetCISVVeto20Tight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto20Tight_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto20Tight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCISVVeto20Tight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3934
 * 
 *     property bjetCISVVeto30Loose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto30Loose_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Loose_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto30Loose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto30Loose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto30Loose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto30Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3935
 *     property bjetCISVVeto30Loose:
 *         def __get__(self):
 *             self.bjetCISVVeto30Loose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCISVVeto30Loose_value
 * 
 */
  __pyx_v_self->bjetCISVVeto30Loose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3936
 *         def __get__(self):
 *             self.bjetCISVVeto30Loose_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Loose_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCISVVeto30Medium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCISVVeto30Loose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3934
 * 
 *     property bjetCISVVeto30Loose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto30Loose_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Loose_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCISVVeto30Loose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3939
 * 
 *     property bjetCISVVeto30Medium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto30Medium_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Medium_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20bjetCISVVeto30Medium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20bjetCISVVeto30Medium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20bjetCISVVeto30Medium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20bjetCISVVeto30Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3940
 *     property bjetCISVVeto30Medium:
 *         def __get__(self):
 *             self.bjetCISVVeto30Medium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCISVVeto30Medium_value
 * 
 */
  __pyx_v_self->bjetCISVVeto30Medium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3941
 *         def __get__(self):
 *             self.bjetCISVVeto30Medium_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Medium_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCISVVeto30Tight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCISVVeto30Medium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3939
 * 
 *     property bjetCISVVeto30Medium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto30Medium_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Medium_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCISVVeto30Medium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3944
 * 
 *     property bjetCISVVeto30Tight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto30Tight_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Tight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto30Tight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto30Tight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto30Tight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19bjetCISVVeto30Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3945
 *     property bjetCISVVeto30Tight:
 *         def __get__(self):
 *             self.bjetCISVVeto30Tight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCISVVeto30Tight_value
 * 
 */
  __pyx_v_self->bjetCISVVeto30Tight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3946
 *         def __get__(self):
 *             self.bjetCISVVeto30Tight_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Tight_value             # <<<<<<<<<<<<<<
 * 
 *     property charge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCISVVeto30Tight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3944
 * 
 *     property bjetCISVVeto30Tight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCISVVeto30Tight_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCISVVeto30Tight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCISVVeto30Tight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3949
 * 
 *     property charge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6charge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6charge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6charge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6charge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3950
 *     property charge:
 *         def __get__(self):
 *             self.charge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.charge_value
 * 
 */
  __pyx_v_self->charge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3951
 *         def __get__(self):
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->charge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3949
 * 
 *     property charge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.charge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3954
 * 
 *     property doubleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12doubleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3955
 *     property doubleEGroup:
 *         def __get__(self):
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEGroup_value
 * 
 */
  __pyx_v_self->doubleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3956
 *         def __get__(self):
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3954
 * 
 *     property doubleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3959
 * 
 *     property doubleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11doubleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11doubleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11doubleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11doubleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3960
 *     property doubleEPass:
 *         def __get__(self):
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEPass_value
 * 
 */
  __pyx_v_self->doubleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3961
 *         def __get__(self):
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3959
 * 
 *     property doubleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3964
 * 
 *     property doubleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15doubleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15doubleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15doubleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15doubleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3965
 *     property doubleEPrescale:
 *         def __get__(self):
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEPrescale_value
 * 
 */
  __pyx_v_self->doubleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3966
 *         def __get__(self):
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleESingleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3964
 * 
 *     property doubleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3969
 * 
 *     property doubleESingleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleESingleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleESingleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleESingleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20doubleESingleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleESingleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3970
 *     property doubleESingleMuGroup:
 *         def __get__(self):
 *             self.doubleESingleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleESingleMuGroup_value
 * 
 */
  __pyx_v_self->doubleESingleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3971
 *         def __get__(self):
 *             self.doubleESingleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleESingleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleESingleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3969
 * 
 *     property doubleESingleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleESingleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleESingleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3974
 * 
 *     property doubleESingleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleESingleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19doubleESingleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19doubleESingleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19doubleESingleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19doubleESingleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3975
 *     property doubleESingleMuPass:
 *         def __get__(self):
 *             self.doubleESingleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleESingleMuPass_value
 * 
 */
  __pyx_v_self->doubleESingleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3976
 *         def __get__(self):
 *             self.doubleESingleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleESingleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleESingleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3974
 * 
 *     property doubleESingleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleESingleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleESingleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3979
 * 
 *     property doubleESingleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleESingleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23doubleESingleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23doubleESingleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23doubleESingleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23doubleESingleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3980
 *     property doubleESingleMuPrescale:
 *         def __get__(self):
 *             self.doubleESingleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleESingleMuPrescale_value
 * 
 */
  __pyx_v_self->doubleESingleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3981
 *         def __get__(self):
 *             self.doubleESingleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleESingleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3979
 * 
 *     property doubleESingleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleESingleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleESingleMuPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleESingleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3984
 * 
 *     property doubleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doubleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doubleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13doubleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doubleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3985
 *     property doubleMuGroup:
 *         def __get__(self):
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuGroup_value
 * 
 */
  __pyx_v_self->doubleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3986
 *         def __get__(self):
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3984
 * 
 *     property doubleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3989
 * 
 *     property doubleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12doubleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3990
 *     property doubleMuPass:
 *         def __get__(self):
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuPass_value
 * 
 */
  __pyx_v_self->doubleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3991
 *         def __get__(self):
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3989
 * 
 *     property doubleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3994
 * 
 *     property doubleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16doubleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3995
 *     property doubleMuPrescale:
 *         def __get__(self):
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuPrescale_value
 * 
 */
  __pyx_v_self->doubleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3996
 *         def __get__(self):
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuSingleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3994
 * 
 *     property doubleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3999
 * 
 *     property doubleMuSingleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuSingleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleMuSingleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleMuSingleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20doubleMuSingleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleMuSingleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4000
 *     property doubleMuSingleEGroup:
 *         def __get__(self):
 *             self.doubleMuSingleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuSingleEGroup_value
 * 
 */
  __pyx_v_self->doubleMuSingleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4001
 *         def __get__(self):
 *             self.doubleMuSingleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuSingleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuSingleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":3999
 * 
 *     property doubleMuSingleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuSingleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuSingleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4004
 * 
 *     property doubleMuSingleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuSingleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19doubleMuSingleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19doubleMuSingleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19doubleMuSingleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19doubleMuSingleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4005
 *     property doubleMuSingleEPass:
 *         def __get__(self):
 *             self.doubleMuSingleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuSingleEPass_value
 * 
 */
  __pyx_v_self->doubleMuSingleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4006
 *         def __get__(self):
 *             self.doubleMuSingleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuSingleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuSingleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4004
 * 
 *     property doubleMuSingleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuSingleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuSingleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4009
 * 
 *     property doubleMuSingleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23doubleMuSingleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23doubleMuSingleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23doubleMuSingleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23doubleMuSingleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4010
 *     property doubleMuSingleEPrescale:
 *         def __get__(self):
 *             self.doubleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuSingleEPrescale_value
 * 
 */
  __pyx_v_self->doubleMuSingleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4011
 *         def __get__(self):
 *             self.doubleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleTauGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuSingleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4009
 * 
 *     property doubleMuSingleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuSingleEPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuSingleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4014
 * 
 *     property doubleTauGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14doubleTauGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14doubleTauGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14doubleTauGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14doubleTauGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4015
 *     property doubleTauGroup:
 *         def __get__(self):
 *             self.doubleTauGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleTauGroup_value
 * 
 */
  __pyx_v_self->doubleTauGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4016
 *         def __get__(self):
 *             self.doubleTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleTauPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleTauGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4014
 * 
 *     property doubleTauGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleTauGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4019
 * 
 *     property doubleTauPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doubleTauPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doubleTauPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13doubleTauPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doubleTauPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4020
 *     property doubleTauPass:
 *         def __get__(self):
 *             self.doubleTauPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleTauPass_value
 * 
 */
  __pyx_v_self->doubleTauPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4021
 *         def __get__(self):
 *             self.doubleTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleTauPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleTauPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4021; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4019
 * 
 *     property doubleTauPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleTauPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4024
 * 
 *     property doubleTauPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doubleTauPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doubleTauPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17doubleTauPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doubleTauPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4025
 *     property doubleTauPrescale:
 *         def __get__(self):
 *             self.doubleTauPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleTauPrescale_value
 * 
 */
  __pyx_v_self->doubleTauPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4026
 *         def __get__(self):
 *             self.doubleTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoMVAIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleTauPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4024
 * 
 *     property doubleTauPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleTauPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleTauPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4029
 * 
 *     property eVetoMVAIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11eVetoMVAIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11eVetoMVAIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11eVetoMVAIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11eVetoMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4030
 *     property eVetoMVAIso:
 *         def __get__(self):
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoMVAIso_value
 * 
 */
  __pyx_v_self->eVetoMVAIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4031
 *         def __get__(self):
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIso_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoMVAIsoVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoMVAIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4029
 * 
 *     property eVetoMVAIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.eVetoMVAIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4034
 * 
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4035
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoMVAIsoVtx_value
 * 
 */
  __pyx_v_self->eVetoMVAIsoVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4036
 *         def __get__(self):
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property evt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoMVAIsoVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4034
 * 
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.eVetoMVAIsoVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4039
 * 
 *     property evt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3evt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3evt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3evt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3evt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4040
 *     property evt:
 *         def __get__(self):
 *             self.evt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.evt_value
 * 
 */
  __pyx_v_self->evt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4041
 *         def __get__(self):
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value             # <<<<<<<<<<<<<<
 * 
 *     property isdata:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->evt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4039
 * 
 *     property evt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.evt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4044
 * 
 *     property isdata:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6isdata_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6isdata_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6isdata___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6isdata___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4045
 *     property isdata:
 *         def __get__(self):
 *             self.isdata_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isdata_value
 * 
 */
  __pyx_v_self->isdata_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4046
 *         def __get__(self):
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->isdata_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4044
 * 
 *     property isdata:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isdata.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4049
 * 
 *     property jetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9jetVeto20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4050
 *     property jetVeto20:
 *         def __get__(self):
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto20_value
 * 
 */
  __pyx_v_self->jetVeto20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4051
 *         def __get__(self):
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto20_DR05:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4049
 * 
 *     property jetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4054
 * 
 *     property jetVeto20_DR05:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_DR05_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14jetVeto20_DR05_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14jetVeto20_DR05_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14jetVeto20_DR05___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14jetVeto20_DR05___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4055
 *     property jetVeto20_DR05:
 *         def __get__(self):
 *             self.jetVeto20_DR05_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto20_DR05_value
 * 
 */
  __pyx_v_self->jetVeto20_DR05_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4056
 *         def __get__(self):
 *             self.jetVeto20_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_DR05_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto20_DR05_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4054
 * 
 *     property jetVeto20_DR05:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_DR05_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto20_DR05.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4059
 * 
 *     property jetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9jetVeto30___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4060
 *     property jetVeto30:
 *         def __get__(self):
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30_value
 * 
 */
  __pyx_v_self->jetVeto30_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4061
 *         def __get__(self):
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30_DR05:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4059
 * 
 *     property jetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4064
 * 
 *     property jetVeto30_DR05:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_DR05_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14jetVeto30_DR05_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14jetVeto30_DR05_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14jetVeto30_DR05___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14jetVeto30_DR05___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4065
 *     property jetVeto30_DR05:
 *         def __get__(self):
 *             self.jetVeto30_DR05_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30_DR05_value
 * 
 */
  __pyx_v_self->jetVeto30_DR05_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4066
 *         def __get__(self):
 *             self.jetVeto30_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_DR05_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto40:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30_DR05_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4064
 * 
 *     property jetVeto30_DR05:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_DR05_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto30_DR05.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4069
 * 
 *     property jetVeto40:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto40_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto40_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9jetVeto40___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto40___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4070
 *     property jetVeto40:
 *         def __get__(self):
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto40_value
 * 
 */
  __pyx_v_self->jetVeto40_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4071
 *         def __get__(self):
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto40_DR05:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto40_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4069
 * 
 *     property jetVeto40:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto40.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4074
 * 
 *     property jetVeto40_DR05:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto40_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_DR05_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14jetVeto40_DR05_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14jetVeto40_DR05_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14jetVeto40_DR05___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14jetVeto40_DR05___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4075
 *     property jetVeto40_DR05:
 *         def __get__(self):
 *             self.jetVeto40_DR05_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto40_DR05_value
 * 
 */
  __pyx_v_self->jetVeto40_DR05_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4076
 *         def __get__(self):
 *             self.jetVeto40_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_DR05_value             # <<<<<<<<<<<<<<
 * 
 *     property lumi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto40_DR05_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4074
 * 
 *     property jetVeto40_DR05:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto40_DR05_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_DR05_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto40_DR05.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4079
 * 
 *     property lumi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4lumi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4lumi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4lumi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4lumi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4080
 *     property lumi:
 *         def __get__(self):
 *             self.lumi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.lumi_value
 * 
 */
  __pyx_v_self->lumi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4081
 *         def __get__(self):
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value             # <<<<<<<<<<<<<<
 * 
 *     property mAbsEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->lumi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4079
 * 
 *     property lumi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.lumi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4084
 * 
 *     property mAbsEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.mAbsEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mAbsEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mAbsEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mAbsEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4085
 *     property mAbsEta:
 *         def __get__(self):
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mAbsEta_value
 * 
 */
  __pyx_v_self->mAbsEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4086
 *         def __get__(self):
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.mAbsEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mBestTrackType:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mAbsEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4084
 * 
 *     property mAbsEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.mAbsEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mAbsEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4089
 * 
 *     property mBestTrackType:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mBestTrackType_branch.GetEntry(self.localentry, 0)
 *             return self.mBestTrackType_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mBestTrackType_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mBestTrackType_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mBestTrackType___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mBestTrackType___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4090
 *     property mBestTrackType:
 *         def __get__(self):
 *             self.mBestTrackType_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mBestTrackType_value
 * 
 */
  __pyx_v_self->mBestTrackType_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4091
 *         def __get__(self):
 *             self.mBestTrackType_branch.GetEntry(self.localentry, 0)
 *             return self.mBestTrackType_value             # <<<<<<<<<<<<<<
 * 
 *     property mCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mBestTrackType_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4089
 * 
 *     property mBestTrackType:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mBestTrackType_branch.GetEntry(self.localentry, 0)
 *             return self.mBestTrackType_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mBestTrackType.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4094
 * 
 *     property mCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mCharge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4095
 *     property mCharge:
 *         def __get__(self):
 *             self.mCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mCharge_value
 * 
 */
  __pyx_v_self->mCharge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4096
 *         def __get__(self):
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property mComesFromHiggs:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mCharge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4094
 * 
 *     property mCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4099
 * 
 *     property mComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mComesFromHiggs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mComesFromHiggs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mComesFromHiggs___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mComesFromHiggs___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4100
 *     property mComesFromHiggs:
 *         def __get__(self):
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mComesFromHiggs_value
 * 
 */
  __pyx_v_self->mComesFromHiggs_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4101
 *         def __get__(self):
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value             # <<<<<<<<<<<<<<
 * 
 *     property mEffectiveArea2011:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mComesFromHiggs_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4099
 * 
 *     property mComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mComesFromHiggs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4104
 * 
 *     property mEffectiveArea2011:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2011_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2011_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2011_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2011___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4105
 *     property mEffectiveArea2011:
 *         def __get__(self):
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEffectiveArea2011_value
 * 
 */
  __pyx_v_self->mEffectiveArea2011_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4106
 *         def __get__(self):
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2011_value             # <<<<<<<<<<<<<<
 * 
 *     property mEffectiveArea2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEffectiveArea2011_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4104
 * 
 *     property mEffectiveArea2011:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2011_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEffectiveArea2011.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4109
 * 
 *     property mEffectiveArea2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2012_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4110
 *     property mEffectiveArea2012:
 *         def __get__(self):
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEffectiveArea2012_value
 * 
 */
  __pyx_v_self->mEffectiveArea2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4111
 *         def __get__(self):
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEffectiveArea2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4109
 * 
 *     property mEffectiveArea2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2012_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEffectiveArea2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4114
 * 
 *     property mEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4mEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4115
 *     property mEta:
 *         def __get__(self):
 *             self.mEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEta_value
 * 
 */
  __pyx_v_self->mEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4116
 *         def __get__(self):
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4114
 * 
 *     property mEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4119
 * 
 *     property mGenCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mGenCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mGenCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mGenCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mGenCharge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mGenCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4120
 *     property mGenCharge:
 *         def __get__(self):
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenCharge_value
 * 
 */
  __pyx_v_self->mGenCharge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4121
 *         def __get__(self):
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mGenCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenEnergy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenCharge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4119
 * 
 *     property mGenCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mGenCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4124
 * 
 *     property mGenEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEnergy_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mGenEnergy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mGenEnergy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mGenEnergy___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mGenEnergy___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4125
 *     property mGenEnergy:
 *         def __get__(self):
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenEnergy_value
 * 
 */
  __pyx_v_self->mGenEnergy_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4126
 *         def __get__(self):
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEnergy_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenEnergy_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4124
 * 
 *     property mGenEnergy:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEnergy_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEnergy_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenEnergy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4129
 * 
 *     property mGenEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mGenEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mGenEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mGenEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mGenEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4130
 *     property mGenEta:
 *         def __get__(self):
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenEta_value
 * 
 */
  __pyx_v_self->mGenEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4131
 *         def __get__(self):
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenMotherPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4129
 * 
 *     property mGenEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenEta_branch.GetEntry(self.localentry, 0)
 *             return self.mGenEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4134
 * 
 *     property mGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mGenMotherPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mGenMotherPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mGenMotherPdgId___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mGenMotherPdgId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4135
 *     property mGenMotherPdgId:
 *         def __get__(self):
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenMotherPdgId_value
 * 
 */
  __pyx_v_self->mGenMotherPdgId_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4136
 *         def __get__(self):
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenMotherPdgId_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4134
 * 
 *     property mGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenMotherPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4139
 * 
 *     property mGenPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPdgId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mGenPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mGenPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mGenPdgId___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mGenPdgId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4140
 *     property mGenPdgId:
 *         def __get__(self):
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPdgId_value
 * 
 */
  __pyx_v_self->mGenPdgId_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4141
 *         def __get__(self):
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPdgId_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4139
 * 
 *     property mGenPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPdgId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4144
 * 
 *     property mGenPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mGenPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mGenPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mGenPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mGenPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4145
 *     property mGenPhi:
 *         def __get__(self):
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPhi_value
 * 
 */
  __pyx_v_self->mGenPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4146
 *         def __get__(self):
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4144
 * 
 *     property mGenPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4149
 * 
 *     property mGenPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mGenPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mGenPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mGenPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mGenPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4150
 *     property mGenPt:
 *         def __get__(self):
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenPt_value
 * 
 */
  __pyx_v_self->mGenPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4151
 *         def __get__(self):
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4149
 * 
 *     property mGenPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenPt_branch.GetEntry(self.localentry, 0)
 *             return self.mGenPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4154
 * 
 *     property mGenVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mGenVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mGenVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mGenVZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mGenVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4155
 *     property mGenVZ:
 *         def __get__(self):
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenVZ_value
 * 
 */
  __pyx_v_self->mGenVZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4156
 *         def __get__(self):
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenVtxPVMatch:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenVZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4154
 * 
 *     property mGenVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4159
 * 
 *     property mGenVtxPVMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVtxPVMatch_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mGenVtxPVMatch_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mGenVtxPVMatch_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mGenVtxPVMatch___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mGenVtxPVMatch___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4160
 *     property mGenVtxPVMatch:
 *         def __get__(self):
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenVtxPVMatch_value
 * 
 */
  __pyx_v_self->mGenVtxPVMatch_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4161
 *         def __get__(self):
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVtxPVMatch_value             # <<<<<<<<<<<<<<
 * 
 *     property mIP3D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenVtxPVMatch_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4159
 * 
 *     property mGenVtxPVMatch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenVtxPVMatch_branch.GetEntry(self.localentry, 0)
 *             return self.mGenVtxPVMatch_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenVtxPVMatch.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4164
 * 
 *     property mIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mIP3D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mIP3D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mIP3D___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mIP3D___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4165
 *     property mIP3D:
 *         def __get__(self):
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIP3D_value
 * 
 */
  __pyx_v_self->mIP3D_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4166
 *         def __get__(self):
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3D_value             # <<<<<<<<<<<<<<
 * 
 *     property mIP3DErr:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIP3D_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4164
 * 
 *     property mIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIP3D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4169
 * 
 *     property mIP3DErr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DErr_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mIP3DErr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mIP3DErr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mIP3DErr___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mIP3DErr___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4170
 *     property mIP3DErr:
 *         def __get__(self):
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIP3DErr_value
 * 
 */
  __pyx_v_self->mIP3DErr_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4171
 *         def __get__(self):
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DErr_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsGlobal:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIP3DErr_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4169
 * 
 *     property mIP3DErr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3DErr_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DErr_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIP3DErr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4174
 * 
 *     property mIsGlobal:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mIsGlobal_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mIsGlobal_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mIsGlobal___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mIsGlobal___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4175
 *     property mIsGlobal:
 *         def __get__(self):
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsGlobal_value
 * 
 */
  __pyx_v_self->mIsGlobal_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4176
 *         def __get__(self):
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsPFMuon:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsGlobal_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4174
 * 
 *     property mIsGlobal:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIsGlobal.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4179
 * 
 *     property mIsPFMuon:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)
 *             return self.mIsPFMuon_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mIsPFMuon_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mIsPFMuon_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mIsPFMuon___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mIsPFMuon___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4180
 *     property mIsPFMuon:
 *         def __get__(self):
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsPFMuon_value
 * 
 */
  __pyx_v_self->mIsPFMuon_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4181
 *         def __get__(self):
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)
 *             return self.mIsPFMuon_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsTracker:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsPFMuon_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4179
 * 
 *     property mIsPFMuon:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsPFMuon_branch.GetEntry(self.localentry, 0)
 *             return self.mIsPFMuon_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIsPFMuon.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4184
 * 
 *     property mIsTracker:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIsTracker_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIsTracker_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mIsTracker___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIsTracker___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4185
 *     property mIsTracker:
 *         def __get__(self):
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsTracker_value
 * 
 */
  __pyx_v_self->mIsTracker_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4186
 *         def __get__(self):
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetArea:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsTracker_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4184
 * 
 *     property mIsTracker:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIsTracker.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4189
 * 
 *     property mJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mJetArea___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4190
 *     property mJetArea:
 *         def __get__(self):
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetArea_value
 * 
 */
  __pyx_v_self->mJetArea_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4191
 *         def __get__(self):
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetArea_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4189
 * 
 *     property mJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4194
 * 
 *     property mJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mJetBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4195
 *     property mJetBtag:
 *         def __get__(self):
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetBtag_value
 * 
 */
  __pyx_v_self->mJetBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4196
 *         def __get__(self):
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaEtaMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4194
 * 
 *     property mJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4199
 * 
 *     property mJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4200
 *     property mJetEtaEtaMoment:
 *         def __get__(self):
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaEtaMoment_value
 * 
 */
  __pyx_v_self->mJetEtaEtaMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4201
 *         def __get__(self):
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaEtaMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4199
 * 
 *     property mJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetEtaEtaMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4204
 * 
 *     property mJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4205
 *     property mJetEtaPhiMoment:
 *         def __get__(self):
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaPhiMoment_value
 * 
 */
  __pyx_v_self->mJetEtaPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4206
 *         def __get__(self):
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaPhiSpread:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4204
 * 
 *     property mJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetEtaPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4209
 * 
 *     property mJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4210
 *     property mJetEtaPhiSpread:
 *         def __get__(self):
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaPhiSpread_value
 * 
 */
  __pyx_v_self->mJetEtaPhiSpread_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4211
 *         def __get__(self):
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPFCISVBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaPhiSpread_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4209
 * 
 *     property mJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetEtaPhiSpread.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4214
 * 
 *     property mJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPFCISVBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mJetPFCISVBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mJetPFCISVBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mJetPFCISVBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mJetPFCISVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4215
 *     property mJetPFCISVBtag:
 *         def __get__(self):
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPFCISVBtag_value
 * 
 */
  __pyx_v_self->mJetPFCISVBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4216
 *         def __get__(self):
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPFCISVBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPartonFlavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPFCISVBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4214
 * 
 *     property mJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPFCISVBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetPFCISVBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4219
 * 
 *     property mJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPartonFlavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mJetPartonFlavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mJetPartonFlavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17mJetPartonFlavour___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mJetPartonFlavour___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4220
 *     property mJetPartonFlavour:
 *         def __get__(self):
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPartonFlavour_value
 * 
 */
  __pyx_v_self->mJetPartonFlavour_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4221
 *         def __get__(self):
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPartonFlavour_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPhiPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPartonFlavour_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4219
 * 
 *     property mJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPartonFlavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetPartonFlavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4224
 * 
 *     property mJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4225
 *     property mJetPhiPhiMoment:
 *         def __get__(self):
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPhiPhiMoment_value
 * 
 */
  __pyx_v_self->mJetPhiPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4226
 *         def __get__(self):
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPhiPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4224
 * 
 *     property mJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetPhiPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4229
 * 
 *     property mJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mJetPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mJetPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mJetPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4230
 *     property mJetPt:
 *         def __get__(self):
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPt_value
 * 
 */
  __pyx_v_self->mJetPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4231
 *         def __get__(self):
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mLowestMll:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4229
 * 
 *     property mJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4234
 * 
 *     property mLowestMll:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mLowestMll_branch.GetEntry(self.localentry, 0)
 *             return self.mLowestMll_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mLowestMll_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mLowestMll_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mLowestMll___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mLowestMll___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4235
 *     property mLowestMll:
 *         def __get__(self):
 *             self.mLowestMll_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mLowestMll_value
 * 
 */
  __pyx_v_self->mLowestMll_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4236
 *         def __get__(self):
 *             self.mLowestMll_branch.GetEntry(self.localentry, 0)
 *             return self.mLowestMll_value             # <<<<<<<<<<<<<<
 * 
 *     property mMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mLowestMll_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4234
 * 
 *     property mLowestMll:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mLowestMll_branch.GetEntry(self.localentry, 0)
 *             return self.mLowestMll_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mLowestMll.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4239
 * 
 *     property mMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4240
 *     property mMass:
 *         def __get__(self):
 *             self.mMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMass_value
 * 
 */
  __pyx_v_self->mMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4241
 *         def __get__(self):
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchedStations:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4239
 * 
 *     property mMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4244
 * 
 *     property mMatchedStations:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchedStations_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchedStations_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchedStations_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mMatchedStations___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchedStations___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4245
 *     property mMatchedStations:
 *         def __get__(self):
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchedStations_value
 * 
 */
  __pyx_v_self->mMatchedStations_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4246
 *         def __get__(self):
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchedStations_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesDoubleESingleMu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchedStations_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4244
 * 
 *     property mMatchedStations:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchedStations_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchedStations.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4249
 * 
 *     property mMatchesDoubleESingleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleESingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleESingleMu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesDoubleESingleMu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesDoubleESingleMu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mMatchesDoubleESingleMu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesDoubleESingleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4250
 *     property mMatchesDoubleESingleMu:
 *         def __get__(self):
 *             self.mMatchesDoubleESingleMu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesDoubleESingleMu_value
 * 
 */
  __pyx_v_self->mMatchesDoubleESingleMu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4251
 *         def __get__(self):
 *             self.mMatchesDoubleESingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleESingleMu_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesDoubleMu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesDoubleESingleMu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4249
 * 
 *     property mMatchesDoubleESingleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleESingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleESingleMu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesDoubleESingleMu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4254
 * 
 *     property mMatchesDoubleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchesDoubleMu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchesDoubleMu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mMatchesDoubleMu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchesDoubleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4255
 *     property mMatchesDoubleMu:
 *         def __get__(self):
 *             self.mMatchesDoubleMu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesDoubleMu_value
 * 
 */
  __pyx_v_self->mMatchesDoubleMu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4256
 *         def __get__(self):
 *             self.mMatchesDoubleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMu_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesDoubleMuSingleE:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesDoubleMu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4254
 * 
 *     property mMatchesDoubleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesDoubleMu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4259
 * 
 *     property mMatchesDoubleMuSingleE:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleMuSingleE_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMuSingleE_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesDoubleMuSingleE_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesDoubleMuSingleE_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mMatchesDoubleMuSingleE___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesDoubleMuSingleE___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4260
 *     property mMatchesDoubleMuSingleE:
 *         def __get__(self):
 *             self.mMatchesDoubleMuSingleE_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesDoubleMuSingleE_value
 * 
 */
  __pyx_v_self->mMatchesDoubleMuSingleE_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4261
 *         def __get__(self):
 *             self.mMatchesDoubleMuSingleE_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMuSingleE_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleESingleMu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesDoubleMuSingleE_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4259
 * 
 *     property mMatchesDoubleMuSingleE:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleMuSingleE_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMuSingleE_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesDoubleMuSingleE.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4264
 * 
 *     property mMatchesSingleESingleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleESingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleESingleMu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesSingleESingleMu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesSingleESingleMu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mMatchesSingleESingleMu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesSingleESingleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4265
 *     property mMatchesSingleESingleMu:
 *         def __get__(self):
 *             self.mMatchesSingleESingleMu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleESingleMu_value
 * 
 */
  __pyx_v_self->mMatchesSingleESingleMu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4266
 *         def __get__(self):
 *             self.mMatchesSingleESingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleESingleMu_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleMu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleESingleMu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4264
 * 
 *     property mMatchesSingleESingleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleESingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleESingleMu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleESingleMu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4269
 * 
 *     property mMatchesSingleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchesSingleMu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchesSingleMu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mMatchesSingleMu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchesSingleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4270
 *     property mMatchesSingleMu:
 *         def __get__(self):
 *             self.mMatchesSingleMu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleMu_value
 * 
 */
  __pyx_v_self->mMatchesSingleMu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4271
 *         def __get__(self):
 *             self.mMatchesSingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleMuSingleE:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleMu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4269
 * 
 *     property mMatchesSingleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleMu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4274
 * 
 *     property mMatchesSingleMuSingleE:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMuSingleE_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMuSingleE_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesSingleMuSingleE_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mMatchesSingleMuSingleE_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mMatchesSingleMuSingleE___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mMatchesSingleMuSingleE___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4275
 *     property mMatchesSingleMuSingleE:
 *         def __get__(self):
 *             self.mMatchesSingleMuSingleE_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleMuSingleE_value
 * 
 */
  __pyx_v_self->mMatchesSingleMuSingleE_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4276
 *         def __get__(self):
 *             self.mMatchesSingleMuSingleE_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMuSingleE_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleMu_leg1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleMuSingleE_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4274
 * 
 *     property mMatchesSingleMuSingleE:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMuSingleE_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMuSingleE_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleMuSingleE.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4279
 * 
 *     property mMatchesSingleMu_leg1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg1_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4280
 *     property mMatchesSingleMu_leg1:
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleMu_leg1_value
 * 
 */
  __pyx_v_self->mMatchesSingleMu_leg1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4281
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg1_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg1_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleMu_leg1_noiso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleMu_leg1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4279
 * 
 *     property mMatchesSingleMu_leg1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg1_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleMu_leg1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4284
 * 
 *     property mMatchesSingleMu_leg1_noiso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg1_noiso_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg1_noiso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg1_noiso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg1_noiso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg1_noiso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg1_noiso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4285
 *     property mMatchesSingleMu_leg1_noiso:
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg1_noiso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleMu_leg1_noiso_value
 * 
 */
  __pyx_v_self->mMatchesSingleMu_leg1_noiso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4286
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg1_noiso_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg1_noiso_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleMu_leg2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleMu_leg1_noiso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4284
 * 
 *     property mMatchesSingleMu_leg1_noiso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg1_noiso_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg1_noiso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleMu_leg1_noiso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4289
 * 
 *     property mMatchesSingleMu_leg2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg2_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4290
 *     property mMatchesSingleMu_leg2:
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleMu_leg2_value
 * 
 */
  __pyx_v_self->mMatchesSingleMu_leg2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4291
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg2_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg2_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesSingleMu_leg2_noiso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleMu_leg2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4289
 * 
 *     property mMatchesSingleMu_leg2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg2_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleMu_leg2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4294
 * 
 *     property mMatchesSingleMu_leg2_noiso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg2_noiso_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg2_noiso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg2_noiso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg2_noiso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg2_noiso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg2_noiso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4295
 *     property mMatchesSingleMu_leg2_noiso:
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg2_noiso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesSingleMu_leg2_noiso_value
 * 
 */
  __pyx_v_self->mMatchesSingleMu_leg2_noiso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4296
 *         def __get__(self):
 *             self.mMatchesSingleMu_leg2_noiso_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg2_noiso_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesTripleMu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesSingleMu_leg2_noiso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4294
 * 
 *     property mMatchesSingleMu_leg2_noiso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesSingleMu_leg2_noiso_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesSingleMu_leg2_noiso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesSingleMu_leg2_noiso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4299
 * 
 *     property mMatchesTripleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesTripleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesTripleMu_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchesTripleMu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchesTripleMu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mMatchesTripleMu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchesTripleMu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4300
 *     property mMatchesTripleMu:
 *         def __get__(self):
 *             self.mMatchesTripleMu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesTripleMu_value
 * 
 */
  __pyx_v_self->mMatchesTripleMu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4301
 *         def __get__(self):
 *             self.mMatchesTripleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesTripleMu_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesTripleMu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4299
 * 
 *     property mMatchesTripleMu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesTripleMu_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesTripleMu_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesTripleMu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4304
 * 
 *     property mMtToMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMET_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mMtToMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mMtToMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mMtToMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4305
 *     property mMtToMET:
 *         def __get__(self):
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToMET_value
 * 
 */
  __pyx_v_self->mMtToMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4306
 *         def __get__(self):
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMET_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPFMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4304
 * 
 *     property mMtToMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMET_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4309
 * 
 *     property mMtToPFMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPFMET_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mMtToPFMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mMtToPFMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mMtToPFMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4310
 *     property mMtToPFMET:
 *         def __get__(self):
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPFMET_value
 * 
 */
  __pyx_v_self->mMtToPFMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4311
 *         def __get__(self):
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPFMET_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_Ty1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPFMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4309
 * 
 *     property mMtToPFMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPFMET_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPFMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4314
 * 
 *     property mMtToPfMet_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_Ty1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4315
 *     property mMtToPfMet_Ty1:
 *         def __get__(self):
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_Ty1_value
 * 
 */
  __pyx_v_self->mMtToPfMet_Ty1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4316
 *         def __get__(self):
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_Ty1_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_jes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_Ty1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4314
 * 
 *     property mMtToPfMet_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_Ty1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_Ty1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4319
 * 
 *     property mMtToPfMet_jes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_jes_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_jes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_jes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_jes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4320
 *     property mMtToPfMet_jes:
 *         def __get__(self):
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_jes_value
 * 
 */
  __pyx_v_self->mMtToPfMet_jes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4321
 *         def __get__(self):
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_jes_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_mes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_jes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4319
 * 
 *     property mMtToPfMet_jes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_jes_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_jes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4324
 * 
 *     property mMtToPfMet_mes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_mes_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_mes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_mes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_mes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4325
 *     property mMtToPfMet_mes:
 *         def __get__(self):
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_mes_value
 * 
 */
  __pyx_v_self->mMtToPfMet_mes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4326
 *         def __get__(self):
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_mes_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_tes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_mes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4324
 * 
 *     property mMtToPfMet_mes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_mes_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_mes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4329
 * 
 *     property mMtToPfMet_tes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_tes_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_tes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_tes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_tes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4330
 *     property mMtToPfMet_tes:
 *         def __get__(self):
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_tes_value
 * 
 */
  __pyx_v_self->mMtToPfMet_tes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4331
 *         def __get__(self):
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_tes_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_ues:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_tes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4329
 * 
 *     property mMtToPfMet_tes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_tes_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_tes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4334
 * 
 *     property mMtToPfMet_ues:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_ues_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_ues_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_ues_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_ues___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4335
 *     property mMtToPfMet_ues:
 *         def __get__(self):
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_ues_value
 * 
 */
  __pyx_v_self->mMtToPfMet_ues_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4336
 *         def __get__(self):
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_ues_value             # <<<<<<<<<<<<<<
 * 
 *     property mMuonHits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_ues_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4334
 * 
 *     property mMtToPfMet_ues:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_ues_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_ues.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4339
 * 
 *     property mMuonHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)
 *             return self.mMuonHits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mMuonHits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mMuonHits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mMuonHits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mMuonHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4340
 *     property mMuonHits:
 *         def __get__(self):
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMuonHits_value
 * 
 */
  __pyx_v_self->mMuonHits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4341
 *         def __get__(self):
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)
 *             return self.mMuonHits_value             # <<<<<<<<<<<<<<
 * 
 *     property mNearestZMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMuonHits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4339
 * 
 *     property mMuonHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)
 *             return self.mMuonHits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMuonHits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4344
 * 
 *     property mNearestZMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mNearestZMass_branch.GetEntry(self.localentry, 0)
 *             return self.mNearestZMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mNearestZMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mNearestZMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mNearestZMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mNearestZMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4345
 *     property mNearestZMass:
 *         def __get__(self):
 *             self.mNearestZMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mNearestZMass_value
 * 
 */
  __pyx_v_self->mNearestZMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4346
 *         def __get__(self):
 *             self.mNearestZMass_branch.GetEntry(self.localentry, 0)
 *             return self.mNearestZMass_value             # <<<<<<<<<<<<<<
 * 
 *     property mNormTrkChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mNearestZMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4344
 * 
 *     property mNearestZMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mNearestZMass_branch.GetEntry(self.localentry, 0)
 *             return self.mNearestZMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mNearestZMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4349
 * 
 *     property mNormTrkChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)
 *             return self.mNormTrkChi2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mNormTrkChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mNormTrkChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mNormTrkChi2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mNormTrkChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4350
 *     property mNormTrkChi2:
 *         def __get__(self):
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mNormTrkChi2_value
 * 
 */
  __pyx_v_self->mNormTrkChi2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4351
 *         def __get__(self):
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)
 *             return self.mNormTrkChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFChargedIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mNormTrkChi2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4349
 * 
 *     property mNormTrkChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)
 *             return self.mNormTrkChi2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mNormTrkChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4354
 * 
 *     property mPFChargedIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFChargedIso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFChargedIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFChargedIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mPFChargedIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4355
 *     property mPFChargedIso:
 *         def __get__(self):
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFChargedIso_value
 * 
 */
  __pyx_v_self->mPFChargedIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4356
 *         def __get__(self):
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFChargedIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDLoose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFChargedIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4354
 * 
 *     property mPFChargedIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFChargedIso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFChargedIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4359
 * 
 *     property mPFIDLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDLoose_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mPFIDLoose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mPFIDLoose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mPFIDLoose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mPFIDLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4360
 *     property mPFIDLoose:
 *         def __get__(self):
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDLoose_value
 * 
 */
  __pyx_v_self->mPFIDLoose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4361
 *         def __get__(self):
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDLoose_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDMedium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDLoose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4359
 * 
 *     property mPFIDLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDLoose_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDLoose_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFIDLoose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4364
 * 
 *     property mPFIDMedium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDMedium_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mPFIDMedium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mPFIDMedium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mPFIDMedium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mPFIDMedium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4365
 *     property mPFIDMedium:
 *         def __get__(self):
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDMedium_value
 * 
 */
  __pyx_v_self->mPFIDMedium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4366
 *         def __get__(self):
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDMedium_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDMedium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4364
 * 
 *     property mPFIDMedium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDMedium_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDMedium_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFIDMedium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4369
 * 
 *     property mPFIDTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mPFIDTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mPFIDTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mPFIDTight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mPFIDTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4370
 *     property mPFIDTight:
 *         def __get__(self):
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDTight_value
 * 
 */
  __pyx_v_self->mPFIDTight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4371
 *         def __get__(self):
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFNeutralIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDTight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4369
 * 
 *     property mPFIDTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFIDTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4374
 * 
 *     property mPFNeutralIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFNeutralIso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFNeutralIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFNeutralIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mPFNeutralIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFNeutralIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4375
 *     property mPFNeutralIso:
 *         def __get__(self):
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFNeutralIso_value
 * 
 */
  __pyx_v_self->mPFNeutralIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4376
 *         def __get__(self):
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFNeutralIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFPUChargedIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFNeutralIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4374
 * 
 *     property mPFNeutralIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFNeutralIso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFNeutralIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4379
 * 
 *     property mPFPUChargedIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPUChargedIso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPFPUChargedIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPFPUChargedIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mPFPUChargedIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPFPUChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4380
 *     property mPFPUChargedIso:
 *         def __get__(self):
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFPUChargedIso_value
 * 
 */
  __pyx_v_self->mPFPUChargedIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4381
 *         def __get__(self):
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPUChargedIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFPhotonIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFPUChargedIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4379
 * 
 *     property mPFPUChargedIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPUChargedIso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFPUChargedIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4384
 * 
 *     property mPFPhotonIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPhotonIso_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mPFPhotonIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mPFPhotonIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mPFPhotonIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mPFPhotonIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4385
 *     property mPFPhotonIso:
 *         def __get__(self):
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFPhotonIso_value
 * 
 */
  __pyx_v_self->mPFPhotonIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4386
 *         def __get__(self):
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPhotonIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPVDXY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFPhotonIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4384
 * 
 *     property mPFPhotonIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPhotonIso_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFPhotonIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4389
 * 
 *     property mPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mPVDXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mPVDXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mPVDXY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mPVDXY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4390
 *     property mPVDXY:
 *         def __get__(self):
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPVDXY_value
 * 
 */
  __pyx_v_self->mPVDXY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4391
 *         def __get__(self):
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value             # <<<<<<<<<<<<<<
 * 
 *     property mPVDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPVDXY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4389
 * 
 *     property mPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPVDXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4394
 * 
 *     property mPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mPVDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mPVDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mPVDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mPVDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4395
 *     property mPVDZ:
 *         def __get__(self):
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPVDZ_value
 * 
 */
  __pyx_v_self->mPVDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4396
 *         def __get__(self):
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPVDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4396; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4394
 * 
 *     property mPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPVDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4399
 * 
 *     property mPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4mPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4400
 *     property mPhi:
 *         def __get__(self):
 *             self.mPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPhi_value
 * 
 */
  __pyx_v_self->mPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4401
 *         def __get__(self):
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mPixHits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4399
 * 
 *     property mPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4404
 * 
 *     property mPixHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)
 *             return self.mPixHits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mPixHits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mPixHits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mPixHits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mPixHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4405
 *     property mPixHits:
 *         def __get__(self):
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPixHits_value
 * 
 */
  __pyx_v_self->mPixHits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4406
 *         def __get__(self):
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)
 *             return self.mPixHits_value             # <<<<<<<<<<<<<<
 * 
 *     property mPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPixHits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4404
 * 
 *     property mPixHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)
 *             return self.mPixHits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPixHits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4409
 * 
 *     property mPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3mPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4410
 *     property mPt:
 *         def __get__(self):
 *             self.mPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPt_value
 * 
 */
  __pyx_v_self->mPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4411
 *         def __get__(self):
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mRank:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4409
 * 
 *     property mPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4414
 * 
 *     property mRank:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRank_branch.GetEntry(self.localentry, 0)
 *             return self.mRank_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mRank_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mRank_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mRank___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mRank___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4415
 *     property mRank:
 *         def __get__(self):
 *             self.mRank_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRank_value
 * 
 */
  __pyx_v_self->mRank_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4416
 *         def __get__(self):
 *             self.mRank_branch.GetEntry(self.localentry, 0)
 *             return self.mRank_value             # <<<<<<<<<<<<<<
 * 
 *     property mRelPFIsoDBDefault:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRank_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4414
 * 
 *     property mRank:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRank_branch.GetEntry(self.localentry, 0)
 *             return self.mRank_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRank.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4419
 * 
 *     property mRelPFIsoDBDefault:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoDBDefault_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDBDefault_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mRelPFIsoDBDefault_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mRelPFIsoDBDefault_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18mRelPFIsoDBDefault___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mRelPFIsoDBDefault___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4420
 *     property mRelPFIsoDBDefault:
 *         def __get__(self):
 *             self.mRelPFIsoDBDefault_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRelPFIsoDBDefault_value
 * 
 */
  __pyx_v_self->mRelPFIsoDBDefault_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4421
 *         def __get__(self):
 *             self.mRelPFIsoDBDefault_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDBDefault_value             # <<<<<<<<<<<<<<
 * 
 *     property mRelPFIsoRho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRelPFIsoDBDefault_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4419
 * 
 *     property mRelPFIsoDBDefault:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoDBDefault_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDBDefault_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRelPFIsoDBDefault.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4424
 * 
 *     property mRelPFIsoRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoRho_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoRho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mRelPFIsoRho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mRelPFIsoRho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mRelPFIsoRho___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mRelPFIsoRho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4425
 *     property mRelPFIsoRho:
 *         def __get__(self):
 *             self.mRelPFIsoRho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRelPFIsoRho_value
 * 
 */
  __pyx_v_self->mRelPFIsoRho_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4426
 *         def __get__(self):
 *             self.mRelPFIsoRho_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoRho_value             # <<<<<<<<<<<<<<
 * 
 *     property mRelPFIsoRhoFSR:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRelPFIsoRho_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4424
 * 
 *     property mRelPFIsoRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoRho_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoRho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRelPFIsoRho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4429
 * 
 *     property mRelPFIsoRhoFSR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoRhoFSR_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoRhoFSR_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mRelPFIsoRhoFSR_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mRelPFIsoRhoFSR_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mRelPFIsoRhoFSR___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mRelPFIsoRhoFSR___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4430
 *     property mRelPFIsoRhoFSR:
 *         def __get__(self):
 *             self.mRelPFIsoRhoFSR_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRelPFIsoRhoFSR_value
 * 
 */
  __pyx_v_self->mRelPFIsoRhoFSR_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4431
 *         def __get__(self):
 *             self.mRelPFIsoRhoFSR_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoRhoFSR_value             # <<<<<<<<<<<<<<
 * 
 *     property mRho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRelPFIsoRhoFSR_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4429
 * 
 *     property mRelPFIsoRhoFSR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoRhoFSR_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoRhoFSR_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRelPFIsoRhoFSR.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4434
 * 
 *     property mRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRho_branch.GetEntry(self.localentry, 0)
 *             return self.mRho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mRho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mRho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4mRho___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mRho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4435
 *     property mRho:
 *         def __get__(self):
 *             self.mRho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRho_value
 * 
 */
  __pyx_v_self->mRho_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4436
 *         def __get__(self):
 *             self.mRho_branch.GetEntry(self.localentry, 0)
 *             return self.mRho_value             # <<<<<<<<<<<<<<
 * 
 *     property mSIP2D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRho_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4434
 * 
 *     property mRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRho_branch.GetEntry(self.localentry, 0)
 *             return self.mRho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4439
 * 
 *     property mSIP2D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP2D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mSIP2D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mSIP2D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mSIP2D___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mSIP2D___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4440
 *     property mSIP2D:
 *         def __get__(self):
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mSIP2D_value
 * 
 */
  __pyx_v_self->mSIP2D_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4441
 *         def __get__(self):
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP2D_value             # <<<<<<<<<<<<<<
 * 
 *     property mSIP3D:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mSIP2D_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4441; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4439
 * 
 *     property mSIP2D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP2D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP2D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mSIP2D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4444
 * 
 *     property mSIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP3D_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mSIP3D_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mSIP3D_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mSIP3D___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mSIP3D___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4445
 *     property mSIP3D:
 *         def __get__(self):
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mSIP3D_value
 * 
 */
  __pyx_v_self->mSIP3D_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4446
 *         def __get__(self):
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP3D_value             # <<<<<<<<<<<<<<
 * 
 *     property mTkLayersWithMeasurement:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mSIP3D_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4444
 * 
 *     property mSIP3D:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSIP3D_branch.GetEntry(self.localentry, 0)
 *             return self.mSIP3D_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mSIP3D.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4449
 * 
 *     property mTkLayersWithMeasurement:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)
 *             return self.mTkLayersWithMeasurement_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4450
 *     property mTkLayersWithMeasurement:
 *         def __get__(self):
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mTkLayersWithMeasurement_value
 * 
 */
  __pyx_v_self->mTkLayersWithMeasurement_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4451
 *         def __get__(self):
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)
 *             return self.mTkLayersWithMeasurement_value             # <<<<<<<<<<<<<<
 * 
 *     property mToMETDPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mTkLayersWithMeasurement_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4449
 * 
 *     property mTkLayersWithMeasurement:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)
 *             return self.mTkLayersWithMeasurement_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mTkLayersWithMeasurement.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4454
 * 
 *     property mToMETDPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mToMETDPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mToMETDPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mToMETDPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mToMETDPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4455
 *     property mToMETDPhi:
 *         def __get__(self):
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mToMETDPhi_value
 * 
 */
  __pyx_v_self->mToMETDPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4456
 *         def __get__(self):
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mToMETDPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mTypeCode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mToMETDPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4454
 * 
 *     property mToMETDPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mToMETDPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mToMETDPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4459
 * 
 *     property mTypeCode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)
 *             return self.mTypeCode_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mTypeCode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mTypeCode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mTypeCode___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mTypeCode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4460
 *     property mTypeCode:
 *         def __get__(self):
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mTypeCode_value
 * 
 */
  __pyx_v_self->mTypeCode_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4461
 *         def __get__(self):
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)
 *             return self.mTypeCode_value             # <<<<<<<<<<<<<<
 * 
 *     property mVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->mTypeCode_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4459
 * 
 *     property mTypeCode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)
 *             return self.mTypeCode_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mTypeCode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4464
 * 
 *     property mVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3mVZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4465
 *     property mVZ:
 *         def __get__(self):
 *             self.mVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mVZ_value
 * 
 */
  __pyx_v_self->mVZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4466
 *         def __get__(self):
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_CosThetaStar:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mVZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4464
 * 
 *     property mVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4469
 * 
 *     property m_t_CosThetaStar:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_CosThetaStar_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16m_t_CosThetaStar_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16m_t_CosThetaStar_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16m_t_CosThetaStar___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16m_t_CosThetaStar___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4470
 *     property m_t_CosThetaStar:
 *         def __get__(self):
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_CosThetaStar_value
 * 
 */
  __pyx_v_self->m_t_CosThetaStar_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4471
 *         def __get__(self):
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_CosThetaStar_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_DPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_CosThetaStar_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4469
 * 
 *     property m_t_CosThetaStar:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_CosThetaStar_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_CosThetaStar.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4474
 * 
 *     property m_t_DPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_DPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_DPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8m_t_DPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_DPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4475
 *     property m_t_DPhi:
 *         def __get__(self):
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_DPhi_value
 * 
 */
  __pyx_v_self->m_t_DPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4476
 *         def __get__(self):
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_DR:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_DPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4474
 * 
 *     property m_t_DPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_DPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4479
 * 
 *     property m_t_DR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DR_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_DR_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_DR_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_DR___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_DR___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4480
 *     property m_t_DR:
 *         def __get__(self):
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_DR_value
 * 
 */
  __pyx_v_self->m_t_DR_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4481
 *         def __get__(self):
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DR_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_DR_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4481; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4479
 * 
 *     property m_t_DR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DR_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_DR.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4484
 * 
 *     property m_t_Eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Eta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7m_t_Eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7m_t_Eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7m_t_Eta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7m_t_Eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4485
 *     property m_t_Eta:
 *         def __get__(self):
 *             self.m_t_Eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Eta_value
 * 
 */
  __pyx_v_self->m_t_Eta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4486
 *         def __get__(self):
 *             self.m_t_Eta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Eta_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Mass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Eta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4484
 * 
 *     property m_t_Eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Eta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4489
 * 
 *     property m_t_Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_Mass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_Mass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8m_t_Mass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4490
 *     property m_t_Mass:
 *         def __get__(self):
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Mass_value
 * 
 */
  __pyx_v_self->m_t_Mass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4491
 *         def __get__(self):
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mass_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Mt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Mass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4489
 * 
 *     property m_t_Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Mass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4494
 * 
 *     property m_t_Mt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Mt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_Mt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_Mt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_Mt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_Mt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4495
 *     property m_t_Mt:
 *         def __get__(self):
 *             self.m_t_Mt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Mt_value
 * 
 */
  __pyx_v_self->m_t_Mt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4496
 *         def __get__(self):
 *             self.m_t_Mt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mt_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_PZeta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Mt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4494
 * 
 *     property m_t_Mt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Mt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Mt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4499
 * 
 *     property m_t_PZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZeta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9m_t_PZeta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9m_t_PZeta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9m_t_PZeta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9m_t_PZeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4500
 *     property m_t_PZeta:
 *         def __get__(self):
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_PZeta_value
 * 
 */
  __pyx_v_self->m_t_PZeta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4501
 *         def __get__(self):
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZeta_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_PZetaVis:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_PZeta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4499
 * 
 *     property m_t_PZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZeta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_PZeta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4504
 * 
 *     property m_t_PZetaVis:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZetaVis_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12m_t_PZetaVis_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12m_t_PZetaVis_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12m_t_PZetaVis___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12m_t_PZetaVis___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4505
 *     property m_t_PZetaVis:
 *         def __get__(self):
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_PZetaVis_value
 * 
 */
  __pyx_v_self->m_t_PZetaVis_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4506
 *         def __get__(self):
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZetaVis_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_PZetaVis_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4504
 * 
 *     property m_t_PZetaVis:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZetaVis_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_PZetaVis.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4509
 * 
 *     property m_t_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7m_t_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7m_t_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7m_t_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7m_t_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4510
 *     property m_t_Phi:
 *         def __get__(self):
 *             self.m_t_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Phi_value
 * 
 */
  __pyx_v_self->m_t_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4511
 *         def __get__(self):
 *             self.m_t_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4509
 * 
 *     property m_t_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4514
 * 
 *     property m_t_Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_Pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_Pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_Pt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4515
 *     property m_t_Pt:
 *         def __get__(self):
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Pt_value
 * 
 */
  __pyx_v_self->m_t_Pt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4516
 *         def __get__(self):
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Pt_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_SS:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Pt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4514
 * 
 *     property m_t_Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4519
 * 
 *     property m_t_SS:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_SS_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_SS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_SS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_SS___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_SS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4520
 *     property m_t_SS:
 *         def __get__(self):
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_SS_value
 * 
 */
  __pyx_v_self->m_t_SS_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4521
 *         def __get__(self):
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_SS_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_ToMETDPhi_Ty1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_SS_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4519
 * 
 *     property m_t_SS:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_SS_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_SS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4524
 * 
 *     property m_t_ToMETDPhi_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_ToMETDPhi_Ty1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4525
 *     property m_t_ToMETDPhi_Ty1:
 *         def __get__(self):
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_ToMETDPhi_Ty1_value
 * 
 */
  __pyx_v_self->m_t_ToMETDPhi_Ty1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4526
 *         def __get__(self):
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_ToMETDPhi_Ty1_value             # <<<<<<<<<<<<<<
 * 
 *     property muGlbIsoVetoPt10:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_ToMETDPhi_Ty1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4524
 * 
 *     property m_t_ToMETDPhi_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_ToMETDPhi_Ty1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_ToMETDPhi_Ty1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4529
 * 
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4530
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muGlbIsoVetoPt10_value
 * 
 */
  __pyx_v_self->muGlbIsoVetoPt10_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4531
 *         def __get__(self):
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoPt15IsoIdVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muGlbIsoVetoPt10_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4529
 * 
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muGlbIsoVetoPt10.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4534
 * 
 *     property muVetoPt15IsoIdVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt15IsoIdVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4535
 *     property muVetoPt15IsoIdVtx:
 *         def __get__(self):
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoPt15IsoIdVtx_value
 * 
 */
  __pyx_v_self->muVetoPt15IsoIdVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4536
 *         def __get__(self):
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt15IsoIdVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoPt5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoPt15IsoIdVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4534
 * 
 *     property muVetoPt15IsoIdVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt15IsoIdVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muVetoPt15IsoIdVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4539
 * 
 *     property muVetoPt5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9muVetoPt5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9muVetoPt5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9muVetoPt5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9muVetoPt5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4540
 *     property muVetoPt5:
 *         def __get__(self):
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoPt5_value
 * 
 */
  __pyx_v_self->muVetoPt5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4541
 *         def __get__(self):
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoPt5IsoIdVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoPt5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4541; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4539
 * 
 *     property muVetoPt5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muVetoPt5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4544
 * 
 *     property muVetoPt5IsoIdVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5IsoIdVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4545
 *     property muVetoPt5IsoIdVtx:
 *         def __get__(self):
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoPt5IsoIdVtx_value
 * 
 */
  __pyx_v_self->muVetoPt5IsoIdVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4546
 *         def __get__(self):
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5IsoIdVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property nTruePU:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoPt5IsoIdVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4544
 * 
 *     property muVetoPt5IsoIdVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5IsoIdVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muVetoPt5IsoIdVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4549
 * 
 *     property nTruePU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7nTruePU_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7nTruePU_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7nTruePU___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7nTruePU___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4550
 *     property nTruePU:
 *         def __get__(self):
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.nTruePU_value
 * 
 */
  __pyx_v_self->nTruePU_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4551
 *         def __get__(self):
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value             # <<<<<<<<<<<<<<
 * 
 *     property nvtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->nTruePU_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4549
 * 
 *     property nTruePU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.nTruePU.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4554
 * 
 *     property nvtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4nvtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4nvtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4nvtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4nvtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4555
 *     property nvtx:
 *         def __get__(self):
 *             self.nvtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.nvtx_value
 * 
 */
  __pyx_v_self->nvtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4556
 *         def __get__(self):
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMetEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->nvtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4554
 * 
 *     property nvtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.nvtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4559
 * 
 *     property pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetEt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7pfMetEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7pfMetEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7pfMetEt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4560
 *     property pfMetEt:
 *         def __get__(self):
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMetEt_value
 * 
 */
  __pyx_v_self->pfMetEt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4561
 *         def __get__(self):
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetEt_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMetPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMetEt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4559
 * 
 *     property pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetEt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMetEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4564
 * 
 *     property pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pfMetPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pfMetPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8pfMetPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4565
 *     property pfMetPhi:
 *         def __get__(self):
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMetPhi_value
 * 
 */
  __pyx_v_self->pfMetPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4566
 *         def __get__(self):
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_jes_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMetPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4564
 * 
 *     property pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMetPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4569
 * 
 *     property pfMet_jes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Et_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_jes_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_jes_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_jes_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_jes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4570
 *     property pfMet_jes_Et:
 *         def __get__(self):
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_jes_Et_value
 * 
 */
  __pyx_v_self->pfMet_jes_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4571
 *         def __get__(self):
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_jes_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_jes_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4569
 * 
 *     property pfMet_jes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Et_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_jes_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4574
 * 
 *     property pfMet_jes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_jes_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_jes_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_jes_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_jes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4575
 *     property pfMet_jes_Phi:
 *         def __get__(self):
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_jes_Phi_value
 * 
 */
  __pyx_v_self->pfMet_jes_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4576
 *         def __get__(self):
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_mes_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_jes_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4574
 * 
 *     property pfMet_jes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_jes_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4579
 * 
 *     property pfMet_mes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Et_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_mes_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_mes_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_mes_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_mes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4580
 *     property pfMet_mes_Et:
 *         def __get__(self):
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_mes_Et_value
 * 
 */
  __pyx_v_self->pfMet_mes_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4581
 *         def __get__(self):
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_mes_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_mes_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4579
 * 
 *     property pfMet_mes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Et_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_mes_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4584
 * 
 *     property pfMet_mes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_mes_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_mes_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_mes_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_mes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4585
 *     property pfMet_mes_Phi:
 *         def __get__(self):
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_mes_Phi_value
 * 
 */
  __pyx_v_self->pfMet_mes_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4586
 *         def __get__(self):
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_tes_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_mes_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4584
 * 
 *     property pfMet_mes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_mes_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4589
 * 
 *     property pfMet_tes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Et_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_tes_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_tes_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_tes_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_tes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4590
 *     property pfMet_tes_Et:
 *         def __get__(self):
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_tes_Et_value
 * 
 */
  __pyx_v_self->pfMet_tes_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4591
 *         def __get__(self):
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_tes_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_tes_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4589
 * 
 *     property pfMet_tes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Et_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_tes_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4594
 * 
 *     property pfMet_tes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_tes_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_tes_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_tes_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_tes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4595
 *     property pfMet_tes_Phi:
 *         def __get__(self):
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_tes_Phi_value
 * 
 */
  __pyx_v_self->pfMet_tes_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4596
 *         def __get__(self):
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_ues_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_tes_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4594
 * 
 *     property pfMet_tes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_tes_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4599
 * 
 *     property pfMet_ues_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Et_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_ues_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_ues_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_ues_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_ues_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4600
 *     property pfMet_ues_Et:
 *         def __get__(self):
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_ues_Et_value
 * 
 */
  __pyx_v_self->pfMet_ues_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4601
 *         def __get__(self):
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_ues_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_ues_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4599
 * 
 *     property pfMet_ues_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Et_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_ues_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4604
 * 
 *     property pfMet_ues_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Phi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_ues_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_ues_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_ues_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_ues_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4605
 *     property pfMet_ues_Phi:
 *         def __get__(self):
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_ues_Phi_value
 * 
 */
  __pyx_v_self->pfMet_ues_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4606
 *         def __get__(self):
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property processID:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_ues_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4606; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4604
 * 
 *     property pfMet_ues_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Phi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_ues_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4609
 * 
 *     property processID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9processID_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9processID_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9processID___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9processID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4610
 *     property processID:
 *         def __get__(self):
 *             self.processID_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.processID_value
 * 
 */
  __pyx_v_self->processID_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4611
 *         def __get__(self):
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value             # <<<<<<<<<<<<<<
 * 
 *     property pvChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->processID_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4609
 * 
 *     property processID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.processID.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4614
 * 
 *     property pvChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6pvChi2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4615
 *     property pvChi2:
 *         def __get__(self):
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvChi2_value
 * 
 */
  __pyx_v_self->pvChi2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4616
 *         def __get__(self):
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvChi2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4614
 * 
 *     property pvChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4619
 * 
 *     property pvDX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4pvDX___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4620
 *     property pvDX:
 *         def __get__(self):
 *             self.pvDX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDX_value
 * 
 */
  __pyx_v_self->pvDX_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4621
 *         def __get__(self):
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDX_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4621; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4619
 * 
 *     property pvDX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvDX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4624
 * 
 *     property pvDY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4pvDY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4625
 *     property pvDY:
 *         def __get__(self):
 *             self.pvDY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDY_value
 * 
 */
  __pyx_v_self->pvDY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4626
 *         def __get__(self):
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4624
 * 
 *     property pvDY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvDY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4629
 * 
 *     property pvDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4pvDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4630
 *     property pvDZ:
 *         def __get__(self):
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDZ_value
 * 
 */
  __pyx_v_self->pvDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4631
 *         def __get__(self):
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property pvIsFake:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4629
 * 
 *     property pvDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4634
 * 
 *     property pvIsFake:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pvIsFake_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pvIsFake_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8pvIsFake___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pvIsFake___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4635
 *     property pvIsFake:
 *         def __get__(self):
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvIsFake_value
 * 
 */
  __pyx_v_self->pvIsFake_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4636
 *         def __get__(self):
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value             # <<<<<<<<<<<<<<
 * 
 *     property pvIsValid:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->pvIsFake_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4634
 * 
 *     property pvIsFake:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvIsFake.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4639
 * 
 *     property pvIsValid:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9pvIsValid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9pvIsValid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9pvIsValid___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9pvIsValid___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4640
 *     property pvIsValid:
 *         def __get__(self):
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvIsValid_value
 * 
 */
  __pyx_v_self->pvIsValid_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4641
 *         def __get__(self):
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value             # <<<<<<<<<<<<<<
 * 
 *     property pvNormChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->pvIsValid_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4639
 * 
 *     property pvIsValid:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvIsValid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4644
 * 
 *     property pvNormChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10pvNormChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10pvNormChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10pvNormChi2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10pvNormChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4645
 *     property pvNormChi2:
 *         def __get__(self):
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvNormChi2_value
 * 
 */
  __pyx_v_self->pvNormChi2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4646
 *         def __get__(self):
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property pvRho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvNormChi2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4644
 * 
 *     property pvNormChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvNormChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4649
 * 
 *     property pvRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvRho_branch.GetEntry(self.localentry, 0)
 *             return self.pvRho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5pvRho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5pvRho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5pvRho___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5pvRho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4650
 *     property pvRho:
 *         def __get__(self):
 *             self.pvRho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvRho_value
 * 
 */
  __pyx_v_self->pvRho_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4651
 *         def __get__(self):
 *             self.pvRho_branch.GetEntry(self.localentry, 0)
 *             return self.pvRho_value             # <<<<<<<<<<<<<<
 * 
 *     property pvX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvRho_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4649
 * 
 *     property pvRho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvRho_branch.GetEntry(self.localentry, 0)
 *             return self.pvRho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvRho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4654
 * 
 *     property pvX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3pvX___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4655
 *     property pvX:
 *         def __get__(self):
 *             self.pvX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvX_value
 * 
 */
  __pyx_v_self->pvX_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4656
 *         def __get__(self):
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value             # <<<<<<<<<<<<<<
 * 
 *     property pvY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvX_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4654
 * 
 *     property pvX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4659
 * 
 *     property pvY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3pvY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4660
 *     property pvY:
 *         def __get__(self):
 *             self.pvY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvY_value
 * 
 */
  __pyx_v_self->pvY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4661
 *         def __get__(self):
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value             # <<<<<<<<<<<<<<
 * 
 *     property pvZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4659
 * 
 *     property pvY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4664
 * 
 *     property pvZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3pvZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4665
 *     property pvZ:
 *         def __get__(self):
 *             self.pvZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvZ_value
 * 
 */
  __pyx_v_self->pvZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4666
 *         def __get__(self):
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value             # <<<<<<<<<<<<<<
 * 
 *     property pvndof:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4664
 * 
 *     property pvZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4669
 * 
 *     property pvndof:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvndof_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvndof_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6pvndof___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvndof___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4670
 *     property pvndof:
 *         def __get__(self):
 *             self.pvndof_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvndof_value
 * 
 */
  __pyx_v_self->pvndof_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4671
 *         def __get__(self):
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value             # <<<<<<<<<<<<<<
 * 
 *     property recoilDaught:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvndof_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4669
 * 
 *     property pvndof:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvndof.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4674
 * 
 *     property recoilDaught:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12recoilDaught_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12recoilDaught_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12recoilDaught___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12recoilDaught___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4675
 *     property recoilDaught:
 *         def __get__(self):
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.recoilDaught_value
 * 
 */
  __pyx_v_self->recoilDaught_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4676
 *         def __get__(self):
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value             # <<<<<<<<<<<<<<
 * 
 *     property recoilWithMet:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->recoilDaught_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4674
 * 
 *     property recoilDaught:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.recoilDaught.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4679
 * 
 *     property recoilWithMet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13recoilWithMet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13recoilWithMet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13recoilWithMet___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13recoilWithMet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4680
 *     property recoilWithMet:
 *         def __get__(self):
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.recoilWithMet_value
 * 
 */
  __pyx_v_self->recoilWithMet_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4681
 *         def __get__(self):
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value             # <<<<<<<<<<<<<<
 * 
 *     property rho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->recoilWithMet_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4679
 * 
 *     property recoilWithMet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.recoilWithMet.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4684
 * 
 *     property rho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3rho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3rho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3rho___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3rho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4685
 *     property rho:
 *         def __get__(self):
 *             self.rho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.rho_value
 * 
 */
  __pyx_v_self->rho_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4686
 *         def __get__(self):
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value             # <<<<<<<<<<<<<<
 * 
 *     property run:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rho_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4684
 * 
 *     property rho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.rho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4689
 * 
 *     property run:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3run_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3run_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3run___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3run___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4690
 *     property run:
 *         def __get__(self):
 *             self.run_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.run_value
 * 
 */
  __pyx_v_self->run_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4691
 *         def __get__(self):
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->run_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4689
 * 
 *     property run:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.run.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4694
 * 
 *     property singleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12singleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4695
 *     property singleEGroup:
 *         def __get__(self):
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEGroup_value
 * 
 */
  __pyx_v_self->singleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4696
 *         def __get__(self):
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4696; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4694
 * 
 *     property singleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4699
 * 
 *     property singleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11singleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11singleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11singleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11singleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4700
 *     property singleEPass:
 *         def __get__(self):
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPass_value
 * 
 */
  __pyx_v_self->singleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4701
 *         def __get__(self):
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4699
 * 
 *     property singleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4704
 * 
 *     property singleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15singleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15singleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15singleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15singleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4705
 *     property singleEPrescale:
 *         def __get__(self):
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPrescale_value
 * 
 */
  __pyx_v_self->singleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4706
 *         def __get__(self):
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleESingleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4704
 * 
 *     property singleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4709
 * 
 *     property singleESingleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleESingleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleESingleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleESingleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20singleESingleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleESingleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4710
 *     property singleESingleMuGroup:
 *         def __get__(self):
 *             self.singleESingleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleESingleMuGroup_value
 * 
 */
  __pyx_v_self->singleESingleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4711
 *         def __get__(self):
 *             self.singleESingleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleESingleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleESingleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4709
 * 
 *     property singleESingleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleESingleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleESingleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4714
 * 
 *     property singleESingleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleESingleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19singleESingleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19singleESingleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19singleESingleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19singleESingleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4715
 *     property singleESingleMuPass:
 *         def __get__(self):
 *             self.singleESingleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleESingleMuPass_value
 * 
 */
  __pyx_v_self->singleESingleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4716
 *         def __get__(self):
 *             self.singleESingleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleESingleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleESingleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4714
 * 
 *     property singleESingleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleESingleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleESingleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4719
 * 
 *     property singleESingleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleESingleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleESingleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleESingleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23singleESingleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleESingleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4720
 *     property singleESingleMuPrescale:
 *         def __get__(self):
 *             self.singleESingleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleESingleMuPrescale_value
 * 
 */
  __pyx_v_self->singleESingleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4721
 *         def __get__(self):
 *             self.singleESingleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE_leg1Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleESingleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4719
 * 
 *     property singleESingleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleESingleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleESingleMuPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleESingleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4724
 * 
 *     property singleE_leg1Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg1Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Group_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleE_leg1Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleE_leg1Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17singleE_leg1Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleE_leg1Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4725
 *     property singleE_leg1Group:
 *         def __get__(self):
 *             self.singleE_leg1Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE_leg1Group_value
 * 
 */
  __pyx_v_self->singleE_leg1Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4726
 *         def __get__(self):
 *             self.singleE_leg1Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Group_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE_leg1Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE_leg1Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4724
 * 
 *     property singleE_leg1Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg1Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Group_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleE_leg1Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4729
 * 
 *     property singleE_leg1Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleE_leg1Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleE_leg1Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16singleE_leg1Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleE_leg1Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4730
 *     property singleE_leg1Pass:
 *         def __get__(self):
 *             self.singleE_leg1Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE_leg1Pass_value
 * 
 */
  __pyx_v_self->singleE_leg1Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4731
 *         def __get__(self):
 *             self.singleE_leg1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE_leg1Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE_leg1Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4729
 * 
 *     property singleE_leg1Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleE_leg1Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4734
 * 
 *     property singleE_leg1Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Prescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleE_leg1Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleE_leg1Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20singleE_leg1Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleE_leg1Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4735
 *     property singleE_leg1Prescale:
 *         def __get__(self):
 *             self.singleE_leg1Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE_leg1Prescale_value
 * 
 */
  __pyx_v_self->singleE_leg1Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4736
 *         def __get__(self):
 *             self.singleE_leg1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE_leg2Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE_leg1Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4734
 * 
 *     property singleE_leg1Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg1Prescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleE_leg1Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4739
 * 
 *     property singleE_leg2Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg2Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Group_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleE_leg2Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleE_leg2Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17singleE_leg2Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleE_leg2Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4740
 *     property singleE_leg2Group:
 *         def __get__(self):
 *             self.singleE_leg2Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE_leg2Group_value
 * 
 */
  __pyx_v_self->singleE_leg2Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4741
 *         def __get__(self):
 *             self.singleE_leg2Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Group_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE_leg2Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE_leg2Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4739
 * 
 *     property singleE_leg2Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg2Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Group_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleE_leg2Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4744
 * 
 *     property singleE_leg2Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg2Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleE_leg2Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleE_leg2Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16singleE_leg2Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleE_leg2Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4745
 *     property singleE_leg2Pass:
 *         def __get__(self):
 *             self.singleE_leg2Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE_leg2Pass_value
 * 
 */
  __pyx_v_self->singleE_leg2Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4746
 *         def __get__(self):
 *             self.singleE_leg2Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleE_leg2Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE_leg2Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4744
 * 
 *     property singleE_leg2Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg2Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleE_leg2Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4749
 * 
 *     property singleE_leg2Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg2Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Prescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleE_leg2Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleE_leg2Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20singleE_leg2Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleE_leg2Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4750
 *     property singleE_leg2Prescale:
 *         def __get__(self):
 *             self.singleE_leg2Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleE_leg2Prescale_value
 * 
 */
  __pyx_v_self->singleE_leg2Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4751
 *         def __get__(self):
 *             self.singleE_leg2Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleE_leg2Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4749
 * 
 *     property singleE_leg2Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleE_leg2Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleE_leg2Prescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleE_leg2Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4754
 * 
 *     property singleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13singleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13singleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13singleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13singleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4755
 *     property singleMuGroup:
 *         def __get__(self):
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuGroup_value
 * 
 */
  __pyx_v_self->singleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4756
 *         def __get__(self):
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4756; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4754
 * 
 *     property singleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4759
 * 
 *     property singleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12singleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4760
 *     property singleMuPass:
 *         def __get__(self):
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuPass_value
 * 
 */
  __pyx_v_self->singleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4761
 *         def __get__(self):
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4761; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4759
 * 
 *     property singleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4764
 * 
 *     property singleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16singleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4765
 *     property singleMuPrescale:
 *         def __get__(self):
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuPrescale_value
 * 
 */
  __pyx_v_self->singleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4766
 *         def __get__(self):
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuSingleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4764
 * 
 *     property singleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4769
 * 
 *     property singleMuSingleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuSingleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleMuSingleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20singleMuSingleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20singleMuSingleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20singleMuSingleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4770
 *     property singleMuSingleEGroup:
 *         def __get__(self):
 *             self.singleMuSingleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuSingleEGroup_value
 * 
 */
  __pyx_v_self->singleMuSingleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4771
 *         def __get__(self):
 *             self.singleMuSingleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuSingleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuSingleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4769
 * 
 *     property singleMuSingleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuSingleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuSingleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4774
 * 
 *     property singleMuSingleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuSingleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19singleMuSingleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19singleMuSingleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19singleMuSingleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19singleMuSingleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4775
 *     property singleMuSingleEPass:
 *         def __get__(self):
 *             self.singleMuSingleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuSingleEPass_value
 * 
 */
  __pyx_v_self->singleMuSingleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4776
 *         def __get__(self):
 *             self.singleMuSingleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuSingleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuSingleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4776; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4774
 * 
 *     property singleMuSingleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuSingleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuSingleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4779
 * 
 *     property singleMuSingleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleMuSingleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleMuSingleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23singleMuSingleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleMuSingleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4780
 *     property singleMuSingleEPrescale:
 *         def __get__(self):
 *             self.singleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuSingleEPrescale_value
 * 
 */
  __pyx_v_self->singleMuSingleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4781
 *         def __get__(self):
 *             self.singleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg1Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuSingleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4779
 * 
 *     property singleMuSingleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuSingleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuSingleEPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuSingleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4784
 * 
 *     property singleMu_leg1Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Group_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18singleMu_leg1Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18singleMu_leg1Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18singleMu_leg1Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18singleMu_leg1Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4785
 *     property singleMu_leg1Group:
 *         def __get__(self):
 *             self.singleMu_leg1Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg1Group_value
 * 
 */
  __pyx_v_self->singleMu_leg1Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4786
 *         def __get__(self):
 *             self.singleMu_leg1Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Group_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg1Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg1Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4784
 * 
 *     property singleMu_leg1Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Group_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg1Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4789
 * 
 *     property singleMu_leg1Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleMu_leg1Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleMu_leg1Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17singleMu_leg1Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleMu_leg1Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4790
 *     property singleMu_leg1Pass:
 *         def __get__(self):
 *             self.singleMu_leg1Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg1Pass_value
 * 
 */
  __pyx_v_self->singleMu_leg1Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4791
 *         def __get__(self):
 *             self.singleMu_leg1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg1Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg1Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4789
 * 
 *     property singleMu_leg1Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg1Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4794
 * 
 *     property singleMu_leg1Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Prescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21singleMu_leg1Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21singleMu_leg1Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21singleMu_leg1Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21singleMu_leg1Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4795
 *     property singleMu_leg1Prescale:
 *         def __get__(self):
 *             self.singleMu_leg1Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg1Prescale_value
 * 
 */
  __pyx_v_self->singleMu_leg1Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4796
 *         def __get__(self):
 *             self.singleMu_leg1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg1_noisoGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg1Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4794
 * 
 *     property singleMu_leg1Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1Prescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg1Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4799
 * 
 *     property singleMu_leg1_noisoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1_noisoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24singleMu_leg1_noisoGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24singleMu_leg1_noisoGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24singleMu_leg1_noisoGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24singleMu_leg1_noisoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4800
 *     property singleMu_leg1_noisoGroup:
 *         def __get__(self):
 *             self.singleMu_leg1_noisoGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg1_noisoGroup_value
 * 
 */
  __pyx_v_self->singleMu_leg1_noisoGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4801
 *         def __get__(self):
 *             self.singleMu_leg1_noisoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg1_noisoPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg1_noisoGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4799
 * 
 *     property singleMu_leg1_noisoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1_noisoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg1_noisoGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4804
 * 
 *     property singleMu_leg1_noisoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1_noisoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleMu_leg1_noisoPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleMu_leg1_noisoPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23singleMu_leg1_noisoPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleMu_leg1_noisoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4805
 *     property singleMu_leg1_noisoPass:
 *         def __get__(self):
 *             self.singleMu_leg1_noisoPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg1_noisoPass_value
 * 
 */
  __pyx_v_self->singleMu_leg1_noisoPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4806
 *         def __get__(self):
 *             self.singleMu_leg1_noisoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg1_noisoPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg1_noisoPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4804
 * 
 *     property singleMu_leg1_noisoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1_noisoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg1_noisoPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4809
 * 
 *     property singleMu_leg1_noisoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1_noisoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27singleMu_leg1_noisoPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27singleMu_leg1_noisoPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27singleMu_leg1_noisoPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27singleMu_leg1_noisoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4810
 *     property singleMu_leg1_noisoPrescale:
 *         def __get__(self):
 *             self.singleMu_leg1_noisoPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg1_noisoPrescale_value
 * 
 */
  __pyx_v_self->singleMu_leg1_noisoPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4811
 *         def __get__(self):
 *             self.singleMu_leg1_noisoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg2Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg1_noisoPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4809
 * 
 *     property singleMu_leg1_noisoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg1_noisoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg1_noisoPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg1_noisoPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4814
 * 
 *     property singleMu_leg2Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Group_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18singleMu_leg2Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18singleMu_leg2Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18singleMu_leg2Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18singleMu_leg2Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4815
 *     property singleMu_leg2Group:
 *         def __get__(self):
 *             self.singleMu_leg2Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg2Group_value
 * 
 */
  __pyx_v_self->singleMu_leg2Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4816
 *         def __get__(self):
 *             self.singleMu_leg2Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Group_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg2Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg2Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4814
 * 
 *     property singleMu_leg2Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2Group_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Group_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg2Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4819
 * 
 *     property singleMu_leg2Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Pass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleMu_leg2Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singleMu_leg2Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17singleMu_leg2Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singleMu_leg2Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4820
 *     property singleMu_leg2Pass:
 *         def __get__(self):
 *             self.singleMu_leg2Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg2Pass_value
 * 
 */
  __pyx_v_self->singleMu_leg2Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4821
 *         def __get__(self):
 *             self.singleMu_leg2Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg2Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg2Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4819
 * 
 *     property singleMu_leg2Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2Pass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Pass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg2Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4824
 * 
 *     property singleMu_leg2Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Prescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21singleMu_leg2Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21singleMu_leg2Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21singleMu_leg2Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21singleMu_leg2Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4825
 *     property singleMu_leg2Prescale:
 *         def __get__(self):
 *             self.singleMu_leg2Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg2Prescale_value
 * 
 */
  __pyx_v_self->singleMu_leg2Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4826
 *         def __get__(self):
 *             self.singleMu_leg2Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg2_noisoGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg2Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4824
 * 
 *     property singleMu_leg2Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2Prescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg2Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4829
 * 
 *     property singleMu_leg2_noisoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2_noisoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24singleMu_leg2_noisoGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24singleMu_leg2_noisoGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24singleMu_leg2_noisoGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24singleMu_leg2_noisoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4830
 *     property singleMu_leg2_noisoGroup:
 *         def __get__(self):
 *             self.singleMu_leg2_noisoGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg2_noisoGroup_value
 * 
 */
  __pyx_v_self->singleMu_leg2_noisoGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4831
 *         def __get__(self):
 *             self.singleMu_leg2_noisoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg2_noisoPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg2_noisoGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4829
 * 
 *     property singleMu_leg2_noisoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2_noisoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg2_noisoGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4834
 * 
 *     property singleMu_leg2_noisoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2_noisoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleMu_leg2_noisoPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23singleMu_leg2_noisoPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23singleMu_leg2_noisoPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23singleMu_leg2_noisoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4835
 *     property singleMu_leg2_noisoPass:
 *         def __get__(self):
 *             self.singleMu_leg2_noisoPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg2_noisoPass_value
 * 
 */
  __pyx_v_self->singleMu_leg2_noisoPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4836
 *         def __get__(self):
 *             self.singleMu_leg2_noisoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMu_leg2_noisoPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg2_noisoPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4834
 * 
 *     property singleMu_leg2_noisoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2_noisoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg2_noisoPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4839
 * 
 *     property singleMu_leg2_noisoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2_noisoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27singleMu_leg2_noisoPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27singleMu_leg2_noisoPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27singleMu_leg2_noisoPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27singleMu_leg2_noisoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4840
 *     property singleMu_leg2_noisoPrescale:
 *         def __get__(self):
 *             self.singleMu_leg2_noisoPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMu_leg2_noisoPrescale_value
 * 
 */
  __pyx_v_self->singleMu_leg2_noisoPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4841
 *         def __get__(self):
 *             self.singleMu_leg2_noisoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property tAbsEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMu_leg2_noisoPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4839
 * 
 *     property singleMu_leg2_noisoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMu_leg2_noisoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMu_leg2_noisoPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMu_leg2_noisoPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4844
 * 
 *     property tAbsEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.tAbsEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tAbsEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tAbsEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7tAbsEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4845
 *     property tAbsEta:
 *         def __get__(self):
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAbsEta_value
 * 
 */
  __pyx_v_self->tAbsEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4846
 *         def __get__(self):
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.tAbsEta_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronLooseMVA5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAbsEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4844
 * 
 *     property tAbsEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.tAbsEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAbsEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4849
 * 
 *     property tAgainstElectronLooseMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronLooseMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronLooseMVA5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tAgainstElectronLooseMVA5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tAgainstElectronLooseMVA5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_25tAgainstElectronLooseMVA5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tAgainstElectronLooseMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4850
 *     property tAgainstElectronLooseMVA5:
 *         def __get__(self):
 *             self.tAgainstElectronLooseMVA5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronLooseMVA5_value
 * 
 */
  __pyx_v_self->tAgainstElectronLooseMVA5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4851
 *         def __get__(self):
 *             self.tAgainstElectronLooseMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronLooseMVA5_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronMVA5category:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronLooseMVA5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4849
 * 
 *     property tAgainstElectronLooseMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronLooseMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronLooseMVA5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronLooseMVA5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4854
 * 
 *     property tAgainstElectronMVA5category:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronMVA5category_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMVA5category_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_28tAgainstElectronMVA5category_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_28tAgainstElectronMVA5category_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_28tAgainstElectronMVA5category___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_28tAgainstElectronMVA5category___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4855
 *     property tAgainstElectronMVA5category:
 *         def __get__(self):
 *             self.tAgainstElectronMVA5category_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronMVA5category_value
 * 
 */
  __pyx_v_self->tAgainstElectronMVA5category_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4856
 *         def __get__(self):
 *             self.tAgainstElectronMVA5category_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMVA5category_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronMVA5raw:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronMVA5category_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4856; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4854
 * 
 *     property tAgainstElectronMVA5category:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronMVA5category_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMVA5category_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronMVA5category.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4859
 * 
 *     property tAgainstElectronMVA5raw:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronMVA5raw_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMVA5raw_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAgainstElectronMVA5raw_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAgainstElectronMVA5raw_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tAgainstElectronMVA5raw___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAgainstElectronMVA5raw___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4860
 *     property tAgainstElectronMVA5raw:
 *         def __get__(self):
 *             self.tAgainstElectronMVA5raw_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronMVA5raw_value
 * 
 */
  __pyx_v_self->tAgainstElectronMVA5raw_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4861
 *         def __get__(self):
 *             self.tAgainstElectronMVA5raw_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMVA5raw_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronMediumMVA5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronMVA5raw_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4859
 * 
 *     property tAgainstElectronMVA5raw:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronMVA5raw_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMVA5raw_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronMVA5raw.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4864
 * 
 *     property tAgainstElectronMediumMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronMediumMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMediumMVA5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronMediumMVA5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronMediumMVA5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronMediumMVA5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronMediumMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4865
 *     property tAgainstElectronMediumMVA5:
 *         def __get__(self):
 *             self.tAgainstElectronMediumMVA5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronMediumMVA5_value
 * 
 */
  __pyx_v_self->tAgainstElectronMediumMVA5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4866
 *         def __get__(self):
 *             self.tAgainstElectronMediumMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMediumMVA5_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronTightMVA5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronMediumMVA5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4864
 * 
 *     property tAgainstElectronMediumMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronMediumMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronMediumMVA5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronMediumMVA5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4869
 * 
 *     property tAgainstElectronTightMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronTightMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronTightMVA5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tAgainstElectronTightMVA5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tAgainstElectronTightMVA5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_25tAgainstElectronTightMVA5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tAgainstElectronTightMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4870
 *     property tAgainstElectronTightMVA5:
 *         def __get__(self):
 *             self.tAgainstElectronTightMVA5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronTightMVA5_value
 * 
 */
  __pyx_v_self->tAgainstElectronTightMVA5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4871
 *         def __get__(self):
 *             self.tAgainstElectronTightMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronTightMVA5_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronVLooseMVA5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronTightMVA5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4869
 * 
 *     property tAgainstElectronTightMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronTightMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronTightMVA5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronTightMVA5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4874
 * 
 *     property tAgainstElectronVLooseMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronVLooseMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronVLooseMVA5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronVLooseMVA5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronVLooseMVA5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronVLooseMVA5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronVLooseMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4875
 *     property tAgainstElectronVLooseMVA5:
 *         def __get__(self):
 *             self.tAgainstElectronVLooseMVA5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronVLooseMVA5_value
 * 
 */
  __pyx_v_self->tAgainstElectronVLooseMVA5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4876
 *         def __get__(self):
 *             self.tAgainstElectronVLooseMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronVLooseMVA5_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstElectronVTightMVA5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronVLooseMVA5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4876; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4874
 * 
 *     property tAgainstElectronVLooseMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronVLooseMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronVLooseMVA5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronVLooseMVA5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4879
 * 
 *     property tAgainstElectronVTightMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronVTightMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronVTightMVA5_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronVTightMVA5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronVTightMVA5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronVTightMVA5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tAgainstElectronVTightMVA5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4880
 *     property tAgainstElectronVTightMVA5:
 *         def __get__(self):
 *             self.tAgainstElectronVTightMVA5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstElectronVTightMVA5_value
 * 
 */
  __pyx_v_self->tAgainstElectronVTightMVA5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4881
 *         def __get__(self):
 *             self.tAgainstElectronVTightMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronVTightMVA5_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstMuonLoose3:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstElectronVTightMVA5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4879
 * 
 *     property tAgainstElectronVTightMVA5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstElectronVTightMVA5_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstElectronVTightMVA5_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstElectronVTightMVA5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4884
 * 
 *     property tAgainstMuonLoose3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstMuonLoose3_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstMuonLoose3_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAgainstMuonLoose3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAgainstMuonLoose3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18tAgainstMuonLoose3___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAgainstMuonLoose3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4885
 *     property tAgainstMuonLoose3:
 *         def __get__(self):
 *             self.tAgainstMuonLoose3_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstMuonLoose3_value
 * 
 */
  __pyx_v_self->tAgainstMuonLoose3_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4886
 *         def __get__(self):
 *             self.tAgainstMuonLoose3_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstMuonLoose3_value             # <<<<<<<<<<<<<<
 * 
 *     property tAgainstMuonTight3:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstMuonLoose3_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4886; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4884
 * 
 *     property tAgainstMuonLoose3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstMuonLoose3_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstMuonLoose3_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstMuonLoose3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4889
 * 
 *     property tAgainstMuonTight3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstMuonTight3_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstMuonTight3_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAgainstMuonTight3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAgainstMuonTight3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18tAgainstMuonTight3___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAgainstMuonTight3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4890
 *     property tAgainstMuonTight3:
 *         def __get__(self):
 *             self.tAgainstMuonTight3_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAgainstMuonTight3_value
 * 
 */
  __pyx_v_self->tAgainstMuonTight3_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4891
 *         def __get__(self):
 *             self.tAgainstMuonTight3_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstMuonTight3_value             # <<<<<<<<<<<<<<
 * 
 *     property tByCombinedIsolationDeltaBetaCorrRaw3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAgainstMuonTight3_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4891; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4889
 * 
 *     property tAgainstMuonTight3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAgainstMuonTight3_branch.GetEntry(self.localentry, 0)
 *             return self.tAgainstMuonTight3_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAgainstMuonTight3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4894
 * 
 *     property tByCombinedIsolationDeltaBetaCorrRaw3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_41tByCombinedIsolationDeltaBetaCorrRaw3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_41tByCombinedIsolationDeltaBetaCorrRaw3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_41tByCombinedIsolationDeltaBetaCorrRaw3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_41tByCombinedIsolationDeltaBetaCorrRaw3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4895
 *     property tByCombinedIsolationDeltaBetaCorrRaw3Hits:
 *         def __get__(self):
 *             self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_value
 * 
 */
  __pyx_v_self->tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4896
 *         def __get__(self):
 *             self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tByIsolationMVA3newDMwLTraw:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByCombinedIsolationDeltaBetaCorrRaw3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4896; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4894
 * 
 *     property tByCombinedIsolationDeltaBetaCorrRaw3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByCombinedIsolationDeltaBetaCorrRaw3Hits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByCombinedIsolationDeltaBetaCorrRaw3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4899
 * 
 *     property tByIsolationMVA3newDMwLTraw:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByIsolationMVA3newDMwLTraw_branch.GetEntry(self.localentry, 0)
 *             return self.tByIsolationMVA3newDMwLTraw_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27tByIsolationMVA3newDMwLTraw_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27tByIsolationMVA3newDMwLTraw_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27tByIsolationMVA3newDMwLTraw___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27tByIsolationMVA3newDMwLTraw___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4900
 *     property tByIsolationMVA3newDMwLTraw:
 *         def __get__(self):
 *             self.tByIsolationMVA3newDMwLTraw_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByIsolationMVA3newDMwLTraw_value
 * 
 */
  __pyx_v_self->tByIsolationMVA3newDMwLTraw_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4901
 *         def __get__(self):
 *             self.tByIsolationMVA3newDMwLTraw_branch.GetEntry(self.localentry, 0)
 *             return self.tByIsolationMVA3newDMwLTraw_value             # <<<<<<<<<<<<<<
 * 
 *     property tByIsolationMVA3oldDMwLTraw:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByIsolationMVA3newDMwLTraw_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4901; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4899
 * 
 *     property tByIsolationMVA3newDMwLTraw:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByIsolationMVA3newDMwLTraw_branch.GetEntry(self.localentry, 0)
 *             return self.tByIsolationMVA3newDMwLTraw_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByIsolationMVA3newDMwLTraw.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4904
 * 
 *     property tByIsolationMVA3oldDMwLTraw:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByIsolationMVA3oldDMwLTraw_branch.GetEntry(self.localentry, 0)
 *             return self.tByIsolationMVA3oldDMwLTraw_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27tByIsolationMVA3oldDMwLTraw_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27tByIsolationMVA3oldDMwLTraw_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27tByIsolationMVA3oldDMwLTraw___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27tByIsolationMVA3oldDMwLTraw___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4905
 *     property tByIsolationMVA3oldDMwLTraw:
 *         def __get__(self):
 *             self.tByIsolationMVA3oldDMwLTraw_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByIsolationMVA3oldDMwLTraw_value
 * 
 */
  __pyx_v_self->tByIsolationMVA3oldDMwLTraw_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4906
 *         def __get__(self):
 *             self.tByIsolationMVA3oldDMwLTraw_branch.GetEntry(self.localentry, 0)
 *             return self.tByIsolationMVA3oldDMwLTraw_value             # <<<<<<<<<<<<<<
 * 
 *     property tByLooseCombinedIsolationDeltaBetaCorr3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByIsolationMVA3oldDMwLTraw_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4904
 * 
 *     property tByIsolationMVA3oldDMwLTraw:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByIsolationMVA3oldDMwLTraw_branch.GetEntry(self.localentry, 0)
 *             return self.tByIsolationMVA3oldDMwLTraw_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByIsolationMVA3oldDMwLTraw.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4909
 * 
 *     property tByLooseCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_43tByLooseCombinedIsolationDeltaBetaCorr3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_43tByLooseCombinedIsolationDeltaBetaCorr3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_43tByLooseCombinedIsolationDeltaBetaCorr3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_43tByLooseCombinedIsolationDeltaBetaCorr3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4910
 *     property tByLooseCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):
 *             self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_value
 * 
 */
  __pyx_v_self->tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4911
 *         def __get__(self):
 *             self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tByLooseIsolationMVA3newDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByLooseCombinedIsolationDeltaBetaCorr3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4911; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4909
 * 
 *     property tByLooseCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseCombinedIsolationDeltaBetaCorr3Hits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByLooseCombinedIsolationDeltaBetaCorr3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4914
 * 
 *     property tByLooseIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseIsolationMVA3newDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3newDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4915
 *     property tByLooseIsolationMVA3newDMwLT:
 *         def __get__(self):
 *             self.tByLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByLooseIsolationMVA3newDMwLT_value
 * 
 */
  __pyx_v_self->tByLooseIsolationMVA3newDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4916
 *         def __get__(self):
 *             self.tByLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseIsolationMVA3newDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByLooseIsolationMVA3oldDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByLooseIsolationMVA3newDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4914
 * 
 *     property tByLooseIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseIsolationMVA3newDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByLooseIsolationMVA3newDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4919
 * 
 *     property tByLooseIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseIsolationMVA3oldDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3oldDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4920
 *     property tByLooseIsolationMVA3oldDMwLT:
 *         def __get__(self):
 *             self.tByLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByLooseIsolationMVA3oldDMwLT_value
 * 
 */
  __pyx_v_self->tByLooseIsolationMVA3oldDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4921
 *         def __get__(self):
 *             self.tByLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseIsolationMVA3oldDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByMediumCombinedIsolationDeltaBetaCorr3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByLooseIsolationMVA3oldDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4919
 * 
 *     property tByLooseIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByLooseIsolationMVA3oldDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByLooseIsolationMVA3oldDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4924
 * 
 *     property tByMediumCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_44tByMediumCombinedIsolationDeltaBetaCorr3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_44tByMediumCombinedIsolationDeltaBetaCorr3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_44tByMediumCombinedIsolationDeltaBetaCorr3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_44tByMediumCombinedIsolationDeltaBetaCorr3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4925
 *     property tByMediumCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):
 *             self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_value
 * 
 */
  __pyx_v_self->tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4926
 *         def __get__(self):
 *             self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tByMediumIsolationMVA3newDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByMediumCombinedIsolationDeltaBetaCorr3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4924
 * 
 *     property tByMediumCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumCombinedIsolationDeltaBetaCorr3Hits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByMediumCombinedIsolationDeltaBetaCorr3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4929
 * 
 *     property tByMediumIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByMediumIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumIsolationMVA3newDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3newDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4930
 *     property tByMediumIsolationMVA3newDMwLT:
 *         def __get__(self):
 *             self.tByMediumIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByMediumIsolationMVA3newDMwLT_value
 * 
 */
  __pyx_v_self->tByMediumIsolationMVA3newDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4931
 *         def __get__(self):
 *             self.tByMediumIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumIsolationMVA3newDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByMediumIsolationMVA3oldDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByMediumIsolationMVA3newDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4931; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4929
 * 
 *     property tByMediumIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByMediumIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumIsolationMVA3newDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByMediumIsolationMVA3newDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4934
 * 
 *     property tByMediumIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByMediumIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumIsolationMVA3oldDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3oldDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4935
 *     property tByMediumIsolationMVA3oldDMwLT:
 *         def __get__(self):
 *             self.tByMediumIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByMediumIsolationMVA3oldDMwLT_value
 * 
 */
  __pyx_v_self->tByMediumIsolationMVA3oldDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4936
 *         def __get__(self):
 *             self.tByMediumIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumIsolationMVA3oldDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByTightCombinedIsolationDeltaBetaCorr3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByMediumIsolationMVA3oldDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4936; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4934
 * 
 *     property tByMediumIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByMediumIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByMediumIsolationMVA3oldDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByMediumIsolationMVA3oldDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4939
 * 
 *     property tByTightCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightCombinedIsolationDeltaBetaCorr3Hits_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_43tByTightCombinedIsolationDeltaBetaCorr3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_43tByTightCombinedIsolationDeltaBetaCorr3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_43tByTightCombinedIsolationDeltaBetaCorr3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_43tByTightCombinedIsolationDeltaBetaCorr3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4940
 *     property tByTightCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):
 *             self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByTightCombinedIsolationDeltaBetaCorr3Hits_value
 * 
 */
  __pyx_v_self->tByTightCombinedIsolationDeltaBetaCorr3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4941
 *         def __get__(self):
 *             self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightCombinedIsolationDeltaBetaCorr3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tByTightIsolationMVA3newDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByTightCombinedIsolationDeltaBetaCorr3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4939
 * 
 *     property tByTightCombinedIsolationDeltaBetaCorr3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByTightCombinedIsolationDeltaBetaCorr3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightCombinedIsolationDeltaBetaCorr3Hits_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByTightCombinedIsolationDeltaBetaCorr3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4944
 * 
 *     property tByTightIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightIsolationMVA3newDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3newDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4945
 *     property tByTightIsolationMVA3newDMwLT:
 *         def __get__(self):
 *             self.tByTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByTightIsolationMVA3newDMwLT_value
 * 
 */
  __pyx_v_self->tByTightIsolationMVA3newDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4946
 *         def __get__(self):
 *             self.tByTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightIsolationMVA3newDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByTightIsolationMVA3oldDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByTightIsolationMVA3newDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4946; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4944
 * 
 *     property tByTightIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightIsolationMVA3newDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByTightIsolationMVA3newDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4949
 * 
 *     property tByTightIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightIsolationMVA3oldDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3oldDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4950
 *     property tByTightIsolationMVA3oldDMwLT:
 *         def __get__(self):
 *             self.tByTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByTightIsolationMVA3oldDMwLT_value
 * 
 */
  __pyx_v_self->tByTightIsolationMVA3oldDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4951
 *         def __get__(self):
 *             self.tByTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightIsolationMVA3oldDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByVLooseIsolationMVA3newDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByTightIsolationMVA3oldDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4949
 * 
 *     property tByTightIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByTightIsolationMVA3oldDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByTightIsolationMVA3oldDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4954
 * 
 *     property tByVLooseIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVLooseIsolationMVA3newDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3newDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4955
 *     property tByVLooseIsolationMVA3newDMwLT:
 *         def __get__(self):
 *             self.tByVLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByVLooseIsolationMVA3newDMwLT_value
 * 
 */
  __pyx_v_self->tByVLooseIsolationMVA3newDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4956
 *         def __get__(self):
 *             self.tByVLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVLooseIsolationMVA3newDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByVLooseIsolationMVA3oldDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByVLooseIsolationMVA3newDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4956; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4954
 * 
 *     property tByVLooseIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVLooseIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVLooseIsolationMVA3newDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByVLooseIsolationMVA3newDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4959
 * 
 *     property tByVLooseIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVLooseIsolationMVA3oldDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3oldDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4960
 *     property tByVLooseIsolationMVA3oldDMwLT:
 *         def __get__(self):
 *             self.tByVLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByVLooseIsolationMVA3oldDMwLT_value
 * 
 */
  __pyx_v_self->tByVLooseIsolationMVA3oldDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4961
 *         def __get__(self):
 *             self.tByVLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVLooseIsolationMVA3oldDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByVTightIsolationMVA3newDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByVLooseIsolationMVA3oldDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4959
 * 
 *     property tByVLooseIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVLooseIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVLooseIsolationMVA3oldDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByVLooseIsolationMVA3oldDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4964
 * 
 *     property tByVTightIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVTightIsolationMVA3newDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3newDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4965
 *     property tByVTightIsolationMVA3newDMwLT:
 *         def __get__(self):
 *             self.tByVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByVTightIsolationMVA3newDMwLT_value
 * 
 */
  __pyx_v_self->tByVTightIsolationMVA3newDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4966
 *         def __get__(self):
 *             self.tByVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVTightIsolationMVA3newDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByVTightIsolationMVA3oldDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByVTightIsolationMVA3newDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4966; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4964
 * 
 *     property tByVTightIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVTightIsolationMVA3newDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByVTightIsolationMVA3newDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4969
 * 
 *     property tByVTightIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVTightIsolationMVA3oldDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3oldDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4970
 *     property tByVTightIsolationMVA3oldDMwLT:
 *         def __get__(self):
 *             self.tByVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByVTightIsolationMVA3oldDMwLT_value
 * 
 */
  __pyx_v_self->tByVTightIsolationMVA3oldDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4971
 *         def __get__(self):
 *             self.tByVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVTightIsolationMVA3oldDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByVVTightIsolationMVA3newDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByVTightIsolationMVA3oldDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4971; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4969
 * 
 *     property tByVTightIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVTightIsolationMVA3oldDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByVTightIsolationMVA3oldDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4974
 * 
 *     property tByVVTightIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVVTightIsolationMVA3newDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3newDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3newDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3newDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4975
 *     property tByVVTightIsolationMVA3newDMwLT:
 *         def __get__(self):
 *             self.tByVVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByVVTightIsolationMVA3newDMwLT_value
 * 
 */
  __pyx_v_self->tByVVTightIsolationMVA3newDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4976
 *         def __get__(self):
 *             self.tByVVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVVTightIsolationMVA3newDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tByVVTightIsolationMVA3oldDMwLT:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByVVTightIsolationMVA3newDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4976; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4974
 * 
 *     property tByVVTightIsolationMVA3newDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVVTightIsolationMVA3newDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVVTightIsolationMVA3newDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByVVTightIsolationMVA3newDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4979
 * 
 *     property tByVVTightIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVVTightIsolationMVA3oldDMwLT_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3oldDMwLT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3oldDMwLT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3oldDMwLT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4980
 *     property tByVVTightIsolationMVA3oldDMwLT:
 *         def __get__(self):
 *             self.tByVVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tByVVTightIsolationMVA3oldDMwLT_value
 * 
 */
  __pyx_v_self->tByVVTightIsolationMVA3oldDMwLT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4981
 *         def __get__(self):
 *             self.tByVVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVVTightIsolationMVA3oldDMwLT_value             # <<<<<<<<<<<<<<
 * 
 *     property tCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tByVVTightIsolationMVA3oldDMwLT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4981; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4979
 * 
 *     property tByVVTightIsolationMVA3oldDMwLT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tByVVTightIsolationMVA3oldDMwLT_branch.GetEntry(self.localentry, 0)
 *             return self.tByVVTightIsolationMVA3oldDMwLT_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tByVVTightIsolationMVA3oldDMwLT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4984
 * 
 *     property tCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tCharge_branch.GetEntry(self.localentry, 0)
 *             return self.tCharge_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7tCharge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4985
 *     property tCharge:
 *         def __get__(self):
 *             self.tCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tCharge_value
 * 
 */
  __pyx_v_self->tCharge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4986
 *         def __get__(self):
 *             self.tCharge_branch.GetEntry(self.localentry, 0)
 *             return self.tCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property tChargedIsoPtSum:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tCharge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4986; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4984
 * 
 *     property tCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tCharge_branch.GetEntry(self.localentry, 0)
 *             return self.tCharge_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4989
 * 
 *     property tChargedIsoPtSum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tChargedIsoPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tChargedIsoPtSum_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tChargedIsoPtSum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tChargedIsoPtSum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tChargedIsoPtSum___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tChargedIsoPtSum___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4990
 *     property tChargedIsoPtSum:
 *         def __get__(self):
 *             self.tChargedIsoPtSum_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tChargedIsoPtSum_value
 * 
 */
  __pyx_v_self->tChargedIsoPtSum_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4991
 *         def __get__(self):
 *             self.tChargedIsoPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tChargedIsoPtSum_value             # <<<<<<<<<<<<<<
 * 
 *     property tDecayMode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tChargedIsoPtSum_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4989
 * 
 *     property tChargedIsoPtSum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tChargedIsoPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tChargedIsoPtSum_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tChargedIsoPtSum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4994
 * 
 *     property tDecayMode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayMode_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tDecayMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tDecayMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tDecayMode___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4995
 *     property tDecayMode:
 *         def __get__(self):
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tDecayMode_value
 * 
 */
  __pyx_v_self->tDecayMode_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4996
 *         def __get__(self):
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayMode_value             # <<<<<<<<<<<<<<
 * 
 *     property tDecayModeFinding:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tDecayMode_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4994
 * 
 *     property tDecayMode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayMode_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tDecayMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4999
 * 
 *     property tDecayModeFinding:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayModeFinding_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayModeFinding_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17tDecayModeFinding_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17tDecayModeFinding_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17tDecayModeFinding___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17tDecayModeFinding___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5000
 *     property tDecayModeFinding:
 *         def __get__(self):
 *             self.tDecayModeFinding_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tDecayModeFinding_value
 * 
 */
  __pyx_v_self->tDecayModeFinding_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5001
 *         def __get__(self):
 *             self.tDecayModeFinding_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayModeFinding_value             # <<<<<<<<<<<<<<
 * 
 *     property tDecayModeFindingNewDMs:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tDecayModeFinding_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":4999
 * 
 *     property tDecayModeFinding:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayModeFinding_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayModeFinding_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tDecayModeFinding.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5004
 * 
 *     property tDecayModeFindingNewDMs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayModeFindingNewDMs_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayModeFindingNewDMs_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tDecayModeFindingNewDMs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tDecayModeFindingNewDMs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tDecayModeFindingNewDMs___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tDecayModeFindingNewDMs___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5005
 *     property tDecayModeFindingNewDMs:
 *         def __get__(self):
 *             self.tDecayModeFindingNewDMs_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tDecayModeFindingNewDMs_value
 * 
 */
  __pyx_v_self->tDecayModeFindingNewDMs_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5006
 *         def __get__(self):
 *             self.tDecayModeFindingNewDMs_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayModeFindingNewDMs_value             # <<<<<<<<<<<<<<
 * 
 *     property tElecOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tDecayModeFindingNewDMs_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5004
 * 
 *     property tDecayModeFindingNewDMs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayModeFindingNewDMs_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayModeFindingNewDMs_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tDecayModeFindingNewDMs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5009
 * 
 *     property tElecOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElecOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tElecOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tElecOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tElecOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tElecOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5010
 *     property tElecOverlap:
 *         def __get__(self):
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tElecOverlap_value
 * 
 */
  __pyx_v_self->tElecOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5011
 *         def __get__(self):
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElecOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tElectronPt10IdIsoVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tElecOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5011; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5009
 * 
 *     property tElecOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElecOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tElecOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5014
 * 
 *     property tElectronPt10IdIsoVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt10IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt10IdIsoVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_28tElectronPt10IdIsoVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_28tElectronPt10IdIsoVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_28tElectronPt10IdIsoVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_28tElectronPt10IdIsoVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5015
 *     property tElectronPt10IdIsoVtxOverlap:
 *         def __get__(self):
 *             self.tElectronPt10IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tElectronPt10IdIsoVtxOverlap_value
 * 
 */
  __pyx_v_self->tElectronPt10IdIsoVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5016
 *         def __get__(self):
 *             self.tElectronPt10IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt10IdIsoVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tElectronPt10IdVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tElectronPt10IdIsoVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5014
 * 
 *     property tElectronPt10IdIsoVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt10IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt10IdIsoVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tElectronPt10IdIsoVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5019
 * 
 *     property tElectronPt10IdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt10IdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt10IdVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tElectronPt10IdVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tElectronPt10IdVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_25tElectronPt10IdVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tElectronPt10IdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5020
 *     property tElectronPt10IdVtxOverlap:
 *         def __get__(self):
 *             self.tElectronPt10IdVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tElectronPt10IdVtxOverlap_value
 * 
 */
  __pyx_v_self->tElectronPt10IdVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5021
 *         def __get__(self):
 *             self.tElectronPt10IdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt10IdVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tElectronPt15IdIsoVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tElectronPt10IdVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5021; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5019
 * 
 *     property tElectronPt10IdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt10IdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt10IdVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tElectronPt10IdVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5024
 * 
 *     property tElectronPt15IdIsoVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt15IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt15IdIsoVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_28tElectronPt15IdIsoVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_28tElectronPt15IdIsoVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_28tElectronPt15IdIsoVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_28tElectronPt15IdIsoVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5025
 *     property tElectronPt15IdIsoVtxOverlap:
 *         def __get__(self):
 *             self.tElectronPt15IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tElectronPt15IdIsoVtxOverlap_value
 * 
 */
  __pyx_v_self->tElectronPt15IdIsoVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5026
 *         def __get__(self):
 *             self.tElectronPt15IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt15IdIsoVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tElectronPt15IdVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tElectronPt15IdIsoVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5024
 * 
 *     property tElectronPt15IdIsoVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt15IdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt15IdIsoVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tElectronPt15IdIsoVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5029
 * 
 *     property tElectronPt15IdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt15IdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt15IdVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tElectronPt15IdVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25tElectronPt15IdVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_25tElectronPt15IdVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25tElectronPt15IdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5030
 *     property tElectronPt15IdVtxOverlap:
 *         def __get__(self):
 *             self.tElectronPt15IdVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tElectronPt15IdVtxOverlap_value
 * 
 */
  __pyx_v_self->tElectronPt15IdVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5031
 *         def __get__(self):
 *             self.tElectronPt15IdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt15IdVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tElectronPt15IdVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5031; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5029
 * 
 *     property tElectronPt15IdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElectronPt15IdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElectronPt15IdVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tElectronPt15IdVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5034
 * 
 *     property tEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tEta_branch.GetEntry(self.localentry, 0)
 *             return self.tEta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4tEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5035
 *     property tEta:
 *         def __get__(self):
 *             self.tEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tEta_value
 * 
 */
  __pyx_v_self->tEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5036
 *         def __get__(self):
 *             self.tEta_branch.GetEntry(self.localentry, 0)
 *             return self.tEta_value             # <<<<<<<<<<<<<<
 * 
 *     property tGenDecayMode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5036; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5034
 * 
 *     property tEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tEta_branch.GetEntry(self.localentry, 0)
 *             return self.tEta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5039
 * 
 *     property tGenDecayMode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tGenDecayMode_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tGenDecayMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tGenDecayMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tGenDecayMode___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tGenDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5040
 *     property tGenDecayMode:
 *         def __get__(self):
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tGenDecayMode_value
 * 
 */
  __pyx_v_self->tGenDecayMode_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5041
 *         def __get__(self):
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tGenDecayMode_value             # <<<<<<<<<<<<<<
 * 
 *     property tGlobalMuonVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tGenDecayMode_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5039
 * 
 *     property tGenDecayMode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tGenDecayMode_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tGenDecayMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5044
 * 
 *     property tGlobalMuonVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tGlobalMuonVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tGlobalMuonVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21tGlobalMuonVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21tGlobalMuonVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21tGlobalMuonVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21tGlobalMuonVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5045
 *     property tGlobalMuonVtxOverlap:
 *         def __get__(self):
 *             self.tGlobalMuonVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tGlobalMuonVtxOverlap_value
 * 
 */
  __pyx_v_self->tGlobalMuonVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5046
 *         def __get__(self):
 *             self.tGlobalMuonVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tGlobalMuonVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetArea:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tGlobalMuonVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5046; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5044
 * 
 *     property tGlobalMuonVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tGlobalMuonVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tGlobalMuonVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tGlobalMuonVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5049
 * 
 *     property tJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.tJetArea_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8tJetArea___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5050
 *     property tJetArea:
 *         def __get__(self):
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetArea_value
 * 
 */
  __pyx_v_self->tJetArea_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5051
 *         def __get__(self):
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.tJetArea_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetArea_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5049
 * 
 *     property tJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.tJetArea_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5054
 * 
 *     property tJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8tJetBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5055
 *     property tJetBtag:
 *         def __get__(self):
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetBtag_value
 * 
 */
  __pyx_v_self->tJetBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5056
 *         def __get__(self):
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetEtaEtaMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5054
 * 
 *     property tJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5059
 * 
 *     property tJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaEtaMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5060
 *     property tJetEtaEtaMoment:
 *         def __get__(self):
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetEtaEtaMoment_value
 * 
 */
  __pyx_v_self->tJetEtaEtaMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5061
 *         def __get__(self):
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaEtaMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetEtaPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetEtaEtaMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5059
 * 
 *     property tJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaEtaMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetEtaEtaMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5064
 * 
 *     property tJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5065
 *     property tJetEtaPhiMoment:
 *         def __get__(self):
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetEtaPhiMoment_value
 * 
 */
  __pyx_v_self->tJetEtaPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5066
 *         def __get__(self):
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetEtaPhiSpread:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetEtaPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5066; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5064
 * 
 *     property tJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetEtaPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5069
 * 
 *     property tJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiSpread_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5070
 *     property tJetEtaPhiSpread:
 *         def __get__(self):
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetEtaPhiSpread_value
 * 
 */
  __pyx_v_self->tJetEtaPhiSpread_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5071
 *         def __get__(self):
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiSpread_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetPFCISVBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetEtaPhiSpread_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5071; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5069
 * 
 *     property tJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiSpread_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetEtaPhiSpread.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5074
 * 
 *     property tJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPFCISVBtag_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tJetPFCISVBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tJetPFCISVBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tJetPFCISVBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tJetPFCISVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5075
 *     property tJetPFCISVBtag:
 *         def __get__(self):
 *             self.tJetPFCISVBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetPFCISVBtag_value
 * 
 */
  __pyx_v_self->tJetPFCISVBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5076
 *         def __get__(self):
 *             self.tJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPFCISVBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetPartonFlavour:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetPFCISVBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5076; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5074
 * 
 *     property tJetPFCISVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPFCISVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPFCISVBtag_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetPFCISVBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5079
 * 
 *     property tJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPartonFlavour_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17tJetPartonFlavour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17tJetPartonFlavour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17tJetPartonFlavour___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17tJetPartonFlavour___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5080
 *     property tJetPartonFlavour:
 *         def __get__(self):
 *             self.tJetPartonFlavour_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetPartonFlavour_value
 * 
 */
  __pyx_v_self->tJetPartonFlavour_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5081
 *         def __get__(self):
 *             self.tJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPartonFlavour_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetPhiPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetPartonFlavour_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5081; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5079
 * 
 *     property tJetPartonFlavour:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPartonFlavour_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPartonFlavour_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetPartonFlavour.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5084
 * 
 *     property tJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPhiPhiMoment_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5085
 *     property tJetPhiPhiMoment:
 *         def __get__(self):
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetPhiPhiMoment_value
 * 
 */
  __pyx_v_self->tJetPhiPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5086
 *         def __get__(self):
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPhiPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetPhiPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5084
 * 
 *     property tJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPhiPhiMoment_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetPhiPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5089
 * 
 *     property tJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tJetPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tJetPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6tJetPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5090
 *     property tJetPt:
 *         def __get__(self):
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetPt_value
 * 
 */
  __pyx_v_self->tJetPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5091
 *         def __get__(self):
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPt_value             # <<<<<<<<<<<<<<
 * 
 *     property tLeadTrackPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5091; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5089
 * 
 *     property tJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5094
 * 
 *     property tLeadTrackPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)
 *             return self.tLeadTrackPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tLeadTrackPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tLeadTrackPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tLeadTrackPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tLeadTrackPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5095
 *     property tLeadTrackPt:
 *         def __get__(self):
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLeadTrackPt_value
 * 
 */
  __pyx_v_self->tLeadTrackPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5096
 *         def __get__(self):
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)
 *             return self.tLeadTrackPt_value             # <<<<<<<<<<<<<<
 * 
 *     property tLowestMll:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLeadTrackPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5094
 * 
 *     property tLeadTrackPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)
 *             return self.tLeadTrackPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLeadTrackPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5099
 * 
 *     property tLowestMll:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLowestMll_branch.GetEntry(self.localentry, 0)
 *             return self.tLowestMll_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tLowestMll_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tLowestMll_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tLowestMll___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tLowestMll___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5100
 *     property tLowestMll:
 *         def __get__(self):
 *             self.tLowestMll_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLowestMll_value
 * 
 */
  __pyx_v_self->tLowestMll_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5101
 *         def __get__(self):
 *             self.tLowestMll_branch.GetEntry(self.localentry, 0)
 *             return self.tLowestMll_value             # <<<<<<<<<<<<<<
 * 
 *     property tMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLowestMll_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5099
 * 
 *     property tLowestMll:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLowestMll_branch.GetEntry(self.localentry, 0)
 *             return self.tLowestMll_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLowestMll.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5104
 * 
 *     property tMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMass_branch.GetEntry(self.localentry, 0)
 *             return self.tMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5tMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5105
 *     property tMass:
 *         def __get__(self):
 *             self.tMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMass_value
 * 
 */
  __pyx_v_self->tMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5106
 *         def __get__(self):
 *             self.tMass_branch.GetEntry(self.localentry, 0)
 *             return self.tMass_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5104
 * 
 *     property tMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMass_branch.GetEntry(self.localentry, 0)
 *             return self.tMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5109
 * 
 *     property tMtToMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMET_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tMtToMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tMtToMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8tMtToMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5110
 *     property tMtToMET:
 *         def __get__(self):
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToMET_value
 * 
 */
  __pyx_v_self->tMtToMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5111
 *         def __get__(self):
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMET_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPFMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5109
 * 
 *     property tMtToMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMET_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5114
 * 
 *     property tMtToPFMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPFMET_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMtToPFMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMtToPFMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tMtToPFMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5115
 *     property tMtToPFMET:
 *         def __get__(self):
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPFMET_value
 * 
 */
  __pyx_v_self->tMtToPFMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5116
 *         def __get__(self):
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPFMET_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_Ty1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPFMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5114
 * 
 *     property tMtToPFMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPFMET_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPFMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5119
 * 
 *     property tMtToPfMet_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_Ty1_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5120
 *     property tMtToPfMet_Ty1:
 *         def __get__(self):
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_Ty1_value
 * 
 */
  __pyx_v_self->tMtToPfMet_Ty1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5121
 *         def __get__(self):
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_Ty1_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_jes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_Ty1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5121; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5119
 * 
 *     property tMtToPfMet_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_Ty1_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_Ty1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5124
 * 
 *     property tMtToPfMet_jes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_jes_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_jes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_jes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_jes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5125
 *     property tMtToPfMet_jes:
 *         def __get__(self):
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_jes_value
 * 
 */
  __pyx_v_self->tMtToPfMet_jes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5126
 *         def __get__(self):
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_jes_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_mes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_jes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5124
 * 
 *     property tMtToPfMet_jes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_jes_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_jes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5129
 * 
 *     property tMtToPfMet_mes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_mes_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_mes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_mes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_mes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5130
 *     property tMtToPfMet_mes:
 *         def __get__(self):
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_mes_value
 * 
 */
  __pyx_v_self->tMtToPfMet_mes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5131
 *         def __get__(self):
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_mes_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_tes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_mes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5129
 * 
 *     property tMtToPfMet_mes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_mes_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_mes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5134
 * 
 *     property tMtToPfMet_tes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_tes_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_tes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_tes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_tes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5135
 *     property tMtToPfMet_tes:
 *         def __get__(self):
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_tes_value
 * 
 */
  __pyx_v_self->tMtToPfMet_tes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5136
 *         def __get__(self):
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_tes_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_ues:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_tes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5134
 * 
 *     property tMtToPfMet_tes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_tes_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_tes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5139
 * 
 *     property tMtToPfMet_ues:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_ues_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_ues_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_ues_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_ues___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5140
 *     property tMtToPfMet_ues:
 *         def __get__(self):
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_ues_value
 * 
 */
  __pyx_v_self->tMtToPfMet_ues_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5141
 *         def __get__(self):
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_ues_value             # <<<<<<<<<<<<<<
 * 
 *     property tMuOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_ues_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5139
 * 
 *     property tMtToPfMet_ues:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_ues_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_ues.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5144
 * 
 *     property tMuOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMuOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMuOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tMuOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMuOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5145
 *     property tMuOverlap:
 *         def __get__(self):
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMuOverlap_value
 * 
 */
  __pyx_v_self->tMuOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5146
 *         def __get__(self):
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tMuonIdIsoStdVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMuOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5144
 * 
 *     property tMuOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMuOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5149
 * 
 *     property tMuonIdIsoStdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuonIdIsoStdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdIsoStdVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tMuonIdIsoStdVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tMuonIdIsoStdVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tMuonIdIsoStdVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tMuonIdIsoStdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5150
 *     property tMuonIdIsoStdVtxOverlap:
 *         def __get__(self):
 *             self.tMuonIdIsoStdVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMuonIdIsoStdVtxOverlap_value
 * 
 */
  __pyx_v_self->tMuonIdIsoStdVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5151
 *         def __get__(self):
 *             self.tMuonIdIsoStdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdIsoStdVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tMuonIdIsoVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMuonIdIsoStdVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5149
 * 
 *     property tMuonIdIsoStdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuonIdIsoStdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdIsoStdVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMuonIdIsoStdVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5154
 * 
 *     property tMuonIdIsoVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuonIdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdIsoVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20tMuonIdIsoVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20tMuonIdIsoVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20tMuonIdIsoVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20tMuonIdIsoVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5155
 *     property tMuonIdIsoVtxOverlap:
 *         def __get__(self):
 *             self.tMuonIdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMuonIdIsoVtxOverlap_value
 * 
 */
  __pyx_v_self->tMuonIdIsoVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5156
 *         def __get__(self):
 *             self.tMuonIdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdIsoVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tMuonIdVtxOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMuonIdIsoVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5154
 * 
 *     property tMuonIdIsoVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuonIdIsoVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdIsoVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMuonIdIsoVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5159
 * 
 *     property tMuonIdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuonIdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdVtxOverlap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17tMuonIdVtxOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17tMuonIdVtxOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17tMuonIdVtxOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17tMuonIdVtxOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5160
 *     property tMuonIdVtxOverlap:
 *         def __get__(self):
 *             self.tMuonIdVtxOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMuonIdVtxOverlap_value
 * 
 */
  __pyx_v_self->tMuonIdVtxOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5161
 *         def __get__(self):
 *             self.tMuonIdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdVtxOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tNearestZMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMuonIdVtxOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5159
 * 
 *     property tMuonIdVtxOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuonIdVtxOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuonIdVtxOverlap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMuonIdVtxOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5164
 * 
 *     property tNearestZMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tNearestZMass_branch.GetEntry(self.localentry, 0)
 *             return self.tNearestZMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tNearestZMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tNearestZMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tNearestZMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tNearestZMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5165
 *     property tNearestZMass:
 *         def __get__(self):
 *             self.tNearestZMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tNearestZMass_value
 * 
 */
  __pyx_v_self->tNearestZMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5166
 *         def __get__(self):
 *             self.tNearestZMass_branch.GetEntry(self.localentry, 0)
 *             return self.tNearestZMass_value             # <<<<<<<<<<<<<<
 * 
 *     property tNeutralIsoPtSum:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tNearestZMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5164
 * 
 *     property tNearestZMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tNearestZMass_branch.GetEntry(self.localentry, 0)
 *             return self.tNearestZMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tNearestZMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5169
 * 
 *     property tNeutralIsoPtSum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tNeutralIsoPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tNeutralIsoPtSum_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tNeutralIsoPtSum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tNeutralIsoPtSum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tNeutralIsoPtSum___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tNeutralIsoPtSum___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5170
 *     property tNeutralIsoPtSum:
 *         def __get__(self):
 *             self.tNeutralIsoPtSum_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tNeutralIsoPtSum_value
 * 
 */
  __pyx_v_self->tNeutralIsoPtSum_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5171
 *         def __get__(self):
 *             self.tNeutralIsoPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tNeutralIsoPtSum_value             # <<<<<<<<<<<<<<
 * 
 *     property tPVDXY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tNeutralIsoPtSum_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5169
 * 
 *     property tNeutralIsoPtSum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tNeutralIsoPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tNeutralIsoPtSum_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tNeutralIsoPtSum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5174
 * 
 *     property tPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.tPVDXY_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tPVDXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tPVDXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6tPVDXY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tPVDXY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5175
 *     property tPVDXY:
 *         def __get__(self):
 *             self.tPVDXY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPVDXY_value
 * 
 */
  __pyx_v_self->tPVDXY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5176
 *         def __get__(self):
 *             self.tPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.tPVDXY_value             # <<<<<<<<<<<<<<
 * 
 *     property tPVDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPVDXY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5174
 * 
 *     property tPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.tPVDXY_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPVDXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5179
 * 
 *     property tPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.tPVDZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tPVDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tPVDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5tPVDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tPVDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5180
 *     property tPVDZ:
 *         def __get__(self):
 *             self.tPVDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPVDZ_value
 * 
 */
  __pyx_v_self->tPVDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5181
 *         def __get__(self):
 *             self.tPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.tPVDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property tPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPVDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5179
 * 
 *     property tPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.tPVDZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPVDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5184
 * 
 *     property tPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4tPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5185
 *     property tPhi:
 *         def __get__(self):
 *             self.tPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPhi_value
 * 
 */
  __pyx_v_self->tPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5186
 *         def __get__(self):
 *             self.tPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property tPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5184
 * 
 *     property tPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5189
 * 
 *     property tPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPt_branch.GetEntry(self.localentry, 0)
 *             return self.tPt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3tPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5190
 *     property tPt:
 *         def __get__(self):
 *             self.tPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPt_value
 * 
 */
  __pyx_v_self->tPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5191
 *         def __get__(self):
 *             self.tPt_branch.GetEntry(self.localentry, 0)
 *             return self.tPt_value             # <<<<<<<<<<<<<<
 * 
 *     property tPuCorrPtSum:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5189
 * 
 *     property tPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPt_branch.GetEntry(self.localentry, 0)
 *             return self.tPt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5194
 * 
 *     property tPuCorrPtSum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPuCorrPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tPuCorrPtSum_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tPuCorrPtSum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tPuCorrPtSum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tPuCorrPtSum___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tPuCorrPtSum___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5195
 *     property tPuCorrPtSum:
 *         def __get__(self):
 *             self.tPuCorrPtSum_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPuCorrPtSum_value
 * 
 */
  __pyx_v_self->tPuCorrPtSum_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5196
 *         def __get__(self):
 *             self.tPuCorrPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tPuCorrPtSum_value             # <<<<<<<<<<<<<<
 * 
 *     property tRank:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPuCorrPtSum_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5194
 * 
 *     property tPuCorrPtSum:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPuCorrPtSum_branch.GetEntry(self.localentry, 0)
 *             return self.tPuCorrPtSum_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPuCorrPtSum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5199
 * 
 *     property tRank:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tRank_branch.GetEntry(self.localentry, 0)
 *             return self.tRank_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tRank_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tRank_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5tRank___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tRank___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5200
 *     property tRank:
 *         def __get__(self):
 *             self.tRank_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tRank_value
 * 
 */
  __pyx_v_self->tRank_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5201
 *         def __get__(self):
 *             self.tRank_branch.GetEntry(self.localentry, 0)
 *             return self.tRank_value             # <<<<<<<<<<<<<<
 * 
 *     property tTNPId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tRank_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5199
 * 
 *     property tRank:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tRank_branch.GetEntry(self.localentry, 0)
 *             return self.tRank_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tRank.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5204
 * 
 *     property tTNPId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)
 *             return self.tTNPId_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tTNPId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tTNPId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6tTNPId___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tTNPId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5205
 *     property tTNPId:
 *         def __get__(self):
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tTNPId_value
 * 
 */
  __pyx_v_self->tTNPId_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5206
 *         def __get__(self):
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)
 *             return self.tTNPId_value             # <<<<<<<<<<<<<<
 * 
 *     property tToMETDPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tTNPId_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5204
 * 
 *     property tTNPId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)
 *             return self.tTNPId_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tTNPId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5209
 * 
 *     property tToMETDPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tToMETDPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tToMETDPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tToMETDPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tToMETDPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5210
 *     property tToMETDPhi:
 *         def __get__(self):
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tToMETDPhi_value
 * 
 */
  __pyx_v_self->tToMETDPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5211
 *         def __get__(self):
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tToMETDPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property tVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tToMETDPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5209
 * 
 *     property tToMETDPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tToMETDPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tToMETDPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5214
 * 
 *     property tVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tVZ_branch.GetEntry(self.localentry, 0)
 *             return self.tVZ_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3tVZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5215
 *     property tVZ:
 *         def __get__(self):
 *             self.tVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tVZ_value
 * 
 */
  __pyx_v_self->tVZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5216
 *         def __get__(self):
 *             self.tVZ_branch.GetEntry(self.localentry, 0)
 *             return self.tVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20EleLooseMuTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tVZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5214
 * 
 *     property tVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tVZ_branch.GetEntry(self.localentry, 0)
 *             return self.tVZ_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5219
 * 
 *     property tauVetoPt20EleLooseMuTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20EleLooseMuTight_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20EleLooseMuTight_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tauVetoPt20EleLooseMuTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tauVetoPt20EleLooseMuTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_26tauVetoPt20EleLooseMuTight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tauVetoPt20EleLooseMuTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5220
 *     property tauVetoPt20EleLooseMuTight:
 *         def __get__(self):
 *             self.tauVetoPt20EleLooseMuTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20EleLooseMuTight_value
 * 
 */
  __pyx_v_self->tauVetoPt20EleLooseMuTight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5221
 *         def __get__(self):
 *             self.tauVetoPt20EleLooseMuTight_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20EleLooseMuTight_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20EleTightMuLoose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20EleLooseMuTight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5219
 * 
 *     property tauVetoPt20EleLooseMuTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20EleLooseMuTight_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20EleLooseMuTight_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20EleLooseMuTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5224
 * 
 *     property tauVetoPt20EleTightMuLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20EleTightMuLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20EleTightMuLoose_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tauVetoPt20EleTightMuLoose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_26tauVetoPt20EleTightMuLoose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_26tauVetoPt20EleTightMuLoose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_26tauVetoPt20EleTightMuLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5225
 *     property tauVetoPt20EleTightMuLoose:
 *         def __get__(self):
 *             self.tauVetoPt20EleTightMuLoose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20EleTightMuLoose_value
 * 
 */
  __pyx_v_self->tauVetoPt20EleTightMuLoose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5226
 *         def __get__(self):
 *             self.tauVetoPt20EleTightMuLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20EleTightMuLoose_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20Loose3HitsNewDMVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20EleTightMuLoose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5224
 * 
 *     property tauVetoPt20EleTightMuLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20EleTightMuLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20EleTightMuLoose_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20EleTightMuLoose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5229
 * 
 *     property tauVetoPt20Loose3HitsNewDMVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20Loose3HitsNewDMVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsNewDMVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tauVetoPt20Loose3HitsNewDMVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tauVetoPt20Loose3HitsNewDMVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_29tauVetoPt20Loose3HitsNewDMVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tauVetoPt20Loose3HitsNewDMVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5230
 *     property tauVetoPt20Loose3HitsNewDMVtx:
 *         def __get__(self):
 *             self.tauVetoPt20Loose3HitsNewDMVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20Loose3HitsNewDMVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20Loose3HitsNewDMVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5231
 *         def __get__(self):
 *             self.tauVetoPt20Loose3HitsNewDMVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsNewDMVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20Loose3HitsVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20Loose3HitsNewDMVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5229
 * 
 *     property tauVetoPt20Loose3HitsNewDMVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20Loose3HitsNewDMVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsNewDMVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20Loose3HitsNewDMVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5234
 * 
 *     property tauVetoPt20Loose3HitsVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5235
 *     property tauVetoPt20Loose3HitsVtx:
 *         def __get__(self):
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20Loose3HitsVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20Loose3HitsVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5236
 *         def __get__(self):
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20TightMVALTNewDMVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20Loose3HitsVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5234
 * 
 *     property tauVetoPt20Loose3HitsVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20Loose3HitsVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5239
 * 
 *     property tauVetoPt20TightMVALTNewDMVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20TightMVALTNewDMVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20TightMVALTNewDMVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tauVetoPt20TightMVALTNewDMVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_29tauVetoPt20TightMVALTNewDMVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_29tauVetoPt20TightMVALTNewDMVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_29tauVetoPt20TightMVALTNewDMVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5240
 *     property tauVetoPt20TightMVALTNewDMVtx:
 *         def __get__(self):
 *             self.tauVetoPt20TightMVALTNewDMVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20TightMVALTNewDMVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20TightMVALTNewDMVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5241
 *         def __get__(self):
 *             self.tauVetoPt20TightMVALTNewDMVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20TightMVALTNewDMVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20TightMVALTVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20TightMVALTNewDMVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5239
 * 
 *     property tauVetoPt20TightMVALTNewDMVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20TightMVALTNewDMVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20TightMVALTNewDMVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20TightMVALTNewDMVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5244
 * 
 *     property tauVetoPt20TightMVALTVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20TightMVALTVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20TightMVALTVtx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20TightMVALTVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20TightMVALTVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20TightMVALTVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20TightMVALTVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5245
 *     property tauVetoPt20TightMVALTVtx:
 *         def __get__(self):
 *             self.tauVetoPt20TightMVALTVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20TightMVALTVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20TightMVALTVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5246
 *         def __get__(self):
 *             self.tauVetoPt20TightMVALTVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20TightMVALTVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tripleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20TightMVALTVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5244
 * 
 *     property tauVetoPt20TightMVALTVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20TightMVALTVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20TightMVALTVtx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20TightMVALTVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5249
 * 
 *     property tripleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tripleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tripleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tripleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tripleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5250
 *     property tripleEGroup:
 *         def __get__(self):
 *             self.tripleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tripleEGroup_value
 * 
 */
  __pyx_v_self->tripleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5251
 *         def __get__(self):
 *             self.tripleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property tripleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tripleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5249
 * 
 *     property tripleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tripleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5254
 * 
 *     property tripleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tripleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tripleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11tripleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tripleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5255
 *     property tripleEPass:
 *         def __get__(self):
 *             self.tripleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tripleEPass_value
 * 
 */
  __pyx_v_self->tripleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5256
 *         def __get__(self):
 *             self.tripleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property tripleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tripleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5254
 * 
 *     property tripleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tripleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5259
 * 
 *     property tripleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tripleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tripleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15tripleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tripleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5260
 *     property tripleEPrescale:
 *         def __get__(self):
 *             self.tripleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tripleEPrescale_value
 * 
 */
  __pyx_v_self->tripleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5261
 *         def __get__(self):
 *             self.tripleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property tripleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tripleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5259
 * 
 *     property tripleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.tripleEPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tripleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5264
 * 
 *     property tripleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuGroup_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tripleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tripleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tripleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tripleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5265
 *     property tripleMuGroup:
 *         def __get__(self):
 *             self.tripleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tripleMuGroup_value
 * 
 */
  __pyx_v_self->tripleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5266
 *         def __get__(self):
 *             self.tripleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property tripleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tripleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5264
 * 
 *     property tripleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuGroup_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tripleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5269
 * 
 *     property tripleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuPass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tripleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tripleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tripleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tripleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5270
 *     property tripleMuPass:
 *         def __get__(self):
 *             self.tripleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tripleMuPass_value
 * 
 */
  __pyx_v_self->tripleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5271
 *         def __get__(self):
 *             self.tripleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property tripleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tripleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5269
 * 
 *     property tripleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuPass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tripleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5274
 * 
 *     property tripleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuPrescale_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tripleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tripleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tripleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tripleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5275
 *     property tripleMuPrescale:
 *         def __get__(self):
 *             self.tripleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tripleMuPrescale_value
 * 
 */
  __pyx_v_self->tripleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5276
 *         def __get__(self):
 *             self.tripleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMetEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tripleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5274
 * 
 *     property tripleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tripleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.tripleMuPrescale_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tripleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5279
 * 
 *     property type1_pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13type1_pfMetEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13type1_pfMetEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13type1_pfMetEt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13type1_pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5280
 *     property type1_pfMetEt:
 *         def __get__(self):
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMetEt_value
 * 
 */
  __pyx_v_self->type1_pfMetEt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5281
 *         def __get__(self):
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMetPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMetEt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5279
 * 
 *     property type1_pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.type1_pfMetEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5284
 * 
 *     property type1_pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14type1_pfMetPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14type1_pfMetPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14type1_pfMetPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14type1_pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5285
 *     property type1_pfMetPhi:
 *         def __get__(self):
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMetPhi_value
 * 
 */
  __pyx_v_self->type1_pfMetPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5286
 *         def __get__(self):
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDeta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMetPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5284
 * 
 *     property type1_pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.type1_pfMetPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5289
 * 
 *     property vbfDeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfDeta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfDeta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfDeta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfDeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5290
 *     property vbfDeta:
 *         def __get__(self):
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDeta_value
 * 
 */
  __pyx_v_self->vbfDeta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5291
 *         def __get__(self):
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDijetrap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDeta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5289
 * 
 *     property vbfDeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDeta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5294
 * 
 *     property vbfDijetrap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDijetrap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11vbfDijetrap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11vbfDijetrap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11vbfDijetrap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11vbfDijetrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5295
 *     property vbfDijetrap:
 *         def __get__(self):
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDijetrap_value
 * 
 */
  __pyx_v_self->vbfDijetrap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5296
 *         def __get__(self):
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDijetrap_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDphi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDijetrap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5294
 * 
 *     property vbfDijetrap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDijetrap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDijetrap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5299
 * 
 *     property vbfDphi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphi_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphi_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfDphi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfDphi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfDphi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfDphi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5300
 *     property vbfDphi:
 *         def __get__(self):
 *             self.vbfDphi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDphi_value
 * 
 */
  __pyx_v_self->vbfDphi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5301
 *         def __get__(self):
 *             self.vbfDphi_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphi_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDphihj:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDphi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5299
 * 
 *     property vbfDphi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphi_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphi_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDphi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5304
 * 
 *     property vbfDphihj:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihj_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9vbfDphihj_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9vbfDphihj_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9vbfDphihj___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9vbfDphihj___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5305
 *     property vbfDphihj:
 *         def __get__(self):
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDphihj_value
 * 
 */
  __pyx_v_self->vbfDphihj_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5306
 *         def __get__(self):
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihj_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDphihjnomet:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDphihj_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5304
 * 
 *     property vbfDphihj:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihj_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDphihj.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5309
 * 
 *     property vbfDphihjnomet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihjnomet_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14vbfDphihjnomet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14vbfDphihjnomet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14vbfDphihjnomet___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14vbfDphihjnomet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5310
 *     property vbfDphihjnomet:
 *         def __get__(self):
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDphihjnomet_value
 * 
 */
  __pyx_v_self->vbfDphihjnomet_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5311
 *         def __get__(self):
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihjnomet_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfHrap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDphihjnomet_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5309
 * 
 *     property vbfDphihjnomet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihjnomet_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDphihjnomet.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5314
 * 
 *     property vbfHrap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfHrap_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfHrap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfHrap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfHrap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfHrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5315
 *     property vbfHrap:
 *         def __get__(self):
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfHrap_value
 * 
 */
  __pyx_v_self->vbfHrap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5316
 *         def __get__(self):
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfHrap_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVeto20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfHrap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5314
 * 
 *     property vbfHrap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfHrap_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfHrap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5319
 * 
 *     property vbfJetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5320
 *     property vbfJetVeto20:
 *         def __get__(self):
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVeto20_value
 * 
 */
  __pyx_v_self->vbfJetVeto20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5321
 *         def __get__(self):
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVeto20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5319
 * 
 *     property vbfJetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfJetVeto20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5324
 * 
 *     property vbfJetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto30___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5325
 *     property vbfJetVeto30:
 *         def __get__(self):
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVeto30_value
 * 
 */
  __pyx_v_self->vbfJetVeto30_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5326
 *         def __get__(self):
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVetoTight20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVeto30_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5324
 * 
 *     property vbfJetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfJetVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5329
 * 
 *     property vbfJetVetoTight20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVetoTight20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVetoTight20_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17vbfJetVetoTight20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17vbfJetVetoTight20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17vbfJetVetoTight20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17vbfJetVetoTight20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5330
 *     property vbfJetVetoTight20:
 *         def __get__(self):
 *             self.vbfJetVetoTight20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVetoTight20_value
 * 
 */
  __pyx_v_self->vbfJetVetoTight20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5331
 *         def __get__(self):
 *             self.vbfJetVetoTight20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVetoTight20_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVetoTight30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVetoTight20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5329
 * 
 *     property vbfJetVetoTight20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVetoTight20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVetoTight20_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfJetVetoTight20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5334
 * 
 *     property vbfJetVetoTight30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVetoTight30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVetoTight30_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17vbfJetVetoTight30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17vbfJetVetoTight30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17vbfJetVetoTight30___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17vbfJetVetoTight30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5335
 *     property vbfJetVetoTight30:
 *         def __get__(self):
 *             self.vbfJetVetoTight30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVetoTight30_value
 * 
 */
  __pyx_v_self->vbfJetVetoTight30_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5336
 *         def __get__(self):
 *             self.vbfJetVetoTight30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVetoTight30_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMVA:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVetoTight30_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5334
 * 
 *     property vbfJetVetoTight30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVetoTight30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVetoTight30_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfJetVetoTight30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5339
 * 
 *     property vbfMVA:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMVA_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6vbfMVA_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6vbfMVA_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6vbfMVA___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6vbfMVA___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5340
 *     property vbfMVA:
 *         def __get__(self):
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMVA_value
 * 
 */
  __pyx_v_self->vbfMVA_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5341
 *         def __get__(self):
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMVA_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMVA_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5339
 * 
 *     property vbfMVA:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMVA_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfMVA.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5344
 * 
 *     property vbfMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5345
 *     property vbfMass:
 *         def __get__(self):
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMass_value
 * 
 */
  __pyx_v_self->vbfMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5346
 *         def __get__(self):
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfNJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5344
 * 
 *     property vbfMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5349
 * 
 *     property vbfNJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfNJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfNJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfNJets___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfNJets___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5350
 *     property vbfNJets:
 *         def __get__(self):
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfNJets_value
 * 
 */
  __pyx_v_self->vbfNJets_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5351
 *         def __get__(self):
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfVispt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfNJets_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5349
 * 
 *     property vbfNJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfNJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5354
 * 
 *     property vbfVispt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfVispt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfVispt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfVispt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfVispt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfVispt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5355
 *     property vbfVispt:
 *         def __get__(self):
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfVispt_value
 * 
 */
  __pyx_v_self->vbfVispt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5356
 *         def __get__(self):
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfVispt_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfdijetpt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfVispt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5354
 * 
 *     property vbfVispt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfVispt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfVispt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5359
 * 
 *     property vbfdijetpt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfdijetpt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfdijetpt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10vbfdijetpt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10vbfdijetpt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10vbfdijetpt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10vbfdijetpt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5360
 *     property vbfdijetpt:
 *         def __get__(self):
 *             self.vbfdijetpt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfdijetpt_value
 * 
 */
  __pyx_v_self->vbfdijetpt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5361
 *         def __get__(self):
 *             self.vbfdijetpt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfdijetpt_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfditaupt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfdijetpt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5359
 * 
 *     property vbfdijetpt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfdijetpt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfdijetpt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfdijetpt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5364
 * 
 *     property vbfditaupt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfditaupt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfditaupt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10vbfditaupt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10vbfditaupt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10vbfditaupt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10vbfditaupt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5365
 *     property vbfditaupt:
 *         def __get__(self):
 *             self.vbfditaupt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfditaupt_value
 * 
 */
  __pyx_v_self->vbfditaupt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5366
 *         def __get__(self):
 *             self.vbfditaupt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfditaupt_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj1eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfditaupt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5364
 * 
 *     property vbfditaupt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfditaupt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfditaupt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfditaupt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5369
 * 
 *     property vbfj1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj1eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj1eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfj1eta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj1eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5370
 *     property vbfj1eta:
 *         def __get__(self):
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj1eta_value
 * 
 */
  __pyx_v_self->vbfj1eta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5371
 *         def __get__(self):
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj1pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj1eta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5369
 * 
 *     property vbfj1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfj1eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5374
 * 
 *     property vbfj1pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfj1pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfj1pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfj1pt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfj1pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5375
 *     property vbfj1pt:
 *         def __get__(self):
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj1pt_value
 * 
 */
  __pyx_v_self->vbfj1pt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5376
 *         def __get__(self):
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1pt_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj2eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj1pt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5374
 * 
 *     property vbfj1pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfj1pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5379
 * 
 *     property vbfj2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj2eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj2eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfj2eta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj2eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5380
 *     property vbfj2eta:
 *         def __get__(self):
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj2eta_value
 * 
 */
  __pyx_v_self->vbfj2eta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5381
 *         def __get__(self):
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj2pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj2eta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5379
 * 
 *     property vbfj2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfj2eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5384
 * 
 *     property vbfj2pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2pt_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfj2pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfj2pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfj2pt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfj2pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5385
 *     property vbfj2pt:
 *         def __get__(self):
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj2pt_value
 * 
 */
  __pyx_v_self->vbfj2pt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5386
 *         def __get__(self):
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2pt_value             # <<<<<<<<<<<<<<
 * 
 *     property idx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj2pt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5386; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5384
 * 
 *     property vbfj2pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2pt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2pt_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfj2pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5389
 * 
 *     property idx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3idx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3idx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3idx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3idx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5390
 *     property idx:
 *         def __get__(self):
 *             self.idx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.idx_value
 * 
 */
  __pyx_v_self->idx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5391
 *         def __get__(self):
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->idx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "MuTauTree.pyx":5389
 * 
 *     property idx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.idx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":51
 *     cdef long localentry
 *     # Keep track of missing branches we have complained about.
 *     cdef public set complained             # <<<<<<<<<<<<<<
 * 
 *     # Branches and address for all
 */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10complained_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10complained_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10complained___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10complained___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->complained);
  __pyx_r = __pyx_v_self->complained;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10complained_2__set__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PySet_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "set", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(__pyx_v_self->complained);
  __pyx_v_self->complained = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.complained.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10complained_4__del__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_4__del__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(__pyx_v_self->complained);
  __pyx_v_self->complained = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_9MuTauTree_MuTauTree __pyx_vtable_9MuTauTree_MuTauTree;

static PyObject *__pyx_tp_new_9MuTauTree_MuTauTree(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9MuTauTree_MuTauTree *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9MuTauTree_MuTauTree *)o);
  p->__pyx_vtab = __pyx_vtabptr_9MuTauTree_MuTauTree;
  p->complained = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_9MuTauTree_9MuTauTree_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9MuTauTree_MuTauTree(PyObject *o) {
  struct __pyx_obj_9MuTauTree_MuTauTree *p = (struct __pyx_obj_9MuTauTree_MuTauTree *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->complained);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9MuTauTree_MuTauTree(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9MuTauTree_MuTauTree *p = (struct __pyx_obj_9MuTauTree_MuTauTree *)o;
  if (p->complained) {
    e = (*v)(p->complained, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9MuTauTree_MuTauTree(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9MuTauTree_MuTauTree *p = (struct __pyx_obj_9MuTauTree_MuTauTree *)o;
  tmp = ((PyObject*)p->complained);
  p->complained = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_entry(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5entry_1__get__(o);
}

static int __pyx_setprop_9MuTauTree_9MuTauTree_entry(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9MuTauTree_9MuTauTree_5entry_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_EmbPtWeight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11EmbPtWeight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3Eta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_GenWeight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9GenWeight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Ht(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_2Ht_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_LT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_2LT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Mass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4Mass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassError(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9MassError_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord3_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord4(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord4_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Mt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_2Mt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_NUP(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3NUP_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_2Pt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto20Loose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto20Loose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto20Medium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20bjetCISVVeto20Medium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto20Tight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto20Tight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto30Loose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto30Loose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto30Medium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20bjetCISVVeto30Medium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto30Tight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19bjetCISVVeto30Tight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_charge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6charge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12doubleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11doubleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15doubleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleESingleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20doubleESingleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleESingleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19doubleESingleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleESingleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23doubleESingleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13doubleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12doubleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16doubleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuSingleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20doubleMuSingleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuSingleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19doubleMuSingleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuSingleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23doubleMuSingleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleTauGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14doubleTauGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleTauPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13doubleTauPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleTauPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17doubleTauPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11eVetoMVAIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIsoVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_evt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3evt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isdata(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6isdata_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9jetVeto20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto20_DR05(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14jetVeto20_DR05_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9jetVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto30_DR05(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14jetVeto30_DR05_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto40(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9jetVeto40_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto40_DR05(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14jetVeto40_DR05_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_lumi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4lumi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mAbsEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mAbsEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mBestTrackType(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mBestTrackType_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mCharge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mComesFromHiggs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mComesFromHiggs_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2011(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2011_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4mEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mGenCharge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenEnergy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mGenEnergy_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mGenEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenMotherPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mGenMotherPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mGenPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mGenPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mGenPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mGenVZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenVtxPVMatch(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mGenVtxPVMatch_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIP3D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mIP3D_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIP3DErr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mIP3DErr_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIsGlobal(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mIsGlobal_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIsPFMuon(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mIsPFMuon_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIsTracker(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mIsTracker_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mJetArea_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mJetBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaEtaMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiSpread(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetPFCISVBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mJetPFCISVBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetPartonFlavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17mJetPartonFlavour_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetPhiPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mJetPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mLowestMll(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mLowestMll_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchedStations(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mMatchedStations_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleESingleMu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mMatchesDoubleESingleMu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleMu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mMatchesDoubleMu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleMuSingleE(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mMatchesDoubleMuSingleE_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleESingleMu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mMatchesSingleESingleMu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mMatchesSingleMu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMuSingleE(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mMatchesSingleMuSingleE_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg1_noiso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg1_noiso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21mMatchesSingleMu_leg2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg2_noiso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27mMatchesSingleMu_leg2_noiso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesTripleMu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mMatchesTripleMu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mMtToMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPFMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mMtToPFMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_Ty1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_jes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_jes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_mes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_mes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_tes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_tes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_ues(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_ues_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMuonHits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mMuonHits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mNearestZMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mNearestZMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mNormTrkChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mNormTrkChi2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFChargedIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mPFChargedIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFIDLoose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mPFIDLoose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFIDMedium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mPFIDMedium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFIDTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mPFIDTight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFNeutralIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mPFNeutralIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFPUChargedIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mPFPUChargedIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFPhotonIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mPFPhotonIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPVDXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mPVDXY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPVDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mPVDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4mPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPixHits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mPixHits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3mPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRank(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mRank_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoDBDefault(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18mRelPFIsoDBDefault_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoRho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mRelPFIsoRho_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoRhoFSR(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mRelPFIsoRhoFSR_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4mRho_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mSIP2D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mSIP2D_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mSIP3D(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mSIP3D_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mTkLayersWithMeasurement(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mToMETDPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mToMETDPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mTypeCode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mTypeCode_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3mVZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_CosThetaStar(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16m_t_CosThetaStar_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_DPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8m_t_DPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_DR(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_DR_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7m_t_Eta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Mass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8m_t_Mass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Mt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_Mt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZeta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9m_t_PZeta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZetaVis(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12m_t_PZetaVis_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7m_t_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_Pt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_SS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_SS_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_ToMETDPhi_Ty1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muGlbIsoVetoPt10(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt15IsoIdVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9muVetoPt5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5IsoIdVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_nTruePU(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7nTruePU_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_nvtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4nvtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMetEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7pfMetEt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMetPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8pfMetPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_jes_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_jes_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_mes_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_mes_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_tes_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_tes_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_ues_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_ues_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_processID(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9processID_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6pvChi2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvDX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4pvDX_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvDY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4pvDY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4pvDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvIsFake(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8pvIsFake_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvIsValid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9pvIsValid_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvNormChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10pvNormChi2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvRho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5pvRho_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3pvX_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3pvY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3pvZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvndof(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6pvndof_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_recoilDaught(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12recoilDaught_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_recoilWithMet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13recoilWithMet_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_rho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3rho_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_run(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3run_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12singleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11singleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15singleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleESingleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20singleESingleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleESingleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19singleESingleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleESingleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23singleESingleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg1Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17singleE_leg1Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg1Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16singleE_leg1Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg1Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20singleE_leg1Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg2Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17singleE_leg2Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg2Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16singleE_leg2Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg2Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20singleE_leg2Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13singleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12singleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16singleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuSingleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20singleMuSingleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuSingleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19singleMuSingleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuSingleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23singleMuSingleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18singleMu_leg1Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17singleMu_leg1Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21singleMu_leg1Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1_noisoGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24singleMu_leg1_noisoGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1_noisoPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23singleMu_leg1_noisoPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1_noisoPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27singleMu_leg1_noisoPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18singleMu_leg2Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17singleMu_leg2Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21singleMu_leg2Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2_noisoGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24singleMu_leg2_noisoGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2_noisoPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23singleMu_leg2_noisoPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2_noisoPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27singleMu_leg2_noisoPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAbsEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7tAbsEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronLooseMVA5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_25tAgainstElectronLooseMVA5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronMVA5category(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_28tAgainstElectronMVA5category_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronMVA5raw(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tAgainstElectronMVA5raw_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronMediumMVA5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronMediumMVA5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronTightMVA5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_25tAgainstElectronTightMVA5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronVLooseMVA5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronVLooseMVA5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronVTightMVA5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_26tAgainstElectronVTightMVA5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstMuonLoose3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18tAgainstMuonLoose3_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAgainstMuonTight3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18tAgainstMuonTight3_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByCombinedIsolationDeltaBetaCorrRaw3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_41tByCombinedIsolationDeltaBetaCorrRaw3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByIsolationMVA3newDMwLTraw(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27tByIsolationMVA3newDMwLTraw_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByIsolationMVA3oldDMwLTraw(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27tByIsolationMVA3oldDMwLTraw_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByLooseCombinedIsolationDeltaBetaCorr3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_43tByLooseCombinedIsolationDeltaBetaCorr3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByLooseIsolationMVA3newDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3newDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByLooseIsolationMVA3oldDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_29tByLooseIsolationMVA3oldDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByMediumCombinedIsolationDeltaBetaCorr3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_44tByMediumCombinedIsolationDeltaBetaCorr3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByMediumIsolationMVA3newDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3newDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByMediumIsolationMVA3oldDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_30tByMediumIsolationMVA3oldDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByTightCombinedIsolationDeltaBetaCorr3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_43tByTightCombinedIsolationDeltaBetaCorr3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByTightIsolationMVA3newDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3newDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByTightIsolationMVA3oldDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_29tByTightIsolationMVA3oldDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByVLooseIsolationMVA3newDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3newDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByVLooseIsolationMVA3oldDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_30tByVLooseIsolationMVA3oldDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByVTightIsolationMVA3newDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3newDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByVTightIsolationMVA3oldDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_30tByVTightIsolationMVA3oldDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByVVTightIsolationMVA3newDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3newDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tByVVTightIsolationMVA3oldDMwLT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_31tByVVTightIsolationMVA3oldDMwLT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7tCharge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tChargedIsoPtSum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tChargedIsoPtSum_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tDecayMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tDecayMode_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tDecayModeFinding(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17tDecayModeFinding_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tDecayModeFindingNewDMs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tDecayModeFindingNewDMs_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tElecOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tElecOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt10IdIsoVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_28tElectronPt10IdIsoVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt10IdVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_25tElectronPt10IdVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt15IdIsoVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_28tElectronPt15IdIsoVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt15IdVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_25tElectronPt15IdVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4tEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tGenDecayMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tGenDecayMode_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tGlobalMuonVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21tGlobalMuonVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8tJetArea_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8tJetBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaEtaMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiSpread(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetPFCISVBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tJetPFCISVBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetPartonFlavour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17tJetPartonFlavour_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetPhiPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6tJetPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLeadTrackPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tLeadTrackPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLowestMll(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tLowestMll_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5tMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8tMtToMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPFMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tMtToPFMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_Ty1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_jes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_jes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_mes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_mes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_tes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_tes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_ues(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_ues_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMuOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tMuOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMuonIdIsoStdVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tMuonIdIsoStdVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMuonIdIsoVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20tMuonIdIsoVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMuonIdVtxOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17tMuonIdVtxOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tNearestZMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tNearestZMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tNeutralIsoPtSum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tNeutralIsoPtSum_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPVDXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6tPVDXY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPVDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5tPVDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4tPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3tPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPuCorrPtSum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tPuCorrPtSum_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tRank(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5tRank_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tTNPId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6tTNPId_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tToMETDPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tToMETDPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3tVZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20EleLooseMuTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_26tauVetoPt20EleLooseMuTight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20EleTightMuLoose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_26tauVetoPt20EleTightMuLoose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20Loose3HitsNewDMVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_29tauVetoPt20Loose3HitsNewDMVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20Loose3HitsVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20TightMVALTNewDMVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_29tauVetoPt20TightMVALTNewDMVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20TightMVALTVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20TightMVALTVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tripleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tripleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tripleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11tripleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tripleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15tripleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tripleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tripleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tripleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tripleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tripleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tripleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13type1_pfMetEt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14type1_pfMetPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDeta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfDeta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDijetrap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11vbfDijetrap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDphi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfDphi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihj(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9vbfDphihj_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihjnomet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14vbfDphihjnomet_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfHrap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfHrap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVetoTight20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17vbfJetVetoTight20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVetoTight30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17vbfJetVetoTight30_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfMVA(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6vbfMVA_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfNJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfNJets_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfVispt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfVispt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfdijetpt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10vbfdijetpt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfditaupt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10vbfditaupt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfj1eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfj1eta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfj1pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfj1pt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfj2eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfj2eta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfj2pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfj2pt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_idx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3idx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_complained(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10complained_1__get__(o);
}

static int __pyx_setprop_9MuTauTree_9MuTauTree_complained(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9MuTauTree_9MuTauTree_10complained_3__set__(o, v);
  }
  else {
    return __pyx_pw_9MuTauTree_9MuTauTree_10complained_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9MuTauTree_MuTauTree[] = {
  {"where", (PyCFunction)__pyx_pw_9MuTauTree_9MuTauTree_6where, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9MuTauTree_MuTauTree[] = {
  {(char *)"entry", __pyx_getprop_9MuTauTree_9MuTauTree_entry, __pyx_setprop_9MuTauTree_9MuTauTree_entry, 0, 0},
  {(char *)"EmbPtWeight", __pyx_getprop_9MuTauTree_9MuTauTree_EmbPtWeight, 0, 0, 0},
  {(char *)"Eta", __pyx_getprop_9MuTauTree_9MuTauTree_Eta, 0, 0, 0},
  {(char *)"GenWeight", __pyx_getprop_9MuTauTree_9MuTauTree_GenWeight, 0, 0, 0},
  {(char *)"Ht", __pyx_getprop_9MuTauTree_9MuTauTree_Ht, 0, 0, 0},
  {(char *)"LT", __pyx_getprop_9MuTauTree_9MuTauTree_LT, 0, 0, 0},
  {(char *)"Mass", __pyx_getprop_9MuTauTree_9MuTauTree_Mass, 0, 0, 0},
  {(char *)"MassError", __pyx_getprop_9MuTauTree_9MuTauTree_MassError, 0, 0, 0},
  {(char *)"MassErrord1", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord1, 0, 0, 0},
  {(char *)"MassErrord2", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord2, 0, 0, 0},
  {(char *)"MassErrord3", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord3, 0, 0, 0},
  {(char *)"MassErrord4", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord4, 0, 0, 0},
  {(char *)"Mt", __pyx_getprop_9MuTauTree_9MuTauTree_Mt, 0, 0, 0},
  {(char *)"NUP", __pyx_getprop_9MuTauTree_9MuTauTree_NUP, 0, 0, 0},
  {(char *)"Phi", __pyx_getprop_9MuTauTree_9MuTauTree_Phi, 0, 0, 0},
  {(char *)"Pt", __pyx_getprop_9MuTauTree_9MuTauTree_Pt, 0, 0, 0},
  {(char *)"bjetCISVVeto20Loose", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto20Loose, 0, 0, 0},
  {(char *)"bjetCISVVeto20Medium", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto20Medium, 0, 0, 0},
  {(char *)"bjetCISVVeto20Tight", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto20Tight, 0, 0, 0},
  {(char *)"bjetCISVVeto30Loose", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto30Loose, 0, 0, 0},
  {(char *)"bjetCISVVeto30Medium", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto30Medium, 0, 0, 0},
  {(char *)"bjetCISVVeto30Tight", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCISVVeto30Tight, 0, 0, 0},
  {(char *)"charge", __pyx_getprop_9MuTauTree_9MuTauTree_charge, 0, 0, 0},
  {(char *)"doubleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEGroup, 0, 0, 0},
  {(char *)"doubleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEPass, 0, 0, 0},
  {(char *)"doubleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEPrescale, 0, 0, 0},
  {(char *)"doubleESingleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleESingleMuGroup, 0, 0, 0},
  {(char *)"doubleESingleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleESingleMuPass, 0, 0, 0},
  {(char *)"doubleESingleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleESingleMuPrescale, 0, 0, 0},
  {(char *)"doubleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuGroup, 0, 0, 0},
  {(char *)"doubleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPass, 0, 0, 0},
  {(char *)"doubleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPrescale, 0, 0, 0},
  {(char *)"doubleMuSingleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuSingleEGroup, 0, 0, 0},
  {(char *)"doubleMuSingleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuSingleEPass, 0, 0, 0},
  {(char *)"doubleMuSingleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuSingleEPrescale, 0, 0, 0},
  {(char *)"doubleTauGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleTauGroup, 0, 0, 0},
  {(char *)"doubleTauPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleTauPass, 0, 0, 0},
  {(char *)"doubleTauPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleTauPrescale, 0, 0, 0},
  {(char *)"eVetoMVAIso", __pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIso, 0, 0, 0},
  {(char *)"eVetoMVAIsoVtx", __pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIsoVtx, 0, 0, 0},
  {(char *)"evt", __pyx_getprop_9MuTauTree_9MuTauTree_evt, 0, 0, 0},
  {(char *)"isdata", __pyx_getprop_9MuTauTree_9MuTauTree_isdata, 0, 0, 0},
  {(char *)"jetVeto20", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto20, 0, 0, 0},
  {(char *)"jetVeto20_DR05", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto20_DR05, 0, 0, 0},
  {(char *)"jetVeto30", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto30, 0, 0, 0},
  {(char *)"jetVeto30_DR05", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto30_DR05, 0, 0, 0},
  {(char *)"jetVeto40", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto40, 0, 0, 0},
  {(char *)"jetVeto40_DR05", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto40_DR05, 0, 0, 0},
  {(char *)"lumi", __pyx_getprop_9MuTauTree_9MuTauTree_lumi, 0, 0, 0},
  {(char *)"mAbsEta", __pyx_getprop_9MuTauTree_9MuTauTree_mAbsEta, 0, 0, 0},
  {(char *)"mBestTrackType", __pyx_getprop_9MuTauTree_9MuTauTree_mBestTrackType, 0, 0, 0},
  {(char *)"mCharge", __pyx_getprop_9MuTauTree_9MuTauTree_mCharge, 0, 0, 0},
  {(char *)"mComesFromHiggs", __pyx_getprop_9MuTauTree_9MuTauTree_mComesFromHiggs, 0, 0, 0},
  {(char *)"mEffectiveArea2011", __pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2011, 0, 0, 0},
  {(char *)"mEffectiveArea2012", __pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2012, 0, 0, 0},
  {(char *)"mEta", __pyx_getprop_9MuTauTree_9MuTauTree_mEta, 0, 0, 0},
  {(char *)"mGenCharge", __pyx_getprop_9MuTauTree_9MuTauTree_mGenCharge, 0, 0, 0},
  {(char *)"mGenEnergy", __pyx_getprop_9MuTauTree_9MuTauTree_mGenEnergy, 0, 0, 0},
  {(char *)"mGenEta", __pyx_getprop_9MuTauTree_9MuTauTree_mGenEta, 0, 0, 0},
  {(char *)"mGenMotherPdgId", __pyx_getprop_9MuTauTree_9MuTauTree_mGenMotherPdgId, 0, 0, 0},
  {(char *)"mGenPdgId", __pyx_getprop_9MuTauTree_9MuTauTree_mGenPdgId, 0, 0, 0},
  {(char *)"mGenPhi", __pyx_getprop_9MuTauTree_9MuTauTree_mGenPhi, 0, 0, 0},
  {(char *)"mGenPt", __pyx_getprop_9MuTauTree_9MuTauTree_mGenPt, 0, 0, 0},
  {(char *)"mGenVZ", __pyx_getprop_9MuTauTree_9MuTauTree_mGenVZ, 0, 0, 0},
  {(char *)"mGenVtxPVMatch", __pyx_getprop_9MuTauTree_9MuTauTree_mGenVtxPVMatch, 0, 0, 0},
  {(char *)"mIP3D", __pyx_getprop_9MuTauTree_9MuTauTree_mIP3D, 0, 0, 0},
  {(char *)"mIP3DErr", __pyx_getprop_9MuTauTree_9MuTauTree_mIP3DErr, 0, 0, 0},
  {(char *)"mIsGlobal", __pyx_getprop_9MuTauTree_9MuTauTree_mIsGlobal, 0, 0, 0},
  {(char *)"mIsPFMuon", __pyx_getprop_9MuTauTree_9MuTauTree_mIsPFMuon, 0, 0, 0},
  {(char *)"mIsTracker", __pyx_getprop_9MuTauTree_9MuTauTree_mIsTracker, 0, 0, 0},
  {(char *)"mJetArea", __pyx_getprop_9MuTauTree_9MuTauTree_mJetArea, 0, 0, 0},
  {(char *)"mJetBtag", __pyx_getprop_9MuTauTree_9MuTauTree_mJetBtag, 0, 0, 0},
  {(char *)"mJetEtaEtaMoment", __pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaEtaMoment, 0, 0, 0},
  {(char *)"mJetEtaPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiMoment, 0, 0, 0},
  {(char *)"mJetEtaPhiSpread", __pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiSpread, 0, 0, 0},
  {(char *)"mJetPFCISVBtag", __pyx_getprop_9MuTauTree_9MuTauTree_mJetPFCISVBtag, 0, 0, 0},
  {(char *)"mJetPartonFlavour", __pyx_getprop_9MuTauTree_9MuTauTree_mJetPartonFlavour, 0, 0, 0},
  {(char *)"mJetPhiPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_mJetPhiPhiMoment, 0, 0, 0},
  {(char *)"mJetPt", __pyx_getprop_9MuTauTree_9MuTauTree_mJetPt, 0, 0, 0},
  {(char *)"mLowestMll", __pyx_getprop_9MuTauTree_9MuTauTree_mLowestMll, 0, 0, 0},
  {(char *)"mMass", __pyx_getprop_9MuTauTree_9MuTauTree_mMass, 0, 0, 0},
  {(char *)"mMatchedStations", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchedStations, 0, 0, 0},
  {(char *)"mMatchesDoubleESingleMu", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleESingleMu, 0, 0, 0},
  {(char *)"mMatchesDoubleMu", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleMu, 0, 0, 0},
  {(char *)"mMatchesDoubleMuSingleE", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleMuSingleE, 0, 0, 0},
  {(char *)"mMatchesSingleESingleMu", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleESingleMu, 0, 0, 0},
  {(char *)"mMatchesSingleMu", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu, 0, 0, 0},
  {(char *)"mMatchesSingleMuSingleE", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMuSingleE, 0, 0, 0},
  {(char *)"mMatchesSingleMu_leg1", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg1, 0, 0, 0},
  {(char *)"mMatchesSingleMu_leg1_noiso", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg1_noiso, 0, 0, 0},
  {(char *)"mMatchesSingleMu_leg2", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg2, 0, 0, 0},
  {(char *)"mMatchesSingleMu_leg2_noiso", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesSingleMu_leg2_noiso, 0, 0, 0},
  {(char *)"mMatchesTripleMu", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesTripleMu, 0, 0, 0},
  {(char *)"mMtToMET", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToMET, 0, 0, 0},
  {(char *)"mMtToPFMET", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPFMET, 0, 0, 0},
  {(char *)"mMtToPfMet_Ty1", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_Ty1, 0, 0, 0},
  {(char *)"mMtToPfMet_jes", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_jes, 0, 0, 0},
  {(char *)"mMtToPfMet_mes", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_mes, 0, 0, 0},
  {(char *)"mMtToPfMet_tes", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_tes, 0, 0, 0},
  {(char *)"mMtToPfMet_ues", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_ues, 0, 0, 0},
  {(char *)"mMuonHits", __pyx_getprop_9MuTauTree_9MuTauTree_mMuonHits, 0, 0, 0},
  {(char *)"mNearestZMass", __pyx_getprop_9MuTauTree_9MuTauTree_mNearestZMass, 0, 0, 0},
  {(char *)"mNormTrkChi2", __pyx_getprop_9MuTauTree_9MuTauTree_mNormTrkChi2, 0, 0, 0},
  {(char *)"mPFChargedIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFChargedIso, 0, 0, 0},
  {(char *)"mPFIDLoose", __pyx_getprop_9MuTauTree_9MuTauTree_mPFIDLoose, 0, 0, 0},
  {(char *)"mPFIDMedium", __pyx_getprop_9MuTauTree_9MuTauTree_mPFIDMedium, 0, 0, 0},
  {(char *)"mPFIDTight", __pyx_getprop_9MuTauTree_9MuTauTree_mPFIDTight, 0, 0, 0},
  {(char *)"mPFNeutralIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFNeutralIso, 0, 0, 0},
  {(char *)"mPFPUChargedIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFPUChargedIso, 0, 0, 0},
  {(char *)"mPFPhotonIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFPhotonIso, 0, 0, 0},
  {(char *)"mPVDXY", __pyx_getprop_9MuTauTree_9MuTauTree_mPVDXY, 0, 0, 0},
  {(char *)"mPVDZ", __pyx_getprop_9MuTauTree_9MuTauTree_mPVDZ, 0, 0, 0},
  {(char *)"mPhi", __pyx_getprop_9MuTauTree_9MuTauTree_mPhi, 0, 0, 0},
  {(char *)"mPixHits", __pyx_getprop_9MuTauTree_9MuTauTree_mPixHits, 0, 0, 0},
  {(char *)"mPt", __pyx_getprop_9MuTauTree_9MuTauTree_mPt, 0, 0, 0},
  {(char *)"mRank", __pyx_getprop_9MuTauTree_9MuTauTree_mRank, 0, 0, 0},
  {(char *)"mRelPFIsoDBDefault", __pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoDBDefault, 0, 0, 0},
  {(char *)"mRelPFIsoRho", __pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoRho, 0, 0, 0},
  {(char *)"mRelPFIsoRhoFSR", __pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoRhoFSR, 0, 0, 0},
  {(char *)"mRho", __pyx_getprop_9MuTauTree_9MuTauTree_mRho, 0, 0, 0},
  {(char *)"mSIP2D", __pyx_getprop_9MuTauTree_9MuTauTree_mSIP2D, 0, 0, 0},
  {(char *)"mSIP3D", __pyx_getprop_9MuTauTree_9MuTauTree_mSIP3D, 0, 0, 0},
  {(char *)"mTkLayersWithMeasurement", __pyx_getprop_9MuTauTree_9MuTauTree_mTkLayersWithMeasurement, 0, 0, 0},
  {(char *)"mToMETDPhi", __pyx_getprop_9MuTauTree_9MuTauTree_mToMETDPhi, 0, 0, 0},
  {(char *)"mTypeCode", __pyx_getprop_9MuTauTree_9MuTauTree_mTypeCode, 0, 0, 0},
  {(char *)"mVZ", __pyx_getprop_9MuTauTree_9MuTauTree_mVZ, 0, 0, 0},
  {(char *)"m_t_CosThetaStar", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_CosThetaStar, 0, 0, 0},
  {(char *)"m_t_DPhi", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_DPhi, 0, 0, 0},
  {(char *)"m_t_DR", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_DR, 0, 0, 0},
  {(char *)"m_t_Eta", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Eta, 0, 0, 0},
  {(char *)"m_t_Mass", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Mass, 0, 0, 0},
  {(char *)"m_t_Mt", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Mt, 0, 0, 0},
  {(char *)"m_t_PZeta", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZeta, 0, 0, 0},
  {(char *)"m_t_PZetaVis", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZetaVis, 0, 0, 0},
  {(char *)"m_t_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Phi, 0, 0, 0},
  {(char *)"m_t_Pt", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Pt, 0, 0, 0},
  {(char *)"m_t_SS", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_SS, 0, 0, 0},
  {(char *)"m_t_ToMETDPhi_Ty1", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_ToMETDPhi_Ty1, 0, 0, 0},
  {(char *)"muGlbIsoVetoPt10", __pyx_getprop_9MuTauTree_9MuTauTree_muGlbIsoVetoPt10, 0, 0, 0},
  {(char *)"muVetoPt15IsoIdVtx", __pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt15IsoIdVtx, 0, 0, 0},
  {(char *)"muVetoPt5", __pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5, 0, 0, 0},
  {(char *)"muVetoPt5IsoIdVtx", __pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5IsoIdVtx, 0, 0, 0},
  {(char *)"nTruePU", __pyx_getprop_9MuTauTree_9MuTauTree_nTruePU, 0, 0, 0},
  {(char *)"nvtx", __pyx_getprop_9MuTauTree_9MuTauTree_nvtx, 0, 0, 0},
  {(char *)"pfMetEt", __pyx_getprop_9MuTauTree_9MuTauTree_pfMetEt, 0, 0, 0},
  {(char *)"pfMetPhi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMetPhi, 0, 0, 0},
  {(char *)"pfMet_jes_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Et, 0, 0, 0},
  {(char *)"pfMet_jes_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Phi, 0, 0, 0},
  {(char *)"pfMet_mes_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Et, 0, 0, 0},
  {(char *)"pfMet_mes_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Phi, 0, 0, 0},
  {(char *)"pfMet_tes_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Et, 0, 0, 0},
  {(char *)"pfMet_tes_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Phi, 0, 0, 0},
  {(char *)"pfMet_ues_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Et, 0, 0, 0},
  {(char *)"pfMet_ues_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Phi, 0, 0, 0},
  {(char *)"processID", __pyx_getprop_9MuTauTree_9MuTauTree_processID, 0, 0, 0},
  {(char *)"pvChi2", __pyx_getprop_9MuTauTree_9MuTauTree_pvChi2, 0, 0, 0},
  {(char *)"pvDX", __pyx_getprop_9MuTauTree_9MuTauTree_pvDX, 0, 0, 0},
  {(char *)"pvDY", __pyx_getprop_9MuTauTree_9MuTauTree_pvDY, 0, 0, 0},
  {(char *)"pvDZ", __pyx_getprop_9MuTauTree_9MuTauTree_pvDZ, 0, 0, 0},
  {(char *)"pvIsFake", __pyx_getprop_9MuTauTree_9MuTauTree_pvIsFake, 0, 0, 0},
  {(char *)"pvIsValid", __pyx_getprop_9MuTauTree_9MuTauTree_pvIsValid, 0, 0, 0},
  {(char *)"pvNormChi2", __pyx_getprop_9MuTauTree_9MuTauTree_pvNormChi2, 0, 0, 0},
  {(char *)"pvRho", __pyx_getprop_9MuTauTree_9MuTauTree_pvRho, 0, 0, 0},
  {(char *)"pvX", __pyx_getprop_9MuTauTree_9MuTauTree_pvX, 0, 0, 0},
  {(char *)"pvY", __pyx_getprop_9MuTauTree_9MuTauTree_pvY, 0, 0, 0},
  {(char *)"pvZ", __pyx_getprop_9MuTauTree_9MuTauTree_pvZ, 0, 0, 0},
  {(char *)"pvndof", __pyx_getprop_9MuTauTree_9MuTauTree_pvndof, 0, 0, 0},
  {(char *)"recoilDaught", __pyx_getprop_9MuTauTree_9MuTauTree_recoilDaught, 0, 0, 0},
  {(char *)"recoilWithMet", __pyx_getprop_9MuTauTree_9MuTauTree_recoilWithMet, 0, 0, 0},
  {(char *)"rho", __pyx_getprop_9MuTauTree_9MuTauTree_rho, 0, 0, 0},
  {(char *)"run", __pyx_getprop_9MuTauTree_9MuTauTree_run, 0, 0, 0},
  {(char *)"singleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleEGroup, 0, 0, 0},
  {(char *)"singleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPass, 0, 0, 0},
  {(char *)"singleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPrescale, 0, 0, 0},
  {(char *)"singleESingleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleESingleMuGroup, 0, 0, 0},
  {(char *)"singleESingleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleESingleMuPass, 0, 0, 0},
  {(char *)"singleESingleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleESingleMuPrescale, 0, 0, 0},
  {(char *)"singleE_leg1Group", __pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg1Group, 0, 0, 0},
  {(char *)"singleE_leg1Pass", __pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg1Pass, 0, 0, 0},
  {(char *)"singleE_leg1Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg1Prescale, 0, 0, 0},
  {(char *)"singleE_leg2Group", __pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg2Group, 0, 0, 0},
  {(char *)"singleE_leg2Pass", __pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg2Pass, 0, 0, 0},
  {(char *)"singleE_leg2Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleE_leg2Prescale, 0, 0, 0},
  {(char *)"singleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuGroup, 0, 0, 0},
  {(char *)"singleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuPass, 0, 0, 0},
  {(char *)"singleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuPrescale, 0, 0, 0},
  {(char *)"singleMuSingleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuSingleEGroup, 0, 0, 0},
  {(char *)"singleMuSingleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuSingleEPass, 0, 0, 0},
  {(char *)"singleMuSingleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuSingleEPrescale, 0, 0, 0},
  {(char *)"singleMu_leg1Group", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1Group, 0, 0, 0},
  {(char *)"singleMu_leg1Pass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1Pass, 0, 0, 0},
  {(char *)"singleMu_leg1Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1Prescale, 0, 0, 0},
  {(char *)"singleMu_leg1_noisoGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1_noisoGroup, 0, 0, 0},
  {(char *)"singleMu_leg1_noisoPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1_noisoPass, 0, 0, 0},
  {(char *)"singleMu_leg1_noisoPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg1_noisoPrescale, 0, 0, 0},
  {(char *)"singleMu_leg2Group", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2Group, 0, 0, 0},
  {(char *)"singleMu_leg2Pass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2Pass, 0, 0, 0},
  {(char *)"singleMu_leg2Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2Prescale, 0, 0, 0},
  {(char *)"singleMu_leg2_noisoGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2_noisoGroup, 0, 0, 0},
  {(char *)"singleMu_leg2_noisoPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2_noisoPass, 0, 0, 0},
  {(char *)"singleMu_leg2_noisoPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMu_leg2_noisoPrescale, 0, 0, 0},
  {(char *)"tAbsEta", __pyx_getprop_9MuTauTree_9MuTauTree_tAbsEta, 0, 0, 0},
  {(char *)"tAgainstElectronLooseMVA5", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronLooseMVA5, 0, 0, 0},
  {(char *)"tAgainstElectronMVA5category", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronMVA5category, 0, 0, 0},
  {(char *)"tAgainstElectronMVA5raw", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronMVA5raw, 0, 0, 0},
  {(char *)"tAgainstElectronMediumMVA5", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronMediumMVA5, 0, 0, 0},
  {(char *)"tAgainstElectronTightMVA5", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronTightMVA5, 0, 0, 0},
  {(char *)"tAgainstElectronVLooseMVA5", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronVLooseMVA5, 0, 0, 0},
  {(char *)"tAgainstElectronVTightMVA5", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstElectronVTightMVA5, 0, 0, 0},
  {(char *)"tAgainstMuonLoose3", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstMuonLoose3, 0, 0, 0},
  {(char *)"tAgainstMuonTight3", __pyx_getprop_9MuTauTree_9MuTauTree_tAgainstMuonTight3, 0, 0, 0},
  {(char *)"tByCombinedIsolationDeltaBetaCorrRaw3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tByCombinedIsolationDeltaBetaCorrRaw3Hits, 0, 0, 0},
  {(char *)"tByIsolationMVA3newDMwLTraw", __pyx_getprop_9MuTauTree_9MuTauTree_tByIsolationMVA3newDMwLTraw, 0, 0, 0},
  {(char *)"tByIsolationMVA3oldDMwLTraw", __pyx_getprop_9MuTauTree_9MuTauTree_tByIsolationMVA3oldDMwLTraw, 0, 0, 0},
  {(char *)"tByLooseCombinedIsolationDeltaBetaCorr3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tByLooseCombinedIsolationDeltaBetaCorr3Hits, 0, 0, 0},
  {(char *)"tByLooseIsolationMVA3newDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByLooseIsolationMVA3newDMwLT, 0, 0, 0},
  {(char *)"tByLooseIsolationMVA3oldDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByLooseIsolationMVA3oldDMwLT, 0, 0, 0},
  {(char *)"tByMediumCombinedIsolationDeltaBetaCorr3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tByMediumCombinedIsolationDeltaBetaCorr3Hits, 0, 0, 0},
  {(char *)"tByMediumIsolationMVA3newDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByMediumIsolationMVA3newDMwLT, 0, 0, 0},
  {(char *)"tByMediumIsolationMVA3oldDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByMediumIsolationMVA3oldDMwLT, 0, 0, 0},
  {(char *)"tByTightCombinedIsolationDeltaBetaCorr3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tByTightCombinedIsolationDeltaBetaCorr3Hits, 0, 0, 0},
  {(char *)"tByTightIsolationMVA3newDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByTightIsolationMVA3newDMwLT, 0, 0, 0},
  {(char *)"tByTightIsolationMVA3oldDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByTightIsolationMVA3oldDMwLT, 0, 0, 0},
  {(char *)"tByVLooseIsolationMVA3newDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByVLooseIsolationMVA3newDMwLT, 0, 0, 0},
  {(char *)"tByVLooseIsolationMVA3oldDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByVLooseIsolationMVA3oldDMwLT, 0, 0, 0},
  {(char *)"tByVTightIsolationMVA3newDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByVTightIsolationMVA3newDMwLT, 0, 0, 0},
  {(char *)"tByVTightIsolationMVA3oldDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByVTightIsolationMVA3oldDMwLT, 0, 0, 0},
  {(char *)"tByVVTightIsolationMVA3newDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByVVTightIsolationMVA3newDMwLT, 0, 0, 0},
  {(char *)"tByVVTightIsolationMVA3oldDMwLT", __pyx_getprop_9MuTauTree_9MuTauTree_tByVVTightIsolationMVA3oldDMwLT, 0, 0, 0},
  {(char *)"tCharge", __pyx_getprop_9MuTauTree_9MuTauTree_tCharge, 0, 0, 0},
  {(char *)"tChargedIsoPtSum", __pyx_getprop_9MuTauTree_9MuTauTree_tChargedIsoPtSum, 0, 0, 0},
  {(char *)"tDecayMode", __pyx_getprop_9MuTauTree_9MuTauTree_tDecayMode, 0, 0, 0},
  {(char *)"tDecayModeFinding", __pyx_getprop_9MuTauTree_9MuTauTree_tDecayModeFinding, 0, 0, 0},
  {(char *)"tDecayModeFindingNewDMs", __pyx_getprop_9MuTauTree_9MuTauTree_tDecayModeFindingNewDMs, 0, 0, 0},
  {(char *)"tElecOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tElecOverlap, 0, 0, 0},
  {(char *)"tElectronPt10IdIsoVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt10IdIsoVtxOverlap, 0, 0, 0},
  {(char *)"tElectronPt10IdVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt10IdVtxOverlap, 0, 0, 0},
  {(char *)"tElectronPt15IdIsoVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt15IdIsoVtxOverlap, 0, 0, 0},
  {(char *)"tElectronPt15IdVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tElectronPt15IdVtxOverlap, 0, 0, 0},
  {(char *)"tEta", __pyx_getprop_9MuTauTree_9MuTauTree_tEta, 0, 0, 0},
  {(char *)"tGenDecayMode", __pyx_getprop_9MuTauTree_9MuTauTree_tGenDecayMode, 0, 0, 0},
  {(char *)"tGlobalMuonVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tGlobalMuonVtxOverlap, 0, 0, 0},
  {(char *)"tJetArea", __pyx_getprop_9MuTauTree_9MuTauTree_tJetArea, 0, 0, 0},
  {(char *)"tJetBtag", __pyx_getprop_9MuTauTree_9MuTauTree_tJetBtag, 0, 0, 0},
  {(char *)"tJetEtaEtaMoment", __pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaEtaMoment, 0, 0, 0},
  {(char *)"tJetEtaPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiMoment, 0, 0, 0},
  {(char *)"tJetEtaPhiSpread", __pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiSpread, 0, 0, 0},
  {(char *)"tJetPFCISVBtag", __pyx_getprop_9MuTauTree_9MuTauTree_tJetPFCISVBtag, 0, 0, 0},
  {(char *)"tJetPartonFlavour", __pyx_getprop_9MuTauTree_9MuTauTree_tJetPartonFlavour, 0, 0, 0},
  {(char *)"tJetPhiPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_tJetPhiPhiMoment, 0, 0, 0},
  {(char *)"tJetPt", __pyx_getprop_9MuTauTree_9MuTauTree_tJetPt, 0, 0, 0},
  {(char *)"tLeadTrackPt", __pyx_getprop_9MuTauTree_9MuTauTree_tLeadTrackPt, 0, 0, 0},
  {(char *)"tLowestMll", __pyx_getprop_9MuTauTree_9MuTauTree_tLowestMll, 0, 0, 0},
  {(char *)"tMass", __pyx_getprop_9MuTauTree_9MuTauTree_tMass, 0, 0, 0},
  {(char *)"tMtToMET", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToMET, 0, 0, 0},
  {(char *)"tMtToPFMET", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPFMET, 0, 0, 0},
  {(char *)"tMtToPfMet_Ty1", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_Ty1, 0, 0, 0},
  {(char *)"tMtToPfMet_jes", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_jes, 0, 0, 0},
  {(char *)"tMtToPfMet_mes", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_mes, 0, 0, 0},
  {(char *)"tMtToPfMet_tes", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_tes, 0, 0, 0},
  {(char *)"tMtToPfMet_ues", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_ues, 0, 0, 0},
  {(char *)"tMuOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tMuOverlap, 0, 0, 0},
  {(char *)"tMuonIdIsoStdVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tMuonIdIsoStdVtxOverlap, 0, 0, 0},
  {(char *)"tMuonIdIsoVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tMuonIdIsoVtxOverlap, 0, 0, 0},
  {(char *)"tMuonIdVtxOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tMuonIdVtxOverlap, 0, 0, 0},
  {(char *)"tNearestZMass", __pyx_getprop_9MuTauTree_9MuTauTree_tNearestZMass, 0, 0, 0},
  {(char *)"tNeutralIsoPtSum", __pyx_getprop_9MuTauTree_9MuTauTree_tNeutralIsoPtSum, 0, 0, 0},
  {(char *)"tPVDXY", __pyx_getprop_9MuTauTree_9MuTauTree_tPVDXY, 0, 0, 0},
  {(char *)"tPVDZ", __pyx_getprop_9MuTauTree_9MuTauTree_tPVDZ, 0, 0, 0},
  {(char *)"tPhi", __pyx_getprop_9MuTauTree_9MuTauTree_tPhi, 0, 0, 0},
  {(char *)"tPt", __pyx_getprop_9MuTauTree_9MuTauTree_tPt, 0, 0, 0},
  {(char *)"tPuCorrPtSum", __pyx_getprop_9MuTauTree_9MuTauTree_tPuCorrPtSum, 0, 0, 0},
  {(char *)"tRank", __pyx_getprop_9MuTauTree_9MuTauTree_tRank, 0, 0, 0},
  {(char *)"tTNPId", __pyx_getprop_9MuTauTree_9MuTauTree_tTNPId, 0, 0, 0},
  {(char *)"tToMETDPhi", __pyx_getprop_9MuTauTree_9MuTauTree_tToMETDPhi, 0, 0, 0},
  {(char *)"tVZ", __pyx_getprop_9MuTauTree_9MuTauTree_tVZ, 0, 0, 0},
  {(char *)"tauVetoPt20EleLooseMuTight", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20EleLooseMuTight, 0, 0, 0},
  {(char *)"tauVetoPt20EleTightMuLoose", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20EleTightMuLoose, 0, 0, 0},
  {(char *)"tauVetoPt20Loose3HitsNewDMVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20Loose3HitsNewDMVtx, 0, 0, 0},
  {(char *)"tauVetoPt20Loose3HitsVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20Loose3HitsVtx, 0, 0, 0},
  {(char *)"tauVetoPt20TightMVALTNewDMVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20TightMVALTNewDMVtx, 0, 0, 0},
  {(char *)"tauVetoPt20TightMVALTVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20TightMVALTVtx, 0, 0, 0},
  {(char *)"tripleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_tripleEGroup, 0, 0, 0},
  {(char *)"tripleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_tripleEPass, 0, 0, 0},
  {(char *)"tripleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_tripleEPrescale, 0, 0, 0},
  {(char *)"tripleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_tripleMuGroup, 0, 0, 0},
  {(char *)"tripleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_tripleMuPass, 0, 0, 0},
  {(char *)"tripleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_tripleMuPrescale, 0, 0, 0},
  {(char *)"type1_pfMetEt", __pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetEt, 0, 0, 0},
  {(char *)"type1_pfMetPhi", __pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetPhi, 0, 0, 0},
  {(char *)"vbfDeta", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDeta, 0, 0, 0},
  {(char *)"vbfDijetrap", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDijetrap, 0, 0, 0},
  {(char *)"vbfDphi", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDphi, 0, 0, 0},
  {(char *)"vbfDphihj", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihj, 0, 0, 0},
  {(char *)"vbfDphihjnomet", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihjnomet, 0, 0, 0},
  {(char *)"vbfHrap", __pyx_getprop_9MuTauTree_9MuTauTree_vbfHrap, 0, 0, 0},
  {(char *)"vbfJetVeto20", __pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto20, 0, 0, 0},
  {(char *)"vbfJetVeto30", __pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto30, 0, 0, 0},
  {(char *)"vbfJetVetoTight20", __pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVetoTight20, 0, 0, 0},
  {(char *)"vbfJetVetoTight30", __pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVetoTight30, 0, 0, 0},
  {(char *)"vbfMVA", __pyx_getprop_9MuTauTree_9MuTauTree_vbfMVA, 0, 0, 0},
  {(char *)"vbfMass", __pyx_getprop_9MuTauTree_9MuTauTree_vbfMass, 0, 0, 0},
  {(char *)"vbfNJets", __pyx_getprop_9MuTauTree_9MuTauTree_vbfNJets, 0, 0, 0},
  {(char *)"vbfVispt", __pyx_getprop_9MuTauTree_9MuTauTree_vbfVispt, 0, 0, 0},
  {(char *)"vbfdijetpt", __pyx_getprop_9MuTauTree_9MuTauTree_vbfdijetpt, 0, 0, 0},
  {(char *)"vbfditaupt", __pyx_getprop_9MuTauTree_9MuTauTree_vbfditaupt, 0, 0, 0},
  {(char *)"vbfj1eta", __pyx_getprop_9MuTauTree_9MuTauTree_vbfj1eta, 0, 0, 0},
  {(char *)"vbfj1pt", __pyx_getprop_9MuTauTree_9MuTauTree_vbfj1pt, 0, 0, 0},
  {(char *)"vbfj2eta", __pyx_getprop_9MuTauTree_9MuTauTree_vbfj2eta, 0, 0, 0},
  {(char *)"vbfj2pt", __pyx_getprop_9MuTauTree_9MuTauTree_vbfj2pt, 0, 0, 0},
  {(char *)"idx", __pyx_getprop_9MuTauTree_9MuTauTree_idx, 0, 0, 0},
  {(char *)"complained", __pyx_getprop_9MuTauTree_9MuTauTree_complained, __pyx_setprop_9MuTauTree_9MuTauTree_complained, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9MuTauTree_MuTauTree = {
  PyVarObject_HEAD_INIT(0, 0)
  "MuTauTree.MuTauTree", /*tp_name*/
  sizeof(struct __pyx_obj_9MuTauTree_MuTauTree), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9MuTauTree_MuTauTree, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9MuTauTree_MuTauTree, /*tp_traverse*/
  __pyx_tp_clear_9MuTauTree_MuTauTree, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_9MuTauTree_9MuTauTree_3__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9MuTauTree_MuTauTree, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9MuTauTree_MuTauTree, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9MuTauTree_MuTauTree, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *__pyx_freelist_9MuTauTree___pyx_scope_struct____iter__[8];
static int __pyx_freecount_9MuTauTree___pyx_scope_struct____iter__ = 0;

static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__)))) {
    o = (PyObject*)__pyx_freelist_9MuTauTree___pyx_scope_struct____iter__[--__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__];
    memset(o, 0, sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct____iter__(PyObject *o) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__)))) {
    __pyx_freelist_9MuTauTree___pyx_scope_struct____iter__[__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__++] = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_9MuTauTree___pyx_scope_struct____iter__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9MuTauTree___pyx_scope_struct____iter__(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_9MuTauTree_MuTauTree *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_9MuTauTree___pyx_scope_struct____iter__ = {
  PyVarObject_HEAD_INIT(0, 0)
  "MuTauTree.__pyx_scope_struct____iter__", /*tp_name*/
  sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct____iter__, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9MuTauTree___pyx_scope_struct____iter__, /*tp_traverse*/
  __pyx_tp_clear_9MuTauTree___pyx_scope_struct____iter__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *__pyx_freelist_9MuTauTree___pyx_scope_struct_1_where[8];
static int __pyx_freecount_9MuTauTree___pyx_scope_struct_1_where = 0;

static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where)))) {
    o = (PyObject*)__pyx_freelist_9MuTauTree___pyx_scope_struct_1_where[--__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where];
    memset(o, 0, sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct_1_where(PyObject *o) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_filter);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where)))) {
    __pyx_freelist_9MuTauTree___pyx_scope_struct_1_where[__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where++] = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_9MuTauTree___pyx_scope_struct_1_where(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o;
  if (p->__pyx_v_filter) {
    e = (*v)(p->__pyx_v_filter, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9MuTauTree___pyx_scope_struct_1_where(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o;
  tmp = ((PyObject*)p->__pyx_v_filter);
  p->__pyx_v_filter = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_9MuTauTree_MuTauTree *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_9MuTauTree___pyx_scope_struct_1_where = {
  PyVarObject_HEAD_INIT(0, 0)
  "MuTauTree.__pyx_scope_struct_1_where", /*tp_name*/
  sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct_1_where, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9MuTauTree___pyx_scope_struct_1_where, /*tp_traverse*/
  __pyx_tp_clear_9MuTauTree___pyx_scope_struct_1_where, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "MuTauTree",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_n_s_AsCObject, __pyx_k_AsCObject, sizeof(__pyx_k_AsCObject), 0, 0, 1, 1},
  {&__pyx_n_s_MuTauTree, __pyx_k_MuTauTree, sizeof(__pyx_k_MuTauTree), 0, 0, 1, 1},
  {&__pyx_kp_s_MuTauTree_Expected_branch_EmbPtW, __pyx_k_MuTauTree_Expected_branch_EmbPtW, sizeof(__pyx_k_MuTauTree_Expected_branch_EmbPtW), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_Eta_do, __pyx_k_MuTauTree_Expected_branch_Eta_do, sizeof(__pyx_k_MuTauTree_Expected_branch_Eta_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_GenWei, __pyx_k_MuTauTree_Expected_branch_GenWei, sizeof(__pyx_k_MuTauTree_Expected_branch_GenWei), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_Ht_doe, __pyx_k_MuTauTree_Expected_branch_Ht_doe, sizeof(__pyx_k_MuTauTree_Expected_branch_Ht_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_LT_doe, __pyx_k_MuTauTree_Expected_branch_LT_doe, sizeof(__pyx_k_MuTauTree_Expected_branch_LT_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_MassEr, __pyx_k_MuTauTree_Expected_branch_MassEr, sizeof(__pyx_k_MuTauTree_Expected_branch_MassEr), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_MassEr_2, __pyx_k_MuTauTree_Expected_branch_MassEr_2, sizeof(__pyx_k_MuTauTree_Expected_branch_MassEr_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_MassEr_3, __pyx_k_MuTauTree_Expected_branch_MassEr_3, sizeof(__pyx_k_MuTauTree_Expected_branch_MassEr_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_MassEr_4, __pyx_k_MuTauTree_Expected_branch_MassEr_4, sizeof(__pyx_k_MuTauTree_Expected_branch_MassEr_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_MassEr_5, __pyx_k_MuTauTree_Expected_branch_MassEr_5, sizeof(__pyx_k_MuTauTree_Expected_branch_MassEr_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_Mass_d, __pyx_k_MuTauTree_Expected_branch_Mass_d, sizeof(__pyx_k_MuTauTree_Expected_branch_Mass_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_Mt_doe, __pyx_k_MuTauTree_Expected_branch_Mt_doe, sizeof(__pyx_k_MuTauTree_Expected_branch_Mt_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_NUP_do, __pyx_k_MuTauTree_Expected_branch_NUP_do, sizeof(__pyx_k_MuTauTree_Expected_branch_NUP_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_Phi_do, __pyx_k_MuTauTree_Expected_branch_Phi_do, sizeof(__pyx_k_MuTauTree_Expected_branch_Phi_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_Pt_doe, __pyx_k_MuTauTree_Expected_branch_Pt_doe, sizeof(__pyx_k_MuTauTree_Expected_branch_Pt_doe), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_bjetCI, __pyx_k_MuTauTree_Expected_branch_bjetCI, sizeof(__pyx_k_MuTauTree_Expected_branch_bjetCI), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_2, __pyx_k_MuTauTree_Expected_branch_bjetCI_2, sizeof(__pyx_k_MuTauTree_Expected_branch_bjetCI_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_3, __pyx_k_MuTauTree_Expected_branch_bjetCI_3, sizeof(__pyx_k_MuTauTree_Expected_branch_bjetCI_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_4, __pyx_k_MuTauTree_Expected_branch_bjetCI_4, sizeof(__pyx_k_MuTauTree_Expected_branch_bjetCI_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_5, __pyx_k_MuTauTree_Expected_branch_bjetCI_5, sizeof(__pyx_k_MuTauTree_Expected_branch_bjetCI_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_bjetCI_6, __pyx_k_MuTauTree_Expected_branch_bjetCI_6, sizeof(__pyx_k_MuTauTree_Expected_branch_bjetCI_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_charge, __pyx_k_MuTauTree_Expected_branch_charge, sizeof(__pyx_k_MuTauTree_Expected_branch_charge), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double, __pyx_k_MuTauTree_Expected_branch_double, sizeof(__pyx_k_MuTauTree_Expected_branch_double), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_10, __pyx_k_MuTauTree_Expected_branch_double_10, sizeof(__pyx_k_MuTauTree_Expected_branch_double_10), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_11, __pyx_k_MuTauTree_Expected_branch_double_11, sizeof(__pyx_k_MuTauTree_Expected_branch_double_11), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_12, __pyx_k_MuTauTree_Expected_branch_double_12, sizeof(__pyx_k_MuTauTree_Expected_branch_double_12), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_13, __pyx_k_MuTauTree_Expected_branch_double_13, sizeof(__pyx_k_MuTauTree_Expected_branch_double_13), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_14, __pyx_k_MuTauTree_Expected_branch_double_14, sizeof(__pyx_k_MuTauTree_Expected_branch_double_14), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_15, __pyx_k_MuTauTree_Expected_branch_double_15, sizeof(__pyx_k_MuTauTree_Expected_branch_double_15), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_2, __pyx_k_MuTauTree_Expected_branch_double_2, sizeof(__pyx_k_MuTauTree_Expected_branch_double_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_3, __pyx_k_MuTauTree_Expected_branch_double_3, sizeof(__pyx_k_MuTauTree_Expected_branch_double_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_4, __pyx_k_MuTauTree_Expected_branch_double_4, sizeof(__pyx_k_MuTauTree_Expected_branch_double_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_5, __pyx_k_MuTauTree_Expected_branch_double_5, sizeof(__pyx_k_MuTauTree_Expected_branch_double_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_6, __pyx_k_MuTauTree_Expected_branch_double_6, sizeof(__pyx_k_MuTauTree_Expected_branch_double_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_7, __pyx_k_MuTauTree_Expected_branch_double_7, sizeof(__pyx_k_MuTauTree_Expected_branch_double_7), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_8, __pyx_k_MuTauTree_Expected_branch_double_8, sizeof(__pyx_k_MuTauTree_Expected_branch_double_8), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_double_9, __pyx_k_MuTauTree_Expected_branch_double_9, sizeof(__pyx_k_MuTauTree_Expected_branch_double_9), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_eVetoM, __pyx_k_MuTauTree_Expected_branch_eVetoM, sizeof(__pyx_k_MuTauTree_Expected_branch_eVetoM), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_eVetoM_2, __pyx_k_MuTauTree_Expected_branch_eVetoM_2, sizeof(__pyx_k_MuTauTree_Expected_branch_eVetoM_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_evt_do, __pyx_k_MuTauTree_Expected_branch_evt_do, sizeof(__pyx_k_MuTauTree_Expected_branch_evt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_idx_do, __pyx_k_MuTauTree_Expected_branch_idx_do, sizeof(__pyx_k_MuTauTree_Expected_branch_idx_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_isdata, __pyx_k_MuTauTree_Expected_branch_isdata, sizeof(__pyx_k_MuTauTree_Expected_branch_isdata), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_jetVet, __pyx_k_MuTauTree_Expected_branch_jetVet, sizeof(__pyx_k_MuTauTree_Expected_branch_jetVet), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_jetVet_2, __pyx_k_MuTauTree_Expected_branch_jetVet_2, sizeof(__pyx_k_MuTauTree_Expected_branch_jetVet_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_jetVet_3, __pyx_k_MuTauTree_Expected_branch_jetVet_3, sizeof(__pyx_k_MuTauTree_Expected_branch_jetVet_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_jetVet_4, __pyx_k_MuTauTree_Expected_branch_jetVet_4, sizeof(__pyx_k_MuTauTree_Expected_branch_jetVet_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_jetVet_5, __pyx_k_MuTauTree_Expected_branch_jetVet_5, sizeof(__pyx_k_MuTauTree_Expected_branch_jetVet_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_jetVet_6, __pyx_k_MuTauTree_Expected_branch_jetVet_6, sizeof(__pyx_k_MuTauTree_Expected_branch_jetVet_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_lumi_d, __pyx_k_MuTauTree_Expected_branch_lumi_d, sizeof(__pyx_k_MuTauTree_Expected_branch_lumi_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mAbsEt, __pyx_k_MuTauTree_Expected_branch_mAbsEt, sizeof(__pyx_k_MuTauTree_Expected_branch_mAbsEt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mBestT, __pyx_k_MuTauTree_Expected_branch_mBestT, sizeof(__pyx_k_MuTauTree_Expected_branch_mBestT), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mCharg, __pyx_k_MuTauTree_Expected_branch_mCharg, sizeof(__pyx_k_MuTauTree_Expected_branch_mCharg), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mComes, __pyx_k_MuTauTree_Expected_branch_mComes, sizeof(__pyx_k_MuTauTree_Expected_branch_mComes), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mEffec, __pyx_k_MuTauTree_Expected_branch_mEffec, sizeof(__pyx_k_MuTauTree_Expected_branch_mEffec), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mEffec_2, __pyx_k_MuTauTree_Expected_branch_mEffec_2, sizeof(__pyx_k_MuTauTree_Expected_branch_mEffec_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mEta_d, __pyx_k_MuTauTree_Expected_branch_mEta_d, sizeof(__pyx_k_MuTauTree_Expected_branch_mEta_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenCh, __pyx_k_MuTauTree_Expected_branch_mGenCh, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenCh), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenEn, __pyx_k_MuTauTree_Expected_branch_mGenEn, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenEn), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenEt, __pyx_k_MuTauTree_Expected_branch_mGenEt, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenEt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenMo, __pyx_k_MuTauTree_Expected_branch_mGenMo, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenMo), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenPd, __pyx_k_MuTauTree_Expected_branch_mGenPd, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenPd), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenPh, __pyx_k_MuTauTree_Expected_branch_mGenPh, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenPh), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenPt, __pyx_k_MuTauTree_Expected_branch_mGenPt, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenPt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenVZ, __pyx_k_MuTauTree_Expected_branch_mGenVZ, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenVZ), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mGenVt, __pyx_k_MuTauTree_Expected_branch_mGenVt, sizeof(__pyx_k_MuTauTree_Expected_branch_mGenVt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mIP3D, __pyx_k_MuTauTree_Expected_branch_mIP3D, sizeof(__pyx_k_MuTauTree_Expected_branch_mIP3D), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mIP3DE, __pyx_k_MuTauTree_Expected_branch_mIP3DE, sizeof(__pyx_k_MuTauTree_Expected_branch_mIP3DE), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mIsGlo, __pyx_k_MuTauTree_Expected_branch_mIsGlo, sizeof(__pyx_k_MuTauTree_Expected_branch_mIsGlo), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mIsPFM, __pyx_k_MuTauTree_Expected_branch_mIsPFM, sizeof(__pyx_k_MuTauTree_Expected_branch_mIsPFM), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mIsTra, __pyx_k_MuTauTree_Expected_branch_mIsTra, sizeof(__pyx_k_MuTauTree_Expected_branch_mIsTra), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetAr, __pyx_k_MuTauTree_Expected_branch_mJetAr, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetAr), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetBt, __pyx_k_MuTauTree_Expected_branch_mJetBt, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetBt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetEt, __pyx_k_MuTauTree_Expected_branch_mJetEt, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetEt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_2, __pyx_k_MuTauTree_Expected_branch_mJetEt_2, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetEt_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetEt_3, __pyx_k_MuTauTree_Expected_branch_mJetEt_3, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetEt_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetPF, __pyx_k_MuTauTree_Expected_branch_mJetPF, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetPF), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetPa, __pyx_k_MuTauTree_Expected_branch_mJetPa, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetPa), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetPh, __pyx_k_MuTauTree_Expected_branch_mJetPh, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetPh), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mJetPt, __pyx_k_MuTauTree_Expected_branch_mJetPt, sizeof(__pyx_k_MuTauTree_Expected_branch_mJetPt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mLowes, __pyx_k_MuTauTree_Expected_branch_mLowes, sizeof(__pyx_k_MuTauTree_Expected_branch_mLowes), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMass, __pyx_k_MuTauTree_Expected_branch_mMass, sizeof(__pyx_k_MuTauTree_Expected_branch_mMass), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch, __pyx_k_MuTauTree_Expected_branch_mMatch, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_10, __pyx_k_MuTauTree_Expected_branch_mMatch_10, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_10), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_11, __pyx_k_MuTauTree_Expected_branch_mMatch_11, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_11), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_12, __pyx_k_MuTauTree_Expected_branch_mMatch_12, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_12), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_2, __pyx_k_MuTauTree_Expected_branch_mMatch_2, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_3, __pyx_k_MuTauTree_Expected_branch_mMatch_3, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_4, __pyx_k_MuTauTree_Expected_branch_mMatch_4, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_5, __pyx_k_MuTauTree_Expected_branch_mMatch_5, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_6, __pyx_k_MuTauTree_Expected_branch_mMatch_6, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_7, __pyx_k_MuTauTree_Expected_branch_mMatch_7, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_7), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_8, __pyx_k_MuTauTree_Expected_branch_mMatch_8, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_8), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMatch_9, __pyx_k_MuTauTree_Expected_branch_mMatch_9, sizeof(__pyx_k_MuTauTree_Expected_branch_mMatch_9), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToM, __pyx_k_MuTauTree_Expected_branch_mMtToM, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToM), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToP, __pyx_k_MuTauTree_Expected_branch_mMtToP, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToP), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_2, __pyx_k_MuTauTree_Expected_branch_mMtToP_2, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToP_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_3, __pyx_k_MuTauTree_Expected_branch_mMtToP_3, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToP_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_4, __pyx_k_MuTauTree_Expected_branch_mMtToP_4, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToP_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_5, __pyx_k_MuTauTree_Expected_branch_mMtToP_5, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToP_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMtToP_6, __pyx_k_MuTauTree_Expected_branch_mMtToP_6, sizeof(__pyx_k_MuTauTree_Expected_branch_mMtToP_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mMuonH, __pyx_k_MuTauTree_Expected_branch_mMuonH, sizeof(__pyx_k_MuTauTree_Expected_branch_mMuonH), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mNeare, __pyx_k_MuTauTree_Expected_branch_mNeare, sizeof(__pyx_k_MuTauTree_Expected_branch_mNeare), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mNormT, __pyx_k_MuTauTree_Expected_branch_mNormT, sizeof(__pyx_k_MuTauTree_Expected_branch_mNormT), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFCha, __pyx_k_MuTauTree_Expected_branch_mPFCha, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFCha), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFIDL, __pyx_k_MuTauTree_Expected_branch_mPFIDL, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFIDL), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFIDM, __pyx_k_MuTauTree_Expected_branch_mPFIDM, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFIDM), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFIDT, __pyx_k_MuTauTree_Expected_branch_mPFIDT, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFIDT), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFNeu, __pyx_k_MuTauTree_Expected_branch_mPFNeu, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFNeu), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFPUC, __pyx_k_MuTauTree_Expected_branch_mPFPUC, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFPUC), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPFPho, __pyx_k_MuTauTree_Expected_branch_mPFPho, sizeof(__pyx_k_MuTauTree_Expected_branch_mPFPho), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPVDXY, __pyx_k_MuTauTree_Expected_branch_mPVDXY, sizeof(__pyx_k_MuTauTree_Expected_branch_mPVDXY), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPVDZ, __pyx_k_MuTauTree_Expected_branch_mPVDZ, sizeof(__pyx_k_MuTauTree_Expected_branch_mPVDZ), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPhi_d, __pyx_k_MuTauTree_Expected_branch_mPhi_d, sizeof(__pyx_k_MuTauTree_Expected_branch_mPhi_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPixHi, __pyx_k_MuTauTree_Expected_branch_mPixHi, sizeof(__pyx_k_MuTauTree_Expected_branch_mPixHi), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mPt_do, __pyx_k_MuTauTree_Expected_branch_mPt_do, sizeof(__pyx_k_MuTauTree_Expected_branch_mPt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mRank, __pyx_k_MuTauTree_Expected_branch_mRank, sizeof(__pyx_k_MuTauTree_Expected_branch_mRank), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mRelPF, __pyx_k_MuTauTree_Expected_branch_mRelPF, sizeof(__pyx_k_MuTauTree_Expected_branch_mRelPF), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_2, __pyx_k_MuTauTree_Expected_branch_mRelPF_2, sizeof(__pyx_k_MuTauTree_Expected_branch_mRelPF_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mRelPF_3, __pyx_k_MuTauTree_Expected_branch_mRelPF_3, sizeof(__pyx_k_MuTauTree_Expected_branch_mRelPF_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mRho_d, __pyx_k_MuTauTree_Expected_branch_mRho_d, sizeof(__pyx_k_MuTauTree_Expected_branch_mRho_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mSIP2D, __pyx_k_MuTauTree_Expected_branch_mSIP2D, sizeof(__pyx_k_MuTauTree_Expected_branch_mSIP2D), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mSIP3D, __pyx_k_MuTauTree_Expected_branch_mSIP3D, sizeof(__pyx_k_MuTauTree_Expected_branch_mSIP3D), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mTkLay, __pyx_k_MuTauTree_Expected_branch_mTkLay, sizeof(__pyx_k_MuTauTree_Expected_branch_mTkLay), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mToMET, __pyx_k_MuTauTree_Expected_branch_mToMET, sizeof(__pyx_k_MuTauTree_Expected_branch_mToMET), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mTypeC, __pyx_k_MuTauTree_Expected_branch_mTypeC, sizeof(__pyx_k_MuTauTree_Expected_branch_mTypeC), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_mVZ_do, __pyx_k_MuTauTree_Expected_branch_mVZ_do, sizeof(__pyx_k_MuTauTree_Expected_branch_mVZ_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_Co, __pyx_k_MuTauTree_Expected_branch_m_t_Co, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_Co), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_DP, __pyx_k_MuTauTree_Expected_branch_m_t_DP, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_DP), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_DR, __pyx_k_MuTauTree_Expected_branch_m_t_DR, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_DR), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_Et, __pyx_k_MuTauTree_Expected_branch_m_t_Et, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_Et), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ma, __pyx_k_MuTauTree_Expected_branch_m_t_Ma, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_Ma), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_Mt, __pyx_k_MuTauTree_Expected_branch_m_t_Mt, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_Mt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ, __pyx_k_MuTauTree_Expected_branch_m_t_PZ, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_PZ), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_PZ_2, __pyx_k_MuTauTree_Expected_branch_m_t_PZ_2, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_PZ_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_Ph, __pyx_k_MuTauTree_Expected_branch_m_t_Ph, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_Ph), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_Pt, __pyx_k_MuTauTree_Expected_branch_m_t_Pt, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_Pt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_SS, __pyx_k_MuTauTree_Expected_branch_m_t_SS, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_SS), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_m_t_To, __pyx_k_MuTauTree_Expected_branch_m_t_To, sizeof(__pyx_k_MuTauTree_Expected_branch_m_t_To), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_muGlbI, __pyx_k_MuTauTree_Expected_branch_muGlbI, sizeof(__pyx_k_MuTauTree_Expected_branch_muGlbI), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_muVeto, __pyx_k_MuTauTree_Expected_branch_muVeto, sizeof(__pyx_k_MuTauTree_Expected_branch_muVeto), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_muVeto_2, __pyx_k_MuTauTree_Expected_branch_muVeto_2, sizeof(__pyx_k_MuTauTree_Expected_branch_muVeto_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_muVeto_3, __pyx_k_MuTauTree_Expected_branch_muVeto_3, sizeof(__pyx_k_MuTauTree_Expected_branch_muVeto_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_nTrueP, __pyx_k_MuTauTree_Expected_branch_nTrueP, sizeof(__pyx_k_MuTauTree_Expected_branch_nTrueP), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_nvtx_d, __pyx_k_MuTauTree_Expected_branch_nvtx_d, sizeof(__pyx_k_MuTauTree_Expected_branch_nvtx_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet, __pyx_k_MuTauTree_Expected_branch_pfMet, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMetE, __pyx_k_MuTauTree_Expected_branch_pfMetE, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMetE), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMetP, __pyx_k_MuTauTree_Expected_branch_pfMetP, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMetP), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_2, __pyx_k_MuTauTree_Expected_branch_pfMet_2, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_3, __pyx_k_MuTauTree_Expected_branch_pfMet_3, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_4, __pyx_k_MuTauTree_Expected_branch_pfMet_4, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_5, __pyx_k_MuTauTree_Expected_branch_pfMet_5, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_6, __pyx_k_MuTauTree_Expected_branch_pfMet_6, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_7, __pyx_k_MuTauTree_Expected_branch_pfMet_7, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_7), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pfMet_8, __pyx_k_MuTauTree_Expected_branch_pfMet_8, sizeof(__pyx_k_MuTauTree_Expected_branch_pfMet_8), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_proces, __pyx_k_MuTauTree_Expected_branch_proces, sizeof(__pyx_k_MuTauTree_Expected_branch_proces), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvChi2, __pyx_k_MuTauTree_Expected_branch_pvChi2, sizeof(__pyx_k_MuTauTree_Expected_branch_pvChi2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvDX_d, __pyx_k_MuTauTree_Expected_branch_pvDX_d, sizeof(__pyx_k_MuTauTree_Expected_branch_pvDX_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvDY_d, __pyx_k_MuTauTree_Expected_branch_pvDY_d, sizeof(__pyx_k_MuTauTree_Expected_branch_pvDY_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvDZ_d, __pyx_k_MuTauTree_Expected_branch_pvDZ_d, sizeof(__pyx_k_MuTauTree_Expected_branch_pvDZ_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvIsFa, __pyx_k_MuTauTree_Expected_branch_pvIsFa, sizeof(__pyx_k_MuTauTree_Expected_branch_pvIsFa), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvIsVa, __pyx_k_MuTauTree_Expected_branch_pvIsVa, sizeof(__pyx_k_MuTauTree_Expected_branch_pvIsVa), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvNorm, __pyx_k_MuTauTree_Expected_branch_pvNorm, sizeof(__pyx_k_MuTauTree_Expected_branch_pvNorm), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvRho, __pyx_k_MuTauTree_Expected_branch_pvRho, sizeof(__pyx_k_MuTauTree_Expected_branch_pvRho), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvX_do, __pyx_k_MuTauTree_Expected_branch_pvX_do, sizeof(__pyx_k_MuTauTree_Expected_branch_pvX_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvY_do, __pyx_k_MuTauTree_Expected_branch_pvY_do, sizeof(__pyx_k_MuTauTree_Expected_branch_pvY_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvZ_do, __pyx_k_MuTauTree_Expected_branch_pvZ_do, sizeof(__pyx_k_MuTauTree_Expected_branch_pvZ_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_pvndof, __pyx_k_MuTauTree_Expected_branch_pvndof, sizeof(__pyx_k_MuTauTree_Expected_branch_pvndof), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_recoil, __pyx_k_MuTauTree_Expected_branch_recoil, sizeof(__pyx_k_MuTauTree_Expected_branch_recoil), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_recoil_2, __pyx_k_MuTauTree_Expected_branch_recoil_2, sizeof(__pyx_k_MuTauTree_Expected_branch_recoil_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_rho_do, __pyx_k_MuTauTree_Expected_branch_rho_do, sizeof(__pyx_k_MuTauTree_Expected_branch_rho_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_run_do, __pyx_k_MuTauTree_Expected_branch_run_do, sizeof(__pyx_k_MuTauTree_Expected_branch_run_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single, __pyx_k_MuTauTree_Expected_branch_single, sizeof(__pyx_k_MuTauTree_Expected_branch_single), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_10, __pyx_k_MuTauTree_Expected_branch_single_10, sizeof(__pyx_k_MuTauTree_Expected_branch_single_10), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_11, __pyx_k_MuTauTree_Expected_branch_single_11, sizeof(__pyx_k_MuTauTree_Expected_branch_single_11), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_12, __pyx_k_MuTauTree_Expected_branch_single_12, sizeof(__pyx_k_MuTauTree_Expected_branch_single_12), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_13, __pyx_k_MuTauTree_Expected_branch_single_13, sizeof(__pyx_k_MuTauTree_Expected_branch_single_13), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_14, __pyx_k_MuTauTree_Expected_branch_single_14, sizeof(__pyx_k_MuTauTree_Expected_branch_single_14), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_15, __pyx_k_MuTauTree_Expected_branch_single_15, sizeof(__pyx_k_MuTauTree_Expected_branch_single_15), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_16, __pyx_k_MuTauTree_Expected_branch_single_16, sizeof(__pyx_k_MuTauTree_Expected_branch_single_16), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_17, __pyx_k_MuTauTree_Expected_branch_single_17, sizeof(__pyx_k_MuTauTree_Expected_branch_single_17), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_18, __pyx_k_MuTauTree_Expected_branch_single_18, sizeof(__pyx_k_MuTauTree_Expected_branch_single_18), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_19, __pyx_k_MuTauTree_Expected_branch_single_19, sizeof(__pyx_k_MuTauTree_Expected_branch_single_19), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_2, __pyx_k_MuTauTree_Expected_branch_single_2, sizeof(__pyx_k_MuTauTree_Expected_branch_single_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_20, __pyx_k_MuTauTree_Expected_branch_single_20, sizeof(__pyx_k_MuTauTree_Expected_branch_single_20), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_21, __pyx_k_MuTauTree_Expected_branch_single_21, sizeof(__pyx_k_MuTauTree_Expected_branch_single_21), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_22, __pyx_k_MuTauTree_Expected_branch_single_22, sizeof(__pyx_k_MuTauTree_Expected_branch_single_22), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_23, __pyx_k_MuTauTree_Expected_branch_single_23, sizeof(__pyx_k_MuTauTree_Expected_branch_single_23), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_24, __pyx_k_MuTauTree_Expected_branch_single_24, sizeof(__pyx_k_MuTauTree_Expected_branch_single_24), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_25, __pyx_k_MuTauTree_Expected_branch_single_25, sizeof(__pyx_k_MuTauTree_Expected_branch_single_25), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_26, __pyx_k_MuTauTree_Expected_branch_single_26, sizeof(__pyx_k_MuTauTree_Expected_branch_single_26), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_27, __pyx_k_MuTauTree_Expected_branch_single_27, sizeof(__pyx_k_MuTauTree_Expected_branch_single_27), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_28, __pyx_k_MuTauTree_Expected_branch_single_28, sizeof(__pyx_k_MuTauTree_Expected_branch_single_28), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_29, __pyx_k_MuTauTree_Expected_branch_single_29, sizeof(__pyx_k_MuTauTree_Expected_branch_single_29), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_3, __pyx_k_MuTauTree_Expected_branch_single_3, sizeof(__pyx_k_MuTauTree_Expected_branch_single_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_30, __pyx_k_MuTauTree_Expected_branch_single_30, sizeof(__pyx_k_MuTauTree_Expected_branch_single_30), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_4, __pyx_k_MuTauTree_Expected_branch_single_4, sizeof(__pyx_k_MuTauTree_Expected_branch_single_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_5, __pyx_k_MuTauTree_Expected_branch_single_5, sizeof(__pyx_k_MuTauTree_Expected_branch_single_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_6, __pyx_k_MuTauTree_Expected_branch_single_6, sizeof(__pyx_k_MuTauTree_Expected_branch_single_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_7, __pyx_k_MuTauTree_Expected_branch_single_7, sizeof(__pyx_k_MuTauTree_Expected_branch_single_7), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_8, __pyx_k_MuTauTree_Expected_branch_single_8, sizeof(__pyx_k_MuTauTree_Expected_branch_single_8), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_single_9, __pyx_k_MuTauTree_Expected_branch_single_9, sizeof(__pyx_k_MuTauTree_Expected_branch_single_9), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAbsEt, __pyx_k_MuTauTree_Expected_branch_tAbsEt, sizeof(__pyx_k_MuTauTree_Expected_branch_tAbsEt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain, __pyx_k_MuTauTree_Expected_branch_tAgain, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_2, __pyx_k_MuTauTree_Expected_branch_tAgain_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_3, __pyx_k_MuTauTree_Expected_branch_tAgain_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_4, __pyx_k_MuTauTree_Expected_branch_tAgain_4, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_5, __pyx_k_MuTauTree_Expected_branch_tAgain_5, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_6, __pyx_k_MuTauTree_Expected_branch_tAgain_6, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_7, __pyx_k_MuTauTree_Expected_branch_tAgain_7, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_7), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_8, __pyx_k_MuTauTree_Expected_branch_tAgain_8, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_8), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tAgain_9, __pyx_k_MuTauTree_Expected_branch_tAgain_9, sizeof(__pyx_k_MuTauTree_Expected_branch_tAgain_9), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByCom, __pyx_k_MuTauTree_Expected_branch_tByCom, sizeof(__pyx_k_MuTauTree_Expected_branch_tByCom), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByIso, __pyx_k_MuTauTree_Expected_branch_tByIso, sizeof(__pyx_k_MuTauTree_Expected_branch_tByIso), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByIso_2, __pyx_k_MuTauTree_Expected_branch_tByIso_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByIso_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByLoo, __pyx_k_MuTauTree_Expected_branch_tByLoo, sizeof(__pyx_k_MuTauTree_Expected_branch_tByLoo), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_2, __pyx_k_MuTauTree_Expected_branch_tByLoo_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByLoo_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByLoo_3, __pyx_k_MuTauTree_Expected_branch_tByLoo_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tByLoo_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByMed, __pyx_k_MuTauTree_Expected_branch_tByMed, sizeof(__pyx_k_MuTauTree_Expected_branch_tByMed), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByMed_2, __pyx_k_MuTauTree_Expected_branch_tByMed_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByMed_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByMed_3, __pyx_k_MuTauTree_Expected_branch_tByMed_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tByMed_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByTig, __pyx_k_MuTauTree_Expected_branch_tByTig, sizeof(__pyx_k_MuTauTree_Expected_branch_tByTig), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByTig_2, __pyx_k_MuTauTree_Expected_branch_tByTig_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByTig_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByTig_3, __pyx_k_MuTauTree_Expected_branch_tByTig_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tByTig_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByVLo, __pyx_k_MuTauTree_Expected_branch_tByVLo, sizeof(__pyx_k_MuTauTree_Expected_branch_tByVLo), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByVLo_2, __pyx_k_MuTauTree_Expected_branch_tByVLo_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByVLo_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByVTi, __pyx_k_MuTauTree_Expected_branch_tByVTi, sizeof(__pyx_k_MuTauTree_Expected_branch_tByVTi), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByVTi_2, __pyx_k_MuTauTree_Expected_branch_tByVTi_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByVTi_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByVVT, __pyx_k_MuTauTree_Expected_branch_tByVVT, sizeof(__pyx_k_MuTauTree_Expected_branch_tByVVT), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tByVVT_2, __pyx_k_MuTauTree_Expected_branch_tByVVT_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tByVVT_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tCharg, __pyx_k_MuTauTree_Expected_branch_tCharg, sizeof(__pyx_k_MuTauTree_Expected_branch_tCharg), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tCharg_2, __pyx_k_MuTauTree_Expected_branch_tCharg_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tCharg_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tDecay, __pyx_k_MuTauTree_Expected_branch_tDecay, sizeof(__pyx_k_MuTauTree_Expected_branch_tDecay), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tDecay_2, __pyx_k_MuTauTree_Expected_branch_tDecay_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tDecay_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tDecay_3, __pyx_k_MuTauTree_Expected_branch_tDecay_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tDecay_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tElecO, __pyx_k_MuTauTree_Expected_branch_tElecO, sizeof(__pyx_k_MuTauTree_Expected_branch_tElecO), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tElect, __pyx_k_MuTauTree_Expected_branch_tElect, sizeof(__pyx_k_MuTauTree_Expected_branch_tElect), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tElect_2, __pyx_k_MuTauTree_Expected_branch_tElect_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tElect_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tElect_3, __pyx_k_MuTauTree_Expected_branch_tElect_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tElect_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tElect_4, __pyx_k_MuTauTree_Expected_branch_tElect_4, sizeof(__pyx_k_MuTauTree_Expected_branch_tElect_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tEta_d, __pyx_k_MuTauTree_Expected_branch_tEta_d, sizeof(__pyx_k_MuTauTree_Expected_branch_tEta_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tGenDe, __pyx_k_MuTauTree_Expected_branch_tGenDe, sizeof(__pyx_k_MuTauTree_Expected_branch_tGenDe), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tGloba, __pyx_k_MuTauTree_Expected_branch_tGloba, sizeof(__pyx_k_MuTauTree_Expected_branch_tGloba), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetAr, __pyx_k_MuTauTree_Expected_branch_tJetAr, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetAr), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetBt, __pyx_k_MuTauTree_Expected_branch_tJetBt, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetBt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetEt, __pyx_k_MuTauTree_Expected_branch_tJetEt, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetEt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_2, __pyx_k_MuTauTree_Expected_branch_tJetEt_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetEt_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetEt_3, __pyx_k_MuTauTree_Expected_branch_tJetEt_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetEt_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetPF, __pyx_k_MuTauTree_Expected_branch_tJetPF, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetPF), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetPa, __pyx_k_MuTauTree_Expected_branch_tJetPa, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetPa), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetPh, __pyx_k_MuTauTree_Expected_branch_tJetPh, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetPh), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tJetPt, __pyx_k_MuTauTree_Expected_branch_tJetPt, sizeof(__pyx_k_MuTauTree_Expected_branch_tJetPt), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tLeadT, __pyx_k_MuTauTree_Expected_branch_tLeadT, sizeof(__pyx_k_MuTauTree_Expected_branch_tLeadT), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tLowes, __pyx_k_MuTauTree_Expected_branch_tLowes, sizeof(__pyx_k_MuTauTree_Expected_branch_tLowes), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMass, __pyx_k_MuTauTree_Expected_branch_tMass, sizeof(__pyx_k_MuTauTree_Expected_branch_tMass), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToM, __pyx_k_MuTauTree_Expected_branch_tMtToM, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToM), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToP, __pyx_k_MuTauTree_Expected_branch_tMtToP, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToP), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_2, __pyx_k_MuTauTree_Expected_branch_tMtToP_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToP_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_3, __pyx_k_MuTauTree_Expected_branch_tMtToP_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToP_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_4, __pyx_k_MuTauTree_Expected_branch_tMtToP_4, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToP_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_5, __pyx_k_MuTauTree_Expected_branch_tMtToP_5, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToP_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMtToP_6, __pyx_k_MuTauTree_Expected_branch_tMtToP_6, sizeof(__pyx_k_MuTauTree_Expected_branch_tMtToP_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMuOve, __pyx_k_MuTauTree_Expected_branch_tMuOve, sizeof(__pyx_k_MuTauTree_Expected_branch_tMuOve), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMuonI, __pyx_k_MuTauTree_Expected_branch_tMuonI, sizeof(__pyx_k_MuTauTree_Expected_branch_tMuonI), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_2, __pyx_k_MuTauTree_Expected_branch_tMuonI_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tMuonI_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tMuonI_3, __pyx_k_MuTauTree_Expected_branch_tMuonI_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tMuonI_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tNeare, __pyx_k_MuTauTree_Expected_branch_tNeare, sizeof(__pyx_k_MuTauTree_Expected_branch_tNeare), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tNeutr, __pyx_k_MuTauTree_Expected_branch_tNeutr, sizeof(__pyx_k_MuTauTree_Expected_branch_tNeutr), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tPVDXY, __pyx_k_MuTauTree_Expected_branch_tPVDXY, sizeof(__pyx_k_MuTauTree_Expected_branch_tPVDXY), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tPVDZ, __pyx_k_MuTauTree_Expected_branch_tPVDZ, sizeof(__pyx_k_MuTauTree_Expected_branch_tPVDZ), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tPhi_d, __pyx_k_MuTauTree_Expected_branch_tPhi_d, sizeof(__pyx_k_MuTauTree_Expected_branch_tPhi_d), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tPt_do, __pyx_k_MuTauTree_Expected_branch_tPt_do, sizeof(__pyx_k_MuTauTree_Expected_branch_tPt_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tPuCor, __pyx_k_MuTauTree_Expected_branch_tPuCor, sizeof(__pyx_k_MuTauTree_Expected_branch_tPuCor), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tRank, __pyx_k_MuTauTree_Expected_branch_tRank, sizeof(__pyx_k_MuTauTree_Expected_branch_tRank), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tTNPId, __pyx_k_MuTauTree_Expected_branch_tTNPId, sizeof(__pyx_k_MuTauTree_Expected_branch_tTNPId), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tToMET, __pyx_k_MuTauTree_Expected_branch_tToMET, sizeof(__pyx_k_MuTauTree_Expected_branch_tToMET), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tVZ_do, __pyx_k_MuTauTree_Expected_branch_tVZ_do, sizeof(__pyx_k_MuTauTree_Expected_branch_tVZ_do), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tauVet, __pyx_k_MuTauTree_Expected_branch_tauVet, sizeof(__pyx_k_MuTauTree_Expected_branch_tauVet), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tauVet_2, __pyx_k_MuTauTree_Expected_branch_tauVet_2, sizeof(__pyx_k_MuTauTree_Expected_branch_tauVet_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tauVet_3, __pyx_k_MuTauTree_Expected_branch_tauVet_3, sizeof(__pyx_k_MuTauTree_Expected_branch_tauVet_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tauVet_4, __pyx_k_MuTauTree_Expected_branch_tauVet_4, sizeof(__pyx_k_MuTauTree_Expected_branch_tauVet_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tauVet_5, __pyx_k_MuTauTree_Expected_branch_tauVet_5, sizeof(__pyx_k_MuTauTree_Expected_branch_tauVet_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_tauVet_6, __pyx_k_MuTauTree_Expected_branch_tauVet_6, sizeof(__pyx_k_MuTauTree_Expected_branch_tauVet_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_triple, __pyx_k_MuTauTree_Expected_branch_triple, sizeof(__pyx_k_MuTauTree_Expected_branch_triple), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_triple_2, __pyx_k_MuTauTree_Expected_branch_triple_2, sizeof(__pyx_k_MuTauTree_Expected_branch_triple_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_triple_3, __pyx_k_MuTauTree_Expected_branch_triple_3, sizeof(__pyx_k_MuTauTree_Expected_branch_triple_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_triple_4, __pyx_k_MuTauTree_Expected_branch_triple_4, sizeof(__pyx_k_MuTauTree_Expected_branch_triple_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_triple_5, __pyx_k_MuTauTree_Expected_branch_triple_5, sizeof(__pyx_k_MuTauTree_Expected_branch_triple_5), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_triple_6, __pyx_k_MuTauTree_Expected_branch_triple_6, sizeof(__pyx_k_MuTauTree_Expected_branch_triple_6), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_type1, __pyx_k_MuTauTree_Expected_branch_type1, sizeof(__pyx_k_MuTauTree_Expected_branch_type1), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_type1_2, __pyx_k_MuTauTree_Expected_branch_type1_2, sizeof(__pyx_k_MuTauTree_Expected_branch_type1_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfDet, __pyx_k_MuTauTree_Expected_branch_vbfDet, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfDet), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfDij, __pyx_k_MuTauTree_Expected_branch_vbfDij, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfDij), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfDph, __pyx_k_MuTauTree_Expected_branch_vbfDph, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfDph), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_2, __pyx_k_MuTauTree_Expected_branch_vbfDph_2, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfDph_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfDph_3, __pyx_k_MuTauTree_Expected_branch_vbfDph_3, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfDph_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfHra, __pyx_k_MuTauTree_Expected_branch_vbfHra, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfHra), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfJet, __pyx_k_MuTauTree_Expected_branch_vbfJet, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfJet), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_2, __pyx_k_MuTauTree_Expected_branch_vbfJet_2, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfJet_2), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_3, __pyx_k_MuTauTree_Expected_branch_vbfJet_3, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfJet_3), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfJet_4, __pyx_k_MuTauTree_Expected_branch_vbfJet_4, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfJet_4), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfMVA, __pyx_k_MuTauTree_Expected_branch_vbfMVA, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfMVA), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfMas, __pyx_k_MuTauTree_Expected_branch_vbfMas, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfMas), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfNJe, __pyx_k_MuTauTree_Expected_branch_vbfNJe, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfNJe), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfVis, __pyx_k_MuTauTree_Expected_branch_vbfVis, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfVis), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfdij, __pyx_k_MuTauTree_Expected_branch_vbfdij, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfdij), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfdit, __pyx_k_MuTauTree_Expected_branch_vbfdit, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfdit), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfj1e, __pyx_k_MuTauTree_Expected_branch_vbfj1e, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfj1e), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfj1p, __pyx_k_MuTauTree_Expected_branch_vbfj1p, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfj1p), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfj2e, __pyx_k_MuTauTree_Expected_branch_vbfj2e, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfj2e), 0, 0, 1, 0},
  {&__pyx_kp_s_MuTauTree_Expected_branch_vbfj2p, __pyx_k_MuTauTree_Expected_branch_vbfj2p, sizeof(__pyx_k_MuTauTree_Expected_branch_vbfj2p), 0, 0, 1, 0},
  {&__pyx_n_s_MuTauTree___iter, __pyx_k_MuTauTree___iter, sizeof(__pyx_k_MuTauTree___iter), 0, 0, 1, 1},
  {&__pyx_n_s_MuTauTree_where, __pyx_k_MuTauTree_where, sizeof(__pyx_k_MuTauTree_where), 0, 0, 1, 1},
  {&__pyx_n_s_ROOT, __pyx_k_ROOT, sizeof(__pyx_k_ROOT), 0, 0, 1, 1},
  {&__pyx_n_s_Warning, __pyx_k_Warning, sizeof(__pyx_k_Warning), 0, 0, 1, 1},
  {&__pyx_kp_s_afs_hep_wisc_edu_cms_aglevine_F, __pyx_k_afs_hep_wisc_edu_cms_aglevine_F, sizeof(__pyx_k_afs_hep_wisc_edu_cms_aglevine_F), 0, 0, 1, 0},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_category, __pyx_k_category, sizeof(__pyx_k_category), 0, 0, 1, 1},
  {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {&__pyx_n_s_formatwarning, __pyx_k_formatwarning, sizeof(__pyx_k_formatwarning), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_iter, __pyx_k_iter, sizeof(__pyx_k_iter), 0, 0, 1, 1},
  {&__pyx_n_s_line, __pyx_k_line, sizeof(__pyx_k_line), 0, 0, 1, 1},
  {&__pyx_n_s_lineno, __pyx_k_lineno, sizeof(__pyx_k_lineno), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_message, __pyx_k_message, sizeof(__pyx_k_message), 0, 0, 1, 1},
  {&__pyx_n_s_my_warning_format, __pyx_k_my_warning_format, sizeof(__pyx_k_my_warning_format), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_kp_s_s_s, __pyx_k_s_s, sizeof(__pyx_k_s_s), 0, 0, 1, 0},
  {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
  {&__pyx_n_s_ttree, __pyx_k_ttree, sizeof(__pyx_k_ttree), 0, 0, 1, 1},
  {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
  {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
  {&__pyx_n_s_where, __pyx_k_where, sizeof(__pyx_k_where), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_Warning = __Pyx_GetBuiltinName(__pyx_n_s_Warning); if (!__pyx_builtin_Warning) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */
  __pyx_tuple__2 = PyTuple_Pack(5, __pyx_n_s_message, __pyx_n_s_category, __pyx_n_s_filename, __pyx_n_s_lineno, __pyx_n_s_line); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);
  __pyx_codeobj__3 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__2, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_afs_hep_wisc_edu_cms_aglevine_F, __pyx_n_s_my_warning_format, 38, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initMuTauTree(void); /*proto*/
PyMODINIT_FUNC initMuTauTree(void)
#else
PyMODINIT_FUNC PyInit_MuTauTree(void); /*proto*/
PyMODINIT_FUNC PyInit_MuTauTree(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_MuTauTree(void)", 0);
  if (__Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("MuTauTree", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_MuTauTree) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "MuTauTree")) {
      if (unlikely(PyDict_SetItemString(modules, "MuTauTree", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_9MuTauTree_MuTauTree = &__pyx_vtable_9MuTauTree_MuTauTree;
  __pyx_vtable_9MuTauTree_MuTauTree.load_entry = (PyObject *(*)(struct __pyx_obj_9MuTauTree_MuTauTree *, long))__pyx_f_9MuTauTree_9MuTauTree_load_entry;
  __pyx_vtable_9MuTauTree_MuTauTree.setup_branches = (PyObject *(*)(struct __pyx_obj_9MuTauTree_MuTauTree *, TTree *))__pyx_f_9MuTauTree_9MuTauTree_setup_branches;
  if (PyType_Ready(&__pyx_type_9MuTauTree_MuTauTree) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9MuTauTree_MuTauTree.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_9MuTauTree_MuTauTree.tp_dict, __pyx_vtabptr_9MuTauTree_MuTauTree) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "MuTauTree", (PyObject *)&__pyx_type_9MuTauTree_MuTauTree) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9MuTauTree_MuTauTree = &__pyx_type_9MuTauTree_MuTauTree;
  if (PyType_Ready(&__pyx_type_9MuTauTree___pyx_scope_struct____iter__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9MuTauTree___pyx_scope_struct____iter__.tp_print = 0;
  __pyx_ptype_9MuTauTree___pyx_scope_struct____iter__ = &__pyx_type_9MuTauTree___pyx_scope_struct____iter__;
  if (PyType_Ready(&__pyx_type_9MuTauTree___pyx_scope_struct_1_where) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_9MuTauTree___pyx_scope_struct_1_where.tp_print = 0;
  __pyx_ptype_9MuTauTree___pyx_scope_struct_1_where = &__pyx_type_9MuTauTree___pyx_scope_struct_1_where;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif

  /* "MuTauTree.pyx":37
 * 
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings             # <<<<<<<<<<<<<<
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_warnings, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9MuTauTree_1my_warning_format, NULL, __pyx_n_s_MuTauTree); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_my_warning_format, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":40
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format             # <<<<<<<<<<<<<<
 * 
 * cdef class MuTauTree:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_my_warning_format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_warnings); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_t_2, __pyx_n_s_formatwarning, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "MuTauTree.pyx":3
 * 
 * 
 * # Load relevant ROOT C++ headers             # <<<<<<<<<<<<<<
 * cdef extern from "TObject.h":
 *     cdef cppclass TObject:
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init MuTauTree", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init MuTauTree");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
#else
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
#endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}

static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method, *result = NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely(PyMethod_Check(method))) {
        PyObject *self = PyMethod_GET_SELF(method);
        if (likely(self)) {
            PyObject *args;
            PyObject *function = PyMethod_GET_FUNCTION(method);
            args = PyTuple_New(2);
            if (unlikely(!args)) goto bad;
            Py_INCREF(self);
            PyTuple_SET_ITEM(args, 0, self);
            Py_INCREF(arg);
            PyTuple_SET_ITEM(args, 1, arg);
            Py_INCREF(function);
            Py_DECREF(method); method = NULL;
            result = __Pyx_PyObject_Call(function, args, NULL);
            Py_DECREF(args);
            Py_DECREF(function);
            return result;
        }
    }
#endif
    result = __Pyx_PyObject_CallOneArg(method, arg);
bad:
    Py_XDECREF(method);
    return result;
}

#include <structmember.h>
#include <frameobject.h>
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
#if PY_VERSION_HEX >= 0x030300A0
        if (ev && Py_TYPE(ev) == (PyTypeObject*)PyExc_StopIteration) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
#endif
        if (!ev || !PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            if (!ev) {
                Py_INCREF(Py_None);
                ev = Py_None;
            } else if (PyTuple_Check(ev)) {
                if (PyTuple_GET_SIZE(ev) >= 1) {
                    PyObject *value;
#if CYTHON_COMPILING_IN_CPYTHON
                    value = PySequence_ITEM(ev, 0);
#else
                    value = PyTuple_GET_ITEM(ev, 0);
                    Py_INCREF(value);
#endif
                    Py_DECREF(ev);
                    ev = value;
                } else {
                    Py_INCREF(Py_None);
                    Py_DECREF(ev);
                    ev = Py_None;
                }
            }
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = ev;
            return 0;
        }
    } else if (!PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
#endif
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__pyx_CoroutineObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
int __Pyx_Coroutine_CheckRunning(__pyx_CoroutineObject *gen) {
    if (unlikely(gen->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return 1;
    }
    return 0;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value) {
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    if (value) {
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyThreadState *tstate = PyThreadState_GET();
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval) {
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
#if CYTHON_COMPILING_IN_PYPY
#else
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_CLEAR(f->f_back);
        }
#endif
    } else {
        __Pyx_Coroutine_ExceptionClear(self);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject *retval) {
    if (unlikely(!retval && !PyErr_Occurred())) {
        PyErr_SetNone(PyExc_StopIteration);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen_FetchStopIterationValue(&val);
    ret = __Pyx_Coroutine_SendEx(gen, val);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = PyIter_Next(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value);
    }
    return __Pyx_Coroutine_MethodReturn(retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (!raised_exception
        || raised_exception == PyExc_StopIteration
        || raised_exception == PyExc_GeneratorExit
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_GeneratorExit)
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_StopIteration))
    {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    PyObject *yf = gen->yieldfrom;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    if (unlikely(__Pyx_Coroutine_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit)) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
            goto throw_here;
        }
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Throw(yf, args);
        } else
        #endif
        {
            PyObject *meth = __Pyx_PyObject_GetAttrStr(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            ret = PyObject_CallObject(meth, args);
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(__Pyx_Coroutine_SendEx(gen, NULL));
}
static int __Pyx_Coroutine_traverse(PyObject *self, visitproc visit, void *arg) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label > 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1
        if (PyObject_CallFinalizerFromDealloc(self))
#else
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
    __Pyx_Coroutine_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    if (gen->resume_label <= 0)
        return ;
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
#endif
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Coroutine_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if PY_VERSION_HEX < 0x030400a1
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0) {
        return;
    }
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self)
{
    Py_INCREF(self->gi_name);
    return self->gi_name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_name;
    Py_INCREF(value);
    self->gi_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self)
{
    Py_INCREF(self->gi_qualname);
    return self->gi_qualname;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value))) {
#else
    if (unlikely(value == NULL || !PyString_Check(value))) {
#endif
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = self->gi_qualname;
    Py_INCREF(value);
    self->gi_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(PyTypeObject* type, __pyx_coroutine_body_t body,
                                                   PyObject *closure, PyObject *name, PyObject *qualname) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    PyObject_GC_Track(gen);
    return gen;
}

static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (!abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_VERSION_HEX >= 0x03030000) ? "collections.abc" : "collections");
        if (!module) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_VERSION_HEX >= 0x03030000) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if (0) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {0, 0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if PY_VERSION_HEX >= 0x030400a1
    __Pyx_Coroutine_del,
#endif
};
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = PyObject_GenericGetAttr;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
